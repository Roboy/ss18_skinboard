/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : SS1.h
**     Project     : try2_codewarrior
**     Processor   : MC56F8006_48_LQFP
**     Component   : SynchroSlave
**     Version     : Component 02.252, Driver 02.04, CPU db: 3.00.209
**     Compiler    : CodeWarrior DSP C Compiler
**     Date/Time   : 2018-08-12, 15:32, # CodeGen: 1
**     Abstract    :
**         This component "SynchroSlave" implements SLAVE part of synchronous
**         serial master-slave communication.
**     Settings    :
**         Synchro type                : SLAVE
**
**         Serial channel              : SPI
**
**         Protocol
**             Clock edge              : rising
**             Width                   : 8 bits
**             Empty character         : 0
**             Empty char. on input    : RECEIVED
**
**         Registers
**             Input buffer            : SPI_DRCV  [F102]
**             Output buffer           : SPI_DXMIT [F103]
**             Control register        : SPI_SCTRL [F100]
**             Mode register           : SPI_DSCTRL [F101]
**             Baud setting reg.       : SPI_SCTRL [F100]
**
**         Input interrupt
**             Vector name             : INT_SPI_Rx_Full_Over_ModeFault
**             Priority                : 0
**
**         Output interrupt
**             Vector name             : INT_SPI_Tx_Empty
**             Priority                : 0
**
**         Used pins                   :
**         ----------------------------------------------------------
**              Function    | On package |    Name
**         ----------------------------------------------------------
**               Input      |     24     |  GPIOB3_ANA3_ANB3_PWM5_MOSI_TIN3_CMP1_OUT
**               Output     |     25     |  GPIOB2_ANA2_ANB2_MISO_TIN2_CMP0_OUT
**               Clock      |     4      |  GPIOB5_FAULT3_SCLK_T1
**           Select slave   |     2      |  GPIOB1_ANA12_SSB_SDA_CMP2_P3
**         ----------------------------------------------------------
**     Contents    :
**         RecvChar        - byte SS1_RecvChar(SS1_TComData *Chr);
**         SendChar        - byte SS1_SendChar(SS1_TComData Chr);
**         GetCharsInRxBuf - word SS1_GetCharsInRxBuf(void);
**         GetCharsInTxBuf - word SS1_GetCharsInTxBuf(void);
**         GetError        - byte SS1_GetError(SS1_TError *Err);
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file SS1.h
** @version 02.04
** @brief
**         This component "SynchroSlave" implements SLAVE part of synchronous
**         serial master-slave communication.
*/         
/*!
**  @addtogroup SS1_module SS1 module documentation
**  @{
*/         

#ifndef __SS1
#define __SS1

/* MODULE SS1. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"

#include "Cpu.h"


#ifndef __BWUserType_SS1_TError
#define __BWUserType_SS1_TError
  typedef union {
    byte err;
    struct {
      /*lint -save  -e46 Disable MISRA rule (6.4) checking. */
      bool OverRun  : 1;               /* OverRun error flag */
      bool RxBufOvf : 1;               /* Rx buffer full error flag */
      bool FaultErr : 1;               /* Fault mode error flag */
      /*lint -restore Enable MISRA rule (6.4) checking. */
    }errName;
  } SS1_TError;                        /* Error flags. For languages which don't support bit access is byte access only to error flags possible. */
#endif

#define SS1_EOF 0                      /* Empty character*/

#ifndef __BWUserType_SS1_TComData
#define __BWUserType_SS1_TComData
  typedef byte SS1_TComData;           /* User type for communication. Size of this type depends on the communication data witdh. */
#endif



byte SS1_RecvChar(SS1_TComData *Chr);
/*
** ===================================================================
**     Method      :  SS1_RecvChar (component SynchroSlave)
**     Description :
**         If any data is received, this method returns one character,
**         otherwise it returns an error code (it does not wait for
**         data). 
**         For information about SW overrun behavior please see
**         <General info page>.
**         [ Version specific information for Freescale 56800
**         derivatives ] 
**         DMA mode:
**         If DMA controller is available on selected CPU and receiver
**         is configured to use DMA controller then this method only
**         sets the selected DMA channel. Status of the DMA transfer
**         can then be checked using method GetCharsInRxBuf. See
**         typical usage for details about communication using DMA.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Chr             - A pointer to the received character
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_RXEMPTY - No data in receiver
**                           ERR_OVERRUN - Overrun error is detected
**                           from the last char or block received. In
**                           polling mode, this error code is returned
**                           only when the hardware supports detection
**                           of the overrun error. 
**                           ERR_FAULT - Fault error was detected from
**                           the last char or block received. This error
**                           does not need to be supported on some Cpu
**                           (see generated code).
** ===================================================================
*/

byte SS1_SendChar(SS1_TComData Chr);
/*
** ===================================================================
**     Method      :  SS1_SendChar (component SynchroSlave)
**     Description :
**         Sends one character to the channel.
**         [ Version specific information for Freescale 56800
**         derivatives ] 
**         DMA mode:
**         If DMA controller is available on the selected CPU and the
**         transmitter is configured to use DMA controller then this
**         method only sets the selected DMA channel. The status of the
**         DMA transfer can then be checked using GetCharsInTxBuf
**         method. See the typical usage for details about
**         communication using DMA.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Chr             - Character to send
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_DISABLED -  Device is disabled (only if
**                           output DMA is supported and enabled)
**                           ERR_TXFULL - Transmitter is full
** ===================================================================
*/

word SS1_GetCharsInRxBuf(void);
/*
** ===================================================================
**     Method      :  SS1_GetCharsInRxBuf (component SynchroSlave)
**     Description :
**         Returns the number of characters in the input buffer.
**         Note: If the Interrupt service is disabled, and the Ignore
**         empty character is set to yes, and a character has been
**         received, then this method returns 1 although it was an
**         empty character.
**         [ Version specific information for Freescale 56800
**         derivatives ] 
**         DMA mode:
**         If DMA controller is available on the selected CPU and the
**         receiver is configured to use DMA controller then this
**         method returns the number of characters in the receive
**         buffer.
**     Parameters  : None
**     Returns     :
**         ---             - Number of characters in the input buffer.
** ===================================================================
*/

word SS1_GetCharsInTxBuf(void);
/*
** ===================================================================
**     Method      :  SS1_GetCharsInTxBuf (component SynchroSlave)
**     Description :
**         Returns the number of characters in the output buffer.
**         [ Version specific information for Freescale 56800
**         derivatives ] 
**         DMA mode:
**         If DMA controller is available on the selected CPU and the
**         transmitter is configured to use DMA controller then this
**         method returns the number of characters in the transmit
**         buffer.
**     Parameters  : None
**     Returns     :
**         ---             - Number of characters in the output buffer.
** ===================================================================
*/

byte SS1_GetError(SS1_TError *Err);
/*
** ===================================================================
**     Method      :  SS1_GetError (component SynchroSlave)
**     Description :
**         Returns a set of errors on the channel (errors that cannot
**         be returned in given methods). The component accumulates
**         errors in a set; after calling [GetError] this set is
**         returned and cleared. This method is available only if the
**         "Interrupt service/event" property is enabled.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Err             - A pointer to the returned set of errors
**     Returns     :
**         ---             - Error code (if GetError did not succeed),
**                           possible codes:
**                           ERR_OK - OK
** ===================================================================
*/

void SS1_InterruptRx(void);
/*
** ===================================================================
**     Method      :  SS1_InterruptRx (component SynchroSlave)
**
**     Description :
**         The method services the interrupt of the selected peripheral(s)
**         and eventually invokes the beans event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

void SS1_Init(void);
/*
** ===================================================================
**     Method      :  SS1_Init (component SynchroSlave)
**
**     Description :
**         Initializes the associated peripheral(s) and the beans 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

/* END SS1. */

#endif /* ifndef __SS1 */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
