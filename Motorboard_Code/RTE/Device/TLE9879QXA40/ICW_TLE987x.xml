<?xml version="1.0" encoding="UTF-8" ?><!--sha256=20F418D828BE1C2D82EFF4D6EF477C001931D8743EBAA57E9232FB5BFF1BFB38-->
<!--file ePower.xml                                                                -->
<!--brief ePower Modules configuration                                             -->
<!--                                                                                -->
<!--You can use this file under the terms of the IFX License.                       -->
<!--                                                                                -->
<!--This file is distributed in the hope that it will be useful,                    -->
<!--but WITHOUT ANY WARRANTY; without even the implied warranty of                  -->
<!--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   -->
<!--IFX License for more details (IFX_License.txt).                                 -->
<!--                                                                                -->
<!--This file may be used, copied, and distributed, with or without                 -->
<!--modification, provided that all copyright notices are retained;                 -->
<!--that all modifications to this file are prominently noted in the                -->
<!--modified file; and that this paragraph is not modified.                         -->
<!--                                                                                -->
<!--copyright Copyright (C) 2012 Infineon Technologies AG                           -->
<!--                                                                                -->
<!--********************************************************************************-->
<!--**        Infineon ePower Family TLE986x/7x Module Configuration Files        **-->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--**                      Author(s) Identity                                    **-->
<!--********************************************************************************-->
<!--** Initials     Name                                                          **-->
<!--** DM           Daniel Mysliwitz                                              **-->
<!--** TA           Thomas Albersinger                                            **-->
<!--**                                                                            **-->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--**                      Revision Control History                              **-->
<!--********************************************************************************-->
<!--*                                                                              *-->
<!--* V1.0.0: 2014-05-04, DM:   Initial version                                    *-->
<!--* V1.0.1: 2014-05-08, TA:   Synchronize PORT defines with latest port.xml      *-->
<!--* V1.0.2: 2014-07-03, DM:   merging of all module XMLs into one XML            *-->
<!--* V1.0.3: 2014-07-14, DM:   CCU6: Idle mode moved into HALL configuration      *-->
<!--* V1.0.4: 2014-10-02, DM:   default values added for UART1/2_MAN_BAUD          *-->
<!--*                           default values added for SSC1/2_MAN_BAUD           *-->
<!--* V1.0.5: 2014-10-13, DM:   MF_VMON_SEN_CTRL added                             *-->
<!--* V1.0.6: 2014-10-15, DM:   EXINT0,1,2 pin select updated                      *-->
<!--*                           ADC1: VAREF enable added                           *-->
<!--*                           Clock Out Function: expected frequency added       *-->
<!--* V1.0.7: 2014-11-02, DM:   EXINT0,1,2 trigger selection reorganized           *-->
<!--*                           GPT12E - T3/T6 OTL preset added                    *-->
<!--*                           TIMER2/21: timer values for input added            *-->
<!--* V1.0.8: 2014-11-20, DM:   CCU6 Timer12/13 timer settings enhanced            *-->
<!--* V1.0.9: 2014-12-18, DM:   CCU6 Timer12 clock prescaler fixed                 *-->
<!--*                           MON wakeup enabled by default                      *-->
<!--* V1.1.0: 2015-01-05, DM:   module individual header files                     *-->
<!--* V1.1.1: 2015-01-10, DM:   Timer21 - External Start Enable lock to P1.2       *-->
<!--*                           removed                                            *-->
<!--* V1.1.2: 2015-02-06, DM:   module individual extended to define individual    *-->
<!--*                           XML version raised to V0.3                         *-->
<!--*                           default NAC = 40ms                                 *-->
<!--*                           MON enabled by default                             *-->
<!--* V1.1.3: 2015-02-24, DM:   SCU_EXICON0 added to scu_defines.h                 *-->
<!--*                           ADC2: ADC2_CH9_UPTH_DEG locked to 200              *-->
<!--* V1.1.4: 2015-03-17, DM:   Timer3-Mode1 remove lock on HighByte interrupt     *-->
<!--*                           Timer3-Mode1 Timer value calculation corrected     *-->
<!--*                           ADC1: VAREF enable fixed to MF_REF2_CTRL[0]        *-->
<!--* V1.1.5: 2015-06-15, DM:   SSC1 Pin select receiver input lock corrected      *-->
<!--* V1.1.6: 2015-07-02, DM:   BE-Step implementation (not backward compatible)   *-->
<!--*                           interrupt_defines renamed to int_defines           *-->
<!--*                           epower_defines renamed to bsl_defines              *-->
<!--*                           BEMF configuration added                           *-->
<!--*                           BDRV: DS monitoring thresholds adapted for BE-Step *-->
<!--*                           ADC1: Ch-6 is now VDH for BE-Step                  *-->
<!--*                           CCU6: dead time calculation corrected              *-->
<!--*                           UART: STDIN/STDOUT selection added                 *-->
<!--* V1.1.7: 2015-07-24, DM:   BDRV: driver shutdown on VSD/VCP UV/OV wording     *-->
<!--*                           corrected to reflect real functionality            *-->
<!--* V1.1.8: 2015-08-25, DM:   CCU6: T12/T13 period calculation corrected         *-->
<!--*                           INT: Interrupt Priority label corrected            *-->
<!--*                                SysTick Interrupt Priority selection added    *-->
<!--* V1.1.9: 2015-11-19, DM:   PORT: function grouping changed                    *-->
<!--*                           DMA: channel assignemt and source selection added  *-->
<!--*                           ADC1: channel 7 added                              *-->
<!--* V1.2.0: 2015-12-07, DM:   PMU: Port as wakeup source locking moved from      *-->
<!--*                           StopMode to SleepMode                              *-->
<!--*                           MON wakeup, cyclic sense added                     *-->
<!--*                           TLE9873 added                                      *-->
<!--*                           OSC_CON set based on XTAL selection                *-->
<!--* V1.2.1: 2016-01-19, DM:   CCU6: Pin Sel., CSPOSx BEMF input assignemt fixed  *-->
<!--*                           MON: MON_CNF header file definition set            *-->
<!--* V1.2.2: 2016-06-15, DM:   BEMF: GPT2.CAPIN configuration fixed               *-->
<!--* V1.2.3: 2016-09-16, DM:   UART2: PISEL selection fixed                       *-->
<!--                            SCU: internal Oscillator Frequency override set    *-->
<!--                            to min. 3MHz                                       *-->
<!--                            GPT12: T3IND connected to MON                      *-->
<!--*                           BDRV: charge pump clock setting improved           *-->
<!--*                           BDRV: Cross-Current protection multiplier added    *-->
<!--* V1.2.4: 2017-03-31, DM:   UARTs: baudrate generators set to run by default   *-->
<!--*                           WDT: mode selection corrected                      *-->
<!--*                           ADC1: Emergency modes renamed in Exceptional Mode  *-->
<!--*                           ADC2: Clock Configuration renamed in Sample Time   *-->
<!--*                                 configuration                                *-->
<!--*                           ADC2: channel measurement mode added               *-->
<!--*                           BDRV: Charge Pump low power mode selection corr.   *-->
<!--*                           BEMF: BEMF setting moved into separated module     *-->
<!--*                           CCU6: Dead Timer calculation correct               *-->
<!--*                           CCU6: Interrupt Node Enable, SR0 enabled by default*-->
<!--*                           GPT12: GPT1 Clock pull down box items sorted       *-->
<!--*                           GPT12: Timer2 Clock Clock calculation corrected    *-->
<!--*                           GPT12: Timer2 - Timer Mode Clock pull down box     *-->
<!--*                                  corrected                                   *-->
<!--*                           GPT12: Timer2 - Gated Timer Modes Clock pull down  *-->
<!--*                                  box corrected                               *-->
<!--*                           GPT12: Timer2 - T2 Timer Value renamed, T2 removed *-->
<!--*                           GPT12: Timer2 - T2 Pin Select renamed, T2 removed  *-->
<!--*                           GPT12: Timer3 Clock Clock calculation corrected    *-->
<!--*                           GPT12: Timer3 - Timer Mode Clock pull down box     *-->
<!--*                                  corrected                                   *-->
<!--*                           GPT12: Timer3 - Gated Timer Modes Clock pull down  *-->
<!--*                                  box corrected                               *-->
<!--*                           GPT12: Timer3 - T3 OTL renamed, T3 removed         *-->
<!--*                           GPT12: Timer3 - T3 Timer Value renamed, T3 removed *-->
<!--*                           GPT12: Timer3 - T3 Pin Select renamed, T3 removed  *-->
<!--*                           GPT12: Timer4 Clock Clock calculation corrected    *-->
<!--*                           GPT12: Timer4 - Timer Mode Clock pull down box     *-->
<!--*                                  corrected                                   *-->
<!--*                           GPT12: Timer4 - Gated Timer Modes Clock pull down  *-->
<!--*                                  box corrected                               *-->
<!--*                           GPT12: Timer4 - T4 Timer Value renamed, T4 removed *-->
<!--*                           GPT12: Timer4 - T4 Pin Select renamed, T4 removed  *-->
<!--*                           GPT12: GPT2 Clock pull down box items sorted       *-->
<!--*                           GPT12: Timer5 Clock Clock calculation corrected    *-->
<!--*                           GPT12: Timer5 - Timer Mode Clock pull down box     *-->
<!--*                                  corrected                                   *-->
<!--*                           GPT12: Timer5 - Gated Timer Modes Clock pull down  *-->
<!--*                                  box corrected                               *-->
<!--*                           GPT12: Timer5 - Counter Modes Input Edge Selection *-->
<!--*                                  encoding corrected                          *-->
<!--*                           GPT12: Timer5 - T5 Timer Value renamed, T5 removed *-->
<!--*                           GPT12: Timer5 - T5 Pin Select renamed, T5 removed  *-->
<!--*                           GPT12: Timer6 Clock Clock calculation corrected    *-->
<!--*                           GPT12: Timer6 - Timer Mode Clock pull down box     *-->
<!--*                                  corrected                                   *-->
<!--*                           GPT12: Timer6 - Gated Timer Modes Clock pull down  *-->
<!--*                                  box corrected                               *-->
<!--*                           GPT12: Timer6 - T6 OTL renamed, T6 removed         *-->
<!--*                           GPT12: Timer6 - T6 Timer Value renamed, T6 removed *-->
<!--*                           GPT12: Timer6 - T6 Pin Select renamed, T6 removed  *-->
<!--*                           DMA: Ch3, increment encoding corrected             *-->
<!--*                           SCU: PLL Selection, N-Multiplier 26 added          *-->
<!--* V1.3.0: 2017-07-08, DM:   separation of device description for TLE986x-      *-->
<!--*                           series, and TLE987x-series                         *-->
<!--*                           "ePower" tab renamed to "Boot Strap Loader"        *-->
<!--*                           "Device" selection removed                         *-->
<!--*                           ADC2.Ch0 configuration removed as TLE986x only     *-->
<!--*                           ADC2.Ch4 (MON) interrupt handling corrected        *-->
<!--*                           LIN End-of-Synch, Error-in-Synch interrupt added   *-->
<!--*                           LIN Synch Break recoginition range (BGSEL) calc.   *-->
<!--*                           LIN Baudrate detection selection added (config.    *-->
<!--*                           Timer2)                                            *-->
<!--*                           Interrupt definition structure enhanced            *-->
<!--*                           GPT12E.T2/T4 Capture Mode TxIN assignemt changed   *-->
<!--*                           GPT12E.T6 T6IN pin assignemt changed               *-->
<!--*                           Port1 Open Drain configuration updated             *-->
<!--*                           GPT12E.T5 Interrupt callback header file           *-->
<!--*                           assignment corrected                               *-->
<!--*                           DMA.Ch2 trigger assignemt corrected, SSC1 only     *-->
<!--*                           DMA.Ch3 trigger assignemt corrected, SSC1 only     *-->
<!--*                           DMA.Ch9 user source select added, in case ADC is   *-->
<!--*                           selected as trigger                                *-->
<!--*                           DMA Scatter-Gather mode added                      *-->
<!--********************************************************************************-->
<ifxmlcfg version="0.3">
	<version label="V1.3.0"/>
	<module label="Boot Strap Loader" desc="Infineon Embedded Power">
		<header define="bsl_defines.h">
			<button label="NAC/NAD Configuration" define="NAC_NAD_EN" default="1">
				<combo label="BSL Interface Select" define="_NAC_[7:6]" default="Fast LIN">
					<item label="!! Normal LIN - will be discontinued with BF-Step - !!"/>
					<item label="Fast LIN"/>
					<item label="UART"/>
				</combo>
				<combo label="BSL Active Time (NAC)" define="_NAC_[5:0]" default="40 ms">
					<item label="BSL deactivated" value="1"/>
					<item label="5 ms" value="2"/>
					<item label="10 ms" value="3"/>
					<item label="15 ms" value="4"/>
					<item label="20 ms" value="5"/>
					<item label="25 ms" value="6"/>
					<item label="30 ms" value="7"/>
					<item label="35 ms" value="8"/>
					<item label="40 ms" value="9"/>
					<item label="45 ms" value="10"/>
					<item label="50 ms" value="11"/>
					<item label="55 ms" value="12"/>
					<item label="infinite" value="15"/>
				</combo>
				<edit label="NAD value (Normal LIN only)" define="_NAD_[7:0]" default="1"/>
				<math label="" role="hex" define="NAD_NAC[31:0]" formula="(_NAD_[7:0].^0xFF)*0x1000000+_NAD_[7:0]*0x10000+(_NAC_[7:6].^0x3)*0x100*0x40+(_NAC_[5:0].^0x3F)*0x100+_NAC_[7:6]*0x40+_NAC_[5:0]"/>
			</button>
		</header>
	</module>
	<module label="SCU" desc="System Control Unit">
		<math label="fSYS" unit="MHz" define="SCU_PLL_fPLL" header="scu_defines.h" formula="(SCU_XTAL_EN&lt;1?(SCU_INT_OSC_OVERRIDE_EN?SCU_INT_OSC:5):SCU_XTAL_FREQ)*$SCU_PLL_CON[7:4]/$SCU_CMCON1[5:4]"/>
		<branch label="Clock Configuration">
			<math label="" define="SCU_OSC_CON[7:0]" role="hex" header="scu_defines.h" formula="SCU_XTAL_EN&lt;1?0x90:0x81"/>
			<button label="Override Internal Oscillator Frequency" define="SCU_INT_OSC_OVERRIDE_EN" header="scu_defines.h" >
				<edit label="Int. fOSC [MHz]" define="SCU_INT_OSC" range="3.0;6.0" default="5.0" header="scu_defines.h"/>
			</button>
			<radio define="SCU_AUTO_FSYS_SEL" header="scu_defines.h">
				<button label="Automatic Clock Configuration" lockon="SCU_XTAL_EN=0" header="scu_defines.h" >
					<combo  label="fSYS" define="SCU_AUTO_FSYS[31:0]" default="24000000" header="scu_defines.h" >
						<item label="40 MHz" value="40000000" lockon="SCU_PLL_CON[7:4]=16;SCU_CMCON1[5:4]=2;SCU_APCLK1[1:0]=fSYS / 2;SCU_APCLK2[4:0]=19;SCU_CMCON1[7]=48-112MHz"/>
						<item label="33.3 MHz" value="33333333" lockon="SCU_PLL_CON[7:4]=20;SCU_CMCON1[5:4]=3;SCU_APCLK1[1:0]=fSYS / 2;SCU_APCLK2[4:0]=15;SCU_CMCON1[7]=48-112MHz"/>
						<item label="24 MHz" value="24000000" lockon="SCU_PLL_CON[7:4]=24;SCU_CMCON1[5:4]=5;SCU_APCLK1[1:0]=fSYS;SCU_APCLK2[4:0]=11;SCU_CMCON1[7]=96-160MHz"/>
						<item label="20 MHz" value="20000000" lockon="SCU_PLL_CON[7:4]=16;SCU_CMCON1[5:4]=4;SCU_APCLK1[1:0]=fSYS;SCU_APCLK2[4:0]=9;SCU_CMCON1[7]=48-112MHz"/>
						<item label="12 MHz" value="12000000" lockon="SCU_PLL_CON[7:4]=12;SCU_CMCON1[5:4]=5;SCU_APCLK1[1:0]=fSYS;SCU_APCLK2[4:0]=5;SCU_CMCON1[7]=48-112MHz"/>
						<item label="10 MHz" value="10000000" lockon="SCU_PLL_CON[7:4]=8;SCU_CMCON1[5:4]=4;SCU_APCLK1[1:0]=fSYS;SCU_APCLK2[4:0]=4;SCU_CMCON1[7]=48-112MHz"/>
					</combo>
				</button>
				<button label="Manual Clock Configuration">
					<button define="SCU_XTAL_EN" label="Enable external XTAL" header="scu_defines.h">
						<edit define="SCU_XTAL_FREQ" label="XTAL Frequency (MHz)"  header="scu_defines.h" default="5" range="5;25"/>
					</button>
					<branch label="PLL Setting">
						<combo label="N-Multiplier" define="SCU_PLL_CON[7:4]"  header="scu_defines.h" default="16">
							<item label="8"/>
							<item label="9"/>
							<item label="10"/>
							<item label="12"/>
							<item label="14"/>
							<item label="15"/>
							<item label="16"/>
							<item label="18"/>
							<item label="20"/>
							<item label="21"/>
							<item label="22"/>
							<item label="24"/>
							<item label="25"/>
							<item label="26"/>
							<item label="27"/>
							<item label="28"/>
						</combo>
						<combo label="K2-Divider" define="SCU_CMCON1[5:4]" header="scu_defines.h" >
							<item label="2"/>
							<item label="3"/>
							<item label="4"/>
							<item label="5"/>
						</combo>
						<combo label="VCO Range" define="SCU_CMCON1[7]" header="scu_defines.h" >
							<item label="48-112MHz"/>
							<item label="96-160MHz"/>
						</combo>
						<math label="fSYS" unit="Hz" define="SCU_FSYS"  header="scu_defines.h" formula="(SCU_XTAL_EN&lt;1?(SCU_INT_OSC_OVERRIDE_EN?SCU_INT_OSC:5)*1000000:SCU_XTAL_FREQ*1000000)*$SCU_PLL_CON[7:4]/$SCU_CMCON1[5:4]"/>
					</branch>
					<branch label="Analog Clock Configuration">
						<combo label="MI_CLK (~20MHz)" define="SCU_APCLK1[1:0]"  header="scu_defines.h" default="fSYS">
							<item label="fSYS" value="0"/>
							<item label="fSYS / 2" value="1"/>
							<item label="fSYS / 3" value="2"/>
							<item label="fSYS / 4" value="3"/>
						</combo>
						<math label="MI_CLK (should be ~20MHz)" unit="MHz" define="SCU_APCLK_MI_CLK"  header="scu_defines.h" formula="SCU_PLL_fPLL/(SCU_APCLK1[1:0]+1)"/>
						<edit label="Filter Clock Divider" define="SCU_APCLK2[4:0]"  header="scu_defines.h" default="9"/>
						<math label="Filter Clock (~2MHz)" unit="MHz" define="SCU_APCLK_FILT_CLK"  header="scu_defines.h" formula="SCU_PLL_fPLL/(SCU_APCLK2[4:0]+1)"/>
					</branch>
				</button>
			</radio>
		</branch>
		<button define="SCU_COCON[7]" label="Clock out enable" header="scu_defines.h" >
			<radio define="SCU_COCON[6]" default="1" header="scu_defines.h" >
				<button label="Output f_CCLK"/>
				<button label="Select further">
					<radio define="SCU_COCON[4]" default="1" header="scu_defines.h" >
						<button label="Output f_OSC"/>
						<button label="Output fSYS">
							<combo define="SCU_COCON[3:0]" label="Clock Out Divider [fSYS/n]"  header="scu_defines.h" default="40">
								<item label="1"/>
								<item label="2"/>
								<item label="3"/>
								<item label="4"/>
								<item label="6"/>
								<item label="8"/>
								<item label="10"/>
								<item label="12"/>
								<item label="14"/>
								<item label="16"/>
								<item label="18"/>
								<item label="20"/>
								<item label="24"/>
								<item label="32"/>
								<item label="36"/>
								<item label="40"/>
							</combo>
							<button label="Ensure 50% duty cycle" define="SCU_COCON[5]"  header="scu_defines.h" default="1"/>
						</button>
					</radio>
				</button>
			</radio>
			<combo define="SCU_PINSEL" label="Clock Out Pin Select" header="scu_defines.h" >
				<item label="P0.4" lockon="PORT_P0_DIR[4]=Output;PORT_P0_4_ALT[1:0]=CLKOUT_0"/>
				<item label="P1.4" lockon="PORT_P1_DIR[4]=Output;PORT_P1_4_ALT[1:0]=CLKOUT_1"/>
			</combo>
			<math label="Clock Out Frequency at selected GPIO" unit="MHz" define="SCU_CKOUT_FREQ"  header="scu_defines.h" formula="SCU_COCON[6]&lt;1?SCU_PLL_fPLL:SCU_COCON[4]&lt;1?(SCU_INT_OSC_OVERRIDE_EN?SCU_INT_OSC:5):(SCU_PLL_fPLL/($SCU_COCON[3:0]*(SCU_COCON[5]&lt;1?1:2)))"/>
		</button>
		<branch label="WDT1 (mandatory watchdog)">
			<edit label="Watchdog Period [ms]" define="SCUPM_WDT1_PERIOD_EDIT"  header="scu_defines.h" default="1008" range="16;1008"/>
			<math label="Watchdog Period effectiv" unit="ms" define="SCUPM_WDT1_PERIOD"  header="scu_defines.h" formula="trunc(SCUPM_WDT1_PERIOD_EDIT/16)*16"/>
			<math label="" define="SCUPM_WDT1_TRIG[5:0]" header="scu_defines.h" formula="SCUPM_WDT1_PERIOD/16"/>
			<math label="" define="SCUPM_WDT1_TRIGGER" header="scu_defines.h" formula="trunc(SCUPM_WDT1_PERIOD*0.694)"/>
		</branch>
		<button define="SCU_WDTCON[2]" label="WDT enable (optional watchdog)" header="scu_defines.h" >
			<combo define="SCU_WDTCON[0]" label="Clock Select" header="scu_defines.h" >
				<item label="fPCLK / 2"/>
				<item label="fPCLK / 128"/>
			</combo>
			<branch label="Reload Value">
				<radio define="SCU_WDT_TIME_SEL" header="scu_defines.h">
					<button label="...as clock ticks" >
						<edit label="Value [ticks]" define="SCU_WDT_TIME_TICK[7:0]" header="scu_defines.h" default="1" />
					</button>
					<button label="...as time [us]" >
						<edit label="Time [us]" define="SCU_WDT_TIME_TIME" header="scu_defines.h" default="1"/>
					</button>
				</radio>
			</branch>
			<math label="WDT Period" unit="ticks" define="SCU_WDTRL[7:0]" header="scu_defines.h" formula="SCU_WDT_TIME_SEL?floor(SCU_WDT_TIME_TIME*(SCU_PLL_fPLL/(SCU_WDTCON[0]?128:2))):(SCU_WDT_TIME_TICK[7:0])"/>
			<button define="SCU_WDTCON[5]" label="Window Boundary Enable" header="scu_defines.h" >
				<edit define="SCU_WDTWINB" label="Window Boundary Count" header="scu_defines.h" default="128" range="0;255"/>
			</button>
		</button>
		<branch label="NVM Protection">
			<button label="Code Flash Write Protection" define="SCU_CFLASH_WPROT" header="scu_defines.h" default="1">
				<edit label="Password [16bit]" define="SCU_CFLASH_WPROT_PW" header="scu_defines.h" default="0"/>
			</button>
			<button label="Data Flash Write Protection" define="SCU_DFLASH_WPROT" header="scu_defines.h" default="0">
				<edit label="Password [16bit]" define="SCU_DFLASH_WPROT_PW" header="scu_defines.h" default="0"/>
			</button>
		</branch>
	</module>
	<module label="PMU" desc="Power Management Unit">
		<header define="pmu_defines.h">
			<branch label="VDDEXT">
				<button label="Turned on" define="PMU_VDDEXT_CTRL[0]"/>
				<button label="Cyclic Sense enable" define="PMU_VDDEXT_CTRL[1]"/>
				<branch label="Fail Interrupt">
					<button label="Short" define="PMU_VDDEXT_SHORT_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
						<button label="Enable Interrupt" define="PMU_VDDEXT_FAIL[0]" header="int_defines.h"/>
						<edit label="Call Back" define="PMU_VDDEXT_SHORT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Over Voltage" define="PMU_VDDEXT_OV_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
						<button label="Enable Interrupt" define="PMU_VDDEXT_FAIL[1]" header="int_defines.h"/>
						<edit label="Call Back" define="PMU_VDDEXT_OV_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Over Load" define="PMU_VDDEXT_OL_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
						<button label="Enable Interrupt" define="PMU_VDDEXT_FAIL[2]" header="int_defines.h"/>
						<edit label="Call Back" define="PMU_VDDEXT_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<math label="" define="PMU_VDDEXT_CTRL[2]" formula="PMU_VDDEXT_FAIL[0] .+ PMU_VDDEXT_FAIL[1] .+ PMU_VDDEXT_FAIL[2]"/>
				</branch>
				<button label="disable shutdown in over load condition" define="PMU_CNF_PMU_SETTING[7]"/>
			</branch>
			<branch label="Wake Up Sources">
				<button label="Cyclic Wake enable" define="PMU_CNF_PMU_SETTING[2]">
					<edit label="Wake up after [ms]" define="PMU_CYC_WAKE_TIME" default="2" range="2;2048"/>
					<math label="Wake up Exp" define="PMU_CNF_CYC_WAKE[5:4]" formula="abs(PMU_CYC_WAKE_TIME/2)>=64?3:abs(PMU_CYC_WAKE_TIME/2)>=16?2:abs(PMU_CYC_WAKE_TIME/2)>=4?1:0"/>
					<math label="Wake up Man" define="PMU_CNF_CYC_WAKE[3:0]" formula="trunc((PMU_CYC_WAKE_TIME/(4^PMU_CNF_CYC_WAKE[5:4]))/2)-1"/>
					<math label="Wake up effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU_CYC_WAKE_EFF_TIME" formula="4^PMU_CNF_CYC_WAKE[5:4]*(PMU_CNF_CYC_WAKE[3:0]+1)*2"/>
				</button>
				<button label="Cyclic Sense enable" define="PMU_CNF_PMU_SETTING[3]">
					<edit label="Wake up after [ms]" define="PMU_CYC_SENSE_SLP_TIME" default="2" range="2;2048"/>
					<math label="Cyclic Sense Exp" define="PMU_CNF_CYC_SENSE[5:4]" formula="abs(PMU_CYC_SENSE_SLP_TIME/2)>=64?3:abs(PMU_CYC_SENSE_SLP_TIME/2)>=16?2:abs(PMU_CYC_SENSE_SLP_TIME/2)>=4?1:0"/>
					<math label="Cyclic Sense Man" define="PMU_CNF_CYC_SENSE[3:0]" formula="trunc((PMU_CYC_SENSE_SLP_TIME/(4^PMU_CNF_CYC_SENSE[5:4]))/2)-1"/>
					<math label="Cyclic Sense effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU_CYC_SENSE_EFF_SLP_TIME" formula="4^PMU_CNF_CYC_SENSE[5:4]*(PMU_CNF_CYC_SENSE[3:0]+1)*2"/>
					<edit label="Sense Time [us]" define="PMU_CYC_SENSE_ACT_TIME" default="10" range="10;160"/>
					<math label="Sense Time Man" define="PMU_CNF_CYC_SAMPLE_DEL[3:0]" formula="trunc(PMU_CYC_SENSE_ACT_TIME/10)-1"/>
					<math label="Sense effective Time ((MAN+1)*10us)" unit="us" define="PMU_SENSE_EFF_SLP_TIME" formula="(PMU_CNF_CYC_SAMPLE_DEL[3:0]+1)*10"/>
				</button>
				<button label="LIN wake up" define="PMU_LIN_WAKE_EN[7]">
					<combo label="Wake up Filter" define="PMU_CNF_WAKE_FILTER[0]">
						<item label="30 us"/>
						<item label="50 us"/>
					</combo>
				</button>
				<button label="MON wake up" define="PMU_MON_WAKE" lockon="MON_CNF[0]=1" default="1">
					<button label="wake on rising edge" define="PMU_MON_WAKE_RISE" lockon="MON_CNF[2]=1" default="1"/>
					<button label="wake on falling edge" define="PMU_MON_WAKE_FALL" lockon="MON_CNF[1]=1" default="1"/>
					<button label="cyclic sense" define="MON_CNF[3]" default="0" header="mon_defines.h"/>
					<combo label="Wake up Filter" define="PMU_CNF_WAKE_FILTER[1]">
						<item label="20 us"/>
						<item label="40 us"/>
					</combo>
				</button>
				<branch label="GPIO wake up">
					<button label="PORT0 wake up" define="PMU_PORT0_WAKE">
						<branch label="Pin0">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO0_RISE[0]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO0_FALL[0]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO0_CYC[0]"/>
						</branch>
						<branch label="Pin1">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO0_RISE[1]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO0_FALL[1]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO0_CYC[1]"/>
						</branch>
						<branch label="Pin2">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO0_RISE[2]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO0_FALL[2]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO0_CYC[2]"/>
						</branch>
						<branch label="Pin3">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO0_RISE[3]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO0_FALL[3]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO0_CYC[3]"/>
						</branch>
						<branch label="Pin4">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO0_RISE[4]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO0_FALL[4]"/>	
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO0_CYC[4]"/>
						</branch>
					</button>
					<button label="PORT1 wake up" define="PMU_PORT1_WAKE">
						<branch label="Pin0">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO1_RISE[0]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO1_FALL[0]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO1_CYC[0]"/>
						</branch>
						<branch label="Pin1">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO1_RISE[1]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO1_FALL[1]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO1_CYC[1]"/>
						</branch>
						<branch label="Pin2">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO1_RISE[2]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO1_FALL[2]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO1_CYC[2]"/>
						</branch>
						<branch label="Pin3">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO1_RISE[3]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO1_FALL[3]"/>
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO1_CYC[3]"/>
						</branch>
						<branch label="Pin4">
							<button label="rising edge" define="PMU_WAKE_CONF_GPIO1_RISE[4]"/>
							<button label="falling edge" define="PMU_WAKE_CONF_GPIO1_FALL[4]"/>	
							<button label="cyclic sense" define="PMU_WAKE_CONF_GPIO1_CYC[4]"/>
						</branch>
					</button>
					<combo label="Wake up Filter" define="PMU_CNF_WAKE_FILTER[3:2]" default="40 us">
						<item label="5 us" value="3"/>
						<item label="10 us" value="0"/>
						<item label="20 us" value="1"/>
						<item label="40 us" value="2"/>
					</combo>
				</branch>
			</branch>
			<branch label="Reset Settings">
				<combo label="Blind Time" define="PMU_CNF_RST_TFB[1:0]" default="31 us">
					<item label="0.5 us"/>
					<item label="1 us"/>
					<item label="5 us"/>
					<item label="31 us"/>
				</combo>
			</branch>
			<branch label="Power Saving Modes">
				<button label="Sleep Mode" define="PMU_SLEEP_MODE" lockon="PMU_PORT0_WAKE=0;PMU_PORT1_WAKE=0"/>
				<button label="Stop Mode" define="PMU_STOP_MODE">
					<combo label="VDDC level in Stop Mode" define="PMU_CNF_PMU_SETTING[1]" default="1.5V">
						<item label="0.9V"/>
						<item label="1.5V"/>
					</combo>
					<button label="Exit Stop Mode with Reset" define="PMU_CNF_PMU_SETTING[0]"/>
				</button>
			</branch>
			<branch label="Supply Interrupt">
				<button label="VDDC Over Voltage" define="PMU_VDDC_OV_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
					<button label="Enable Interrupt" define="PMU_VDDC_OV_EN" header="int_defines.h"/>
					<edit label="Call Back" define="PMU_VDDC_OV_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="VDDC Over Load" define="PMU_VDDC_OL_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
					<button label="Enable Interrupt" define="PMU_VDDC_OL_EN" header="int_defines.h"/>
					<edit label="Call Back" define="PMU_VDDC_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<math label="" define="PMU_PMU_SUPPLY_STS[2]" formula="PMU_VDDC_OV_EN .+ PMU_VDDC_OL_EN"/>
				<button label="VDDP Over Voltage" define="PMU_VDDP_OV_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
					<button label="Enable Interrupt" define="PMU_VDDP_OV_EN" header="int_defines.h"/>
					<edit label="Call Back" define="PMU_VDDP_OV_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="VDDP Over Load" define="PMU_VDDP_OL_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
					<button label="Enable Interrupt" define="PMU_VDDP_OL_EN" header="int_defines.h"/>
					<edit label="Call Back" define="PMU_VDDP_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<math label="" define="PMU_PMU_SUPPLY_STS[6]" formula="PMU_VDDP_OV_EN .+ PMU_VDDP_OL_EN"/>
			</branch>
		</header>
	</module>
	<module label="MON" desc="High Voltage Monitor Input">
		<header define="mon_defines.h">
			<button label="MON enable" define="MON_CNF[0]" default="1">
				<button label="wake on rising edge" define="MON_CNF[2]"/>
				<button label="wake on falling edge" define="MON_CNF[1]"/>
				<button label="pull up enable" define="MON_CNF[5]"/>
				<button label="pull down enable" define="MON_CNF[4]"/>
				<button label="Interrupt" define="SCU_MODIEN3[4]" header="scu_defines.h" lockon="CPU_NVIC_ISER0[12]=1">
					<button label="Rising Edge" define="MON_RISING_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="SCU_EXICON0[6]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="MON_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Falling Edge" define="MON_FALLING_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="SCU_EXICON0[7]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="MON_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
		</header>
	</module>
	<module label="Interrupt" desc="System Interrupt">
		<header define="int_defines.h">
			<button label="Global Interrupt enable" define="SCU_IEN0[7]" header="scu_defines.h"/>
			<branch label="NMI">
				<button label="WDT" define="SCU_NMI_WDT_INT_EN" header="isr_defines.h">			
					<button label="Enable Interrupt" define="SCU_NMICON[0]" header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_NMI_WDT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="PLL Loss-of-Lock" define="SCU_NMI_PLL_INT_EN" header="isr_defines.h">			
					<button label="Enable Interrupt" define="SCU_NMICON[1]" header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_NMI_PLL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="NVM operation completed" define="SCU_NMI_NVM_INT_EN" header="isr_defines.h">			
					<button label="Enable Interrupt" define="SCU_NMICON[2]" header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_NMI_NVM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="Over Temperature enable"       define="SCU_NMICON[3]" header="scu_defines.h"/>
				<button label="Oscillator WDT" define="SCU_NMI_OWD_INT_EN" header="isr_defines.h">			
					<button label="Enable Interrupt" define="SCU_NMICON[4]" header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_NMI_OWD_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="NVM mapping error" define="SCU_NMI_MAP_INT_EN" header="isr_defines.h">			
					<button label="Enable Interrupt" define="SCU_NMICON[5]" header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_NMI_MAP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="ECC enable"                    define="SCU_NMICON[6]" header="scu_defines.h"/>
				<button label="Supply Prewarning enable"      define="SCU_NMICON[7]" header="scu_defines.h"/>
			</branch>
			<branch label="ECC Interrupt">
				<button label="RAM Double Bit ECC Error" define="SCU_ECC_RAM_DB_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[6]=1">			
					<button label="Enable Interrupt" define="SCU_EDCCON[0]"  header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_ECC_RAM_DB_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="NVM Double Bit ECC Error" define="SCU_ECC_NVM_DB_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[6]=1">			
					<button label="Enable Interrupt" define="SCU_EDCCON[2]" header="int_defines.h"/>
					<edit label="Call Back"                    define="SCU_ECC_NVM_DB_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
			</branch>
			<branch label="External Interrupt">
				<button label="EXINT0" define="SCU_MODIEN3[0]"  header="scu_defines.h" lockon="CPU_NVIC_ISER0[12]=1">
					<button label="Trigger Rising Edge" define="SCU_EXINT0_RISING_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="SCU_EXICON0[0]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="EXINT0_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trigger Falling Edge" define="SCU_EXINT0_FALLING_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="SCU_EXICON0[1]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="EXINT0_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<combo define="SCU_MODPISEL[1:0]" header="scu_defines.h" label="Pin Select" default="EXINT0_3 (P2.3)">
						<item label="EXINT0_1 (P1.2)" value="1" lockon="PORT_P1_DIR[2]=Input"/>
						<item label="EXINT0_2 (P0.1)" value="2" lockon="PORT_P0_DIR[1]=Input"/>
						<item label="EXINT0_3 (P2.3)" value="3"/>
					</combo>
				</button>
				<button label="EXINT1" define="SCU_MODIEN4[0]" header="scu_defines.h" lockon="CPU_NVIC_ISER0[13]=1">
					<button label="Trigger Rising Edge" define="SCU_EXINT1_RISING_INT_EN" header="scu_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[2]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="EXINT1_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trigger Falling Edge" define="SCU_EXINT1_FALLING_INT_EN" header="scu_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[3]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="EXINT1_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<combo define="SCU_MODPISEL[3:2]" header="scu_defines.h" label="Pin Select" default="EXINT1_3 (P2.4)">
						<item label="EXINT1_0 (P1.1)" value="0" lockon="PORT_P1_DIR[1]=Input"/>
						<item label="EXINT1_1 (P1.3)" value="1" lockon="PORT_P1_DIR[3]=Input"/>
						<item label="EXINT1_2 (P1.0)" value="2" lockon="PORT_P1_DIR[0]=Input"/>
						<item label="EXINT1_3 (P2.4)" value="3"/>
					</combo>
				</button>
				<button label="EXINT2" define="SCU_MODIEN2[5]" header="scu_defines.h" lockon="CPU_NVIC_ISER0[11]=1">
					<button label="Trigger Rising Edge" define="SCU_EXINT2_RISING_INT_EN" header="scu_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[4]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="EXINT2_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trigger Falling Edge" define="SCU_EXINT2_FALLING_INT_EN" header="scu_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[5]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="EXINT2_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<combo define="SCU_MODPISEL[5:4]" header="scu_defines.h" label="Pin Select" default="EXINT2_0 (P2.7)">
						<item label="EXINT2_0 (P2.7)"/>
						<item label="EXINT2_1 (P1.4)" lockon="PORT_P1_DIR[4]=Input"/>
						<item label="EXINT2_2 (P0.4)" lockon="PORT_P0_DIR[4]=Input"/>
						<item label="EXINT2_3 (P0.0)" lockon="PORT_P0_DIR[0]=Input"/>
					</combo>
				</button>
			</branch>
			<branch label="Core Exceptions">
				<button label="HardFault Call Back"  define="CPU_HARDFAULT_EN">
					<edit label="Call Back"          define="CPU_HARDFAULT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="MemManage Call Back"  define="CPU_MEMMANAGE_EN">
					<edit label="Call Back"          define="CPU_MEMMANAGE_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="BusFault Call Back"   define="CPU_BUSFAULT_EN">
					<edit label="Call Back"          define="CPU_BUSFAULT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="UsageFault Call Back" define="CPU_USAGEFAULT_EN">
					<edit label="Call Back"          define="CPU_USAGEFAULT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="SysTick Call Back"    define="CPU_SYSTICK_EN">
					<edit label="Call Back"          define="CPU_SYSTICK_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
			</branch>
			<branch label="NVIC">
				<branch label="Interrupt enable">
					<button label="GPT1"     define="CPU_NVIC_ISER0[0]"  lockon="SCU_IEN0[7]=1"/>
					<button label="GPT2"     define="CPU_NVIC_ISER0[1]"  lockon="SCU_IEN0[7]=1"/>
					<button label="ADC2"     define="CPU_NVIC_ISER0[2]"  lockon="SCU_IEN0[7]=1"/>
					<button label="ADC1"     define="CPU_NVIC_ISER0[3]"  lockon="SCU_IEN0[7]=1"/>
					<button label="CCU6 SR0" define="CPU_NVIC_ISER0[4]"  lockon="SCU_IEN0[7]=1"/>
					<button label="CCU6 SR1" define="CPU_NVIC_ISER0[5]"  lockon="SCU_IEN0[7]=1"/>
					<button label="CCU6 SR2" define="CPU_NVIC_ISER0[6]"  lockon="SCU_IEN0[7]=1"/>
					<button label="CCU6 SR3" define="CPU_NVIC_ISER0[7]"  lockon="SCU_IEN0[7]=1"/>
					<button label="SSC1"     define="CPU_NVIC_ISER0[8]"  lockon="SCU_IEN0[7]=1"/>
					<button label="SSC2"     define="CPU_NVIC_ISER0[9]"  lockon="SCU_IEN0[7]=1"/>
					<button label="UART1"    define="CPU_NVIC_ISER0[10]" lockon="SCU_IEN0[7]=1"/>
					<button label="UART2"    define="CPU_NVIC_ISER0[11]" lockon="SCU_IEN0[7]=1"/>
					<button label="EXINT0"   define="CPU_NVIC_ISER0[12]" lockon="SCU_IEN0[7]=1"/>
					<button label="EXINT1"   define="CPU_NVIC_ISER0[13]" lockon="SCU_IEN0[7]=1"/>
					<button label="BDRV"     define="CPU_NVIC_ISER0[14]" lockon="SCU_IEN0[7]=1"/>
					<button label="DMA"      define="CPU_NVIC_ISER0[15]" lockon="SCU_IEN0[7]=1"/>
				</branch>
				<branch label="Interrupt Priority, (0 = highest, 15 = lowest)">
					<edit label="GPT1     [0..15]" define="CPU_NVIC_IPR0[7:4]" default="0"/>
					<edit label="GPT2     [0..15]" define="CPU_NVIC_IPR0[15:12]" default="0"/>
					<edit label="ADC2     [0..15]" define="CPU_NVIC_IPR0[23:20]" default="0"/>
					<edit label="ADC1     [0..15]" define="CPU_NVIC_IPR0[31:28]" default="0"/>
					<edit label="CCU6 SR0 [0..15]" define="CPU_NVIC_IPR1[7:4]" default="0"/>
					<edit label="CCU6 SR1 [0..15]" define="CPU_NVIC_IPR1[15:12]" default="0"/>
					<edit label="CCU6 SR2 [0..15]" define="CPU_NVIC_IPR1[23:20]" default="0"/>
					<edit label="CCU6 SR3 [0..15]" define="CPU_NVIC_IPR1[31:28]" default="0"/>
					<edit label="SSC1     [0..15]" define="CPU_NVIC_IPR2[7:4]" default="0"/>
					<edit label="SSC2     [0..15]" define="CPU_NVIC_IPR2[15:12]" default="0"/>
					<edit label="UART1    [0..15]" define="CPU_NVIC_IPR2[23:20]" default="0"/>
					<edit label="UART2    [0..15]" define="CPU_NVIC_IPR2[31:28]" default="0"/>
					<edit label="EXINT0   [0..15]" define="CPU_NVIC_IPR3[7:4]" default="0"/>
					<edit label="EXINT1   [0..15]" define="CPU_NVIC_IPR3[15:12]" default="0"/>
					<edit label="BDRV     [0..15]" define="CPU_NVIC_IPR3[23:20]" default="0"/>
					<edit label="DMA      [0..15]" define="CPU_NVIC_IPR3[31:28]" default="0"/>
					<edit label="SysTick  [0..15]" define="CPU_NVIC_SHPR3[31:28]" default="0"/>
				</branch>
			</branch>
		</header>
	</module>
	<module label="PORT" desc="GPIO Ports">
		<branch label="Port0">
			<branch label="Pin0">
				<radio define="PORT_P0_DIR[0]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[0]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[0]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_0_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="T3OUT"/>
							<item label="EXF21_0"/>
							<item label="RXDO_2"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_0_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin1">
				<radio define="PORT_P0_DIR[1]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[1]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[1]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_1_ALT[1:0]" label="Function">
							<item label="GPIO" value="0"/>
							<item label="TxD1" value="1"/>
							<item label="T6OUT" value="3"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_1_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin2">
				<radio define="PORT_P0_DIR[2]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[2]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[2]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_2_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="COUT60_0"/>
							<item label="MTSR_1"/>
							<item label="EXF2_0"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_2_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin3">
				<radio define="PORT_P0_DIR[3]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[3]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[3]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_3_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SCK_1"/>
							<item label="EXF21_2"/>
							<item label="T6OUT"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_3_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin4">
				<radio define="PORT_P0_DIR[4]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[4]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[4]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_4_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="MRST_1_0"/>
							<item label="CC60_0"/>
							<item label="CLKOUT_0"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_4_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
		</branch>
		<branch label="Port1">
			<branch label="Pin0">
				<radio define="PORT_P1_DIR[0]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[0]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[1]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_0_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SCK_2"/>
							<item label="CC61_0"/>
							<item label="EXF21_3"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_0_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin1">
				<radio define="PORT_P1_DIR[1]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[1]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[2]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_1_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="MTSR_2"/>
							<item label="COUT61_0"/>
							<item label="TXD2_0"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_1_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin2">
				<radio define="PORT_P1_DIR[2]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[2]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[3]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_2_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="MRST_2_0"/>
							<item label="COUT63_0"/>
							<item label="T3OUT"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_2_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin3">
				<radio define="PORT_P1_DIR[3]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[3]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<!--combo header="port_defines.h" define="PORT_P1_OD3" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo-->
						<branch label="Mode - Please set mode in Pin2 branch above"/>
						<combo header="port_defines.h" define="PORT_P1_3_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="EXF21_1"/>
							<item label="CC62_0"/>
							<item label="TXD2_1"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_3_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin4">
				<radio define="PORT_P1_DIR[4]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[4]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[4]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_4_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="CLKOUT_1"/>
							<item label="COUT62_0"/>
							<item label="RxD1"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_4_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
		</branch>
		<branch label="Port2">
			<branch label="Pin0">
				<radio define="PORT_P2_DIR[0]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_0_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin1">
				<radio define="PORT_P2_DIR[1]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_1_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin2">
				<radio define="PORT_P2_DIR[2]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_2_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin3">
				<radio define="PORT_P2_DIR[3]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_3_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin4">
				<radio define="PORT_P2_DIR[4]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_4_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin5">
				<radio define="PORT_P2_DIR[5]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_5_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin7">
				<radio define="PORT_P2_DIR[7]" default="0" header="port_defines.h">
					<button label="Input"/>
					<button label="Disabled"/>
				</radio>
				<combo header="port_defines.h" define="PORT_P2_7_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
		</branch>
	</module>
	<module label="ADC1" desc="10bit ADC">
		<header define="adc1_defines.h">
			<button label="ADC1 enable" define="ADC1_GLOBCTR[9:8]">
				<math label="ADC1 Clock" unit="MHz" define="ADC1_CLK" formula="SCU_PLL_fPLL/(ADC1_GLOBCTR[5:0]+1)"/>
				<branch label="Clock">
					<edit label="Clock Divider [0..31]+1" define="ADC1_GLOBCTR[5:0]" default="0"/>
				</branch>
				<button label="VAREF enable" define="MF_REF2_CTRL[0]" default="1"/>
				<radio define="ADC1_SQ_FB[8]">
					<button label="Software Mode" lockon="ADC1_ESM[18:16]=none;ADC1_CHX_EIM[18:16]=none">
					</button>
					<button label="Sequencer Mode">
						<branch label="Sequence 1">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ1_4[0]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ1_4[1]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ1_4[2]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ1_4[3]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ1_4[4]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ1_4[5]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ1_4[6]"/>
						</branch>
						<branch label="Sequence 2">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ1_4[8]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ1_4[9]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ1_4[10]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ1_4[11]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ1_4[12]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ1_4[13]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ1_4[14]"/>
						</branch>
						<branch label="Sequence 3">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ1_4[16]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ1_4[17]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ1_4[18]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ1_4[19]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ1_4[20]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ1_4[21]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ1_4[22]"/>
						</branch>
						<branch label="Sequence 4">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ1_4[24]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ1_4[25]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ1_4[26]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ1_4[27]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ1_4[28]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ1_4[29]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ1_4[30]"/>
						</branch>
						<branch label="Sequence 5">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ5_8[0]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ5_8[1]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ5_8[2]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ5_8[3]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ5_8[4]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ5_8[5]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ5_8[6]"/>
						</branch>
						<branch label="Sequence 6">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ5_8[8]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ5_8[9]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ5_8[10]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ5_8[11]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ5_8[12]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ5_8[13]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ5_8[14]"/>
						</branch>
						<branch label="Sequence 7">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ5_8[16]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ5_8[17]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ5_8[18]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ5_8[19]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ5_8[20]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ5_8[21]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ5_8[22]"/>
						</branch>
						<branch label="Sequence 8">
							<button label="Channel 0 (P2.0)" define="ADC1_SQ5_8[24]"/>
							<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_SQ5_8[25]"/>
							<button label="Channel 2 (P2.2)" define="ADC1_SQ5_8[26]"/>
							<button label="Channel 3 (P2.3)" define="ADC1_SQ5_8[27]"/>
							<button label="Channel 4 (P2.4)" define="ADC1_SQ5_8[28]"/>
							<button label="Channel 5 (P2.5)" define="ADC1_SQ5_8[29]"/>
							<button label="Channel 6 (VDH)"  define="ADC1_SQ5_8[30]"/>
						</branch>
					</button>
				</radio>
				<branch label="Channel Configuration">
					<branch label="Channel 0 (P2.0)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_0_3[7:0]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[0]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES0[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_0_3[7:0]+$ADC1_DWSEL[0])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
					<branch label="Channel 1 (P2.1/OpAmp)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_0_3[15:8]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[1]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES1[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_0_3[15:8]+$ADC1_DWSEL[1])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
					<branch label="Channel 2 (P2.2)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_0_3[23:16]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[2]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES2[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_0_3[23:16]+$ADC1_DWSEL[2])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
					<branch label="Channel 3 (P2.3)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_0_3[31:24]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[3]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES3[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_0_3[31:24]+$ADC1_DWSEL[3])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
					<branch label="Channel 4 (P2.4)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_4_7[7:0]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[4]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES4[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_4_7[7:0]+$ADC1_DWSEL[4])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
					<branch label="Channel 5 (P2.5)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_4_7[15:8]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[5]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES5[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_4_7[15:8]+$ADC1_DWSEL[5])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
					<branch label="Channel 6 (VDH)">
						<edit label="Sample Time [ticks]" define="ADC1_STC_4_7[23:16]" default="0"/>
						<combo label="Data Width [bit]" define="ADC1_DWSEL[6]">
							<item label="10" />
							<item label="8" />
						</combo>
						<combo label="Result Mode" define="ADC1_RES6[16]">
							<item label="overwrite" />
							<item label="wait for read" />
						</combo>
						<button label="VDH Attenuator" define="MF_VMON_SEN_CTRL[0]">
							<combo label="Output Impedance" define="MF_VMON_SEN_CTRL[4]">
								<item label="low ohmic"/>
								<item label="hight ohmic"/>
							</combo>
							<combo label="Measurement Range" define="MF_VMON_SEN_CTRL[5]">
								<item label="0V to 18V"/>
								<item label="0V to 28V"/>
							</combo>
						</button>
						<math label="Conversion time" unit="us" formula="(3+ADC1_STC_4_7[23:16]+$ADC1_DWSEL[6])*(1/ADC1_CLK)+(1/SCU_PLL_fPLL)"/>
					</branch>
				</branch>
				<branch label="Exceptional Sequencer Mode - ESM">
					<combo label="Trigger" define="ADC1_ESM[18:16]" default="none">
						<item label="none" />
						<item label="CCU6 COUT63" />
						<item label="GPT12E T6OUT" />
						<item label="GPT12E T3OUT" />
						<item label="Timer2" />
						<item label="Timer21" />
						<item label="Timer3" />
					</combo>
					<branch label="ESM Sequence">
						<button label="Channel 0 (P2.0)" define="ADC1_ESM[0]"/>
						<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_ESM[1]"/>
						<button label="Channel 2 (P2.2)" define="ADC1_ESM[2]"/>
						<button label="Channel 3 (P2.3)" define="ADC1_ESM[3]"/>
						<button label="Channel 4 (P2.4)" define="ADC1_ESM[4]"/>
						<button label="Channel 5 (P2.5)" define="ADC1_ESM[5]"/>
						<button label="Channel 6 (VDH)" define="ADC1_ESM[6]"/>
					</branch>
				</branch>
				<branch label="Exceptional Interrupt Mode - EIM">
					<combo label="Trigger" define="ADC1_CHX_EIM[18:16]" default="none">
						<item label="none" />
						<item label="CCU6 COUT63" />
						<item label="GPT12E T6OUT" />
						<item label="GPT12E T3OUT" />
						<item label="Timer2" />
						<item label="Timer21" />
						<item label="Timer3" />
					</combo>
					<combo label="Channel" define="ADC1_CHX_EIM[2:0]" default="Channel 0 (P2.0)">
						<item label="Channel 0 (P2.0)" />
						<item label="Channel 1 (P2.1/OpAmp)" />
						<item label="Channel 2 (P2.2)" />
						<item label="Channel 3 (P2.3)" />
						<item label="Channel 4 (P2.4)" />
						<item label="Channel 5 (P2.5)" />
						<item label="Channel 6 (VDH)" />
					</combo>
					<combo label="Repetitive Measurements" define="ADC1_CHX_EIM[6:4]" default="1">
						<item label="1" />
						<item label="2" />
						<item label="4" />
						<item label="8" />
						<item label="16" />
						<item label="32" />
						<item label="64" />
						<item label="128" />
					</combo>
					<combo label="Result Mode" define="ADC1_RES_EIM[16]">
						<item label="overwrite" />
						<item label="wait for read" />
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="Channel 0 (P2.0)" define="ADC1_CH0_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[0]"/>
						<edit label="Call Back" define="ADC1_CH0_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 1 (P2.1/OpAmp)" define="ADC1_CH1_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[1]"/>
						<edit label="Call Back" define="ADC1_CH1_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 2 (P2.2)" define="ADC1_CH2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[2]"/>
						<edit label="Call Back" define="ADC1_CH2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 3 (P2.3)" define="ADC1_CH3_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[3]"/>
						<edit label="Call Back" define="ADC1_CH3_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 4 (P2.4)" define="ADC1_CH4_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[4]"/>
						<edit label="Call Back" define="ADC1_CH4_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 5 (P2.5)" define="ADC1_CH5_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[5]"/>
						<edit label="Call Back" define="ADC1_CH5_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 6 (VDH)" define="ADC1_CH6_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[6]"/>
						<edit label="Call Back" define="ADC1_CH6_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="EIM" define="ADC1_EIM_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[8]"/>
						<edit label="Call Back" define="ADC1_EIM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="ESM" define="ADC1_ESM_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
						<button label="Enable Interrupt" define="ADC1_IE[9]"/>
						<edit label="Call Back" define="ADC1_ESM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
		</header>
	</module>
	<module label="ADC2" desc="8bit ADC">
		<header define="adc2_defines.h">
			<button label="Configure ADC2" define="ADC2_CTRL2[0]" lockon="ADC2_CH9_UPTH_DEG=200">
				<math label="ADC2 Clock" unit="MHz" define="ADC2_CLK" formula="SCU_APCLK_MI_CLK"/>
				<math label="" unit="us" define="ADC2_CONV_TIME" formula="1/SCU_APCLK_MI_CLK*($ADC2_CTRL2[11:8] + 10)"/>
				<branch label="Sample Time Configuration">
					<combo label="Sample Time [MI_Clock ticks]" define="ADC2_CTRL2[11:8]" default="18">
						<item label="4"/>
						<item label="6"/>
						<item label="8"/>
						<item label="10"/>
						<item label="12"/>
						<item label="14"/>
						<item label="16"/>
						<item label="18"/>
						<item label="20"/>
						<item label="22"/>
					</combo>
				</branch>
				<branch label="Channel Configuration">
					<branch label="Channel 0 - VBAT_SENSE (TLE986x devices only)">
					</branch>
					<branch label="Channel 1 - VS">
						<combo label="Measurement Range" define="ADC2_CTRL_STS[17]">
							<item label="3V to 22V"/>
							<item label="3V to 28V"/>
						</combo>
						<edit label="Upper Threshold [V]" define="ADC2_CH1_UPTH_VOLT" range="3.0;28.0" default="17.3"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH1_LOTH_VOLT" range="3.0;28.0" default="5.78"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[15:8]" formula="trunc(ADC2_CH1_UPTH_VOLT*((0.039*ADC2_CTRL_STS[17])+(0.055*ADC2_CTRL_STS[17].^1))*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[15:8]" formula="trunc(ADC2_CH1_LOTH_VOLT*((0.039*ADC2_CTRL_STS[17])+(0.055*ADC2_CTRL_STS[17].^1))*255/1.227)"/>
						<branch label="Mode">
							<combo label="Measurement Mode" define="ADC2_MMODE0_5[3:2]" default="Upper and Lower limits">
								<item label="Upper and Lower limits"/>
								<item label="Lower limits"/>
								<item label="Upper limits"/>
							</combo>
							<branch label="Upper Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT0_3_UPPER[12:11]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT0_3_UPPER[10:8]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
							<branch label="Lower Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT0_3_LOWER[12:11]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT0_3_LOWER[10:8]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
						</branch>
						<button label="Filter" define="ADC2_CTRL4[1]">
							<button label="Upper Threshold Filter"  define="ADC2_FILT_UP_CTRL[1]"/>
							<button label="Lower Threshold Filter"  define="ADC2_FILT_LO_CTRL[1]"/>
							<combo label="Coefficient" define="ADC2_FILTCOEFF0_5[3:2]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
						</button>
						<branch label="Calibration">
							<button label="Calibration enable"  define="ADC2_CTRL1[1]"/>
						</branch>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VS_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[5]" header="int_defines.h"/>
								<edit label="Call Back"          define="ADC2_VS_UP_CALLBACK" header="isr_defines.h"  role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VS_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[1]" header="int_defines.h"/>
								<edit label="Call Back"          define="ADC2_VS_LO_CALLBACK" header="isr_defines.h"  role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(ADC2_CTRL1[1]*13+ADC2_CTRL4[1]*(2^(ADC2_FILTCOEFF0_5[3:2]+1)))"/>
					</branch>
					<branch label="Channel 2 - VSD">
						<edit label="Upper Threshold [V]" define="ADC2_CH2_UPTH_VOLT" range="3.0;28.0" default="17.3"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH2_LOTH_VOLT" range="3.0;28.0" default="5.78"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[23:16]" formula="trunc(ADC2_CH2_UPTH_VOLT*0.039*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[23:16]" formula="trunc(ADC2_CH2_LOTH_VOLT*0.039*255/1.227)"/>
						<branch label="Mode">
							<combo label="Measurement Mode" define="ADC2_MMODE0_5[5:4]" default="Upper and Lower limits">
								<item label="Upper and Lower limits"/>
								<item label="Lower limits"/>
								<item label="Upper limits"/>
							</combo>
							<branch label="Upper Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT0_3_UPPER[20:19]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT0_3_UPPER[18:16]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
							<branch label="Lower Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT0_3_LOWER[20:19]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT0_3_LOWER[18:16]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
						</branch>
						<button label="Filter" define="ADC2_CTRL4[2]">
							<button label="Upper Threshold Filter"  define="ADC2_FILT_UP_CTRL[2]"/>
							<button label="Lower Threshold Filter"  define="ADC2_FILT_LO_CTRL[2]"/>
							<combo label="Coefficient" define="ADC2_FILTCOEFF0_5[5:4]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
						</button>
						<branch label="Calibration">
							<button label="Calibration enable"  define="ADC2_CTRL1[2]"/>
						</branch>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VSD_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
								<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[20]" header="int_defines.h"/>
								<edit label="Call Back"         define="ADC2_VSD_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VSD_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
								<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[19]" header="int_defines.h"/>
								<edit label="Call Back"         define="ADC2_VSD_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(ADC2_CTRL1[2]*13+ADC2_CTRL4[2]*(2^(ADC2_FILTCOEFF0_5[5:4]+1)))"/>
					</branch>
					<branch label="Channel 3 - VCP">
						<edit label="Upper Threshold [V]" define="ADC2_CH3_UPTH_VOLT" range="5.0;53.0" default="35.0"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH3_LOTH_VOLT" range="5.0;53.0" default="6.00"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[31:24]" formula="trunc(ADC2_CH3_UPTH_VOLT*0.023*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[31:24]" formula="trunc(ADC2_CH3_LOTH_VOLT*0.023*255/1.227)"/>
						<branch label="Mode">
							<combo label="Measurement Mode" define="ADC2_MMODE0_5[7:6]" default="Upper and Lower limits">
								<item label="Upper and Lower limits"/>
								<item label="Lower limits"/>
								<item label="Upper limits"/>
							</combo>
							<branch label="Upper Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT0_3_UPPER[28:27]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT0_3_UPPER[26:24]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
							<branch label="Lower Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT0_3_LOWER[28:27]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT0_3_LOWER[26:24]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
						</branch>
						<button label="Filter" define="ADC2_CTRL4[3]">
							<button label="Upper Threshold Filter"  define="ADC2_FILT_UP_CTRL[3]"/>
							<button label="Lower Threshold Filter"  define="ADC2_FILT_LO_CTRL[3]"/>
							<combo label="Coefficient" define="ADC2_FILTCOEFF0_5[7:6]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
						</button>
						<branch label="Calibration">
							<button label="Calibration enable"  define="ADC2_CTRL1[3]"/>
						</branch>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VCP_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
								<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[18]" header="int_defines.h"/>
								<edit label="Call Back"         define="ADC2_VCP_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VCP_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
								<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[17]" header="int_defines.h"/>
								<edit label="Call Back"         define="ADC2_VCP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(ADC2_CTRL1[3]*13+ADC2_CTRL4[3]*(2^(ADC2_FILTCOEFF0_5[7:6]+1)))"/>
					</branch>
					<branch label="Channel 4 - MON">
						<edit label="Upper Threshold [V]" define="ADC2_CH4_UPTH_VOLT" range="3.0;28.0" default="16.88"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH4_LOTH_VOLT" range="3.0;28.0" default="5.078"/>
						<math label="Upper Threshold value" define="ADC2_TH4_5_UPPER[7:0]" formula="trunc(ADC2_CH4_UPTH_VOLT*0.039*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH4_5_LOWER[7:0]" formula="trunc(ADC2_CH4_LOTH_VOLT*0.039*255/1.227)"/>
						<branch label="Mode">
							<combo label="Measurement Mode" define="ADC2_MMODE0_5[9:8]" default="Upper and Lower limits">
								<item label="Upper and Lower limits"/>
								<item label="Lower limits"/>
								<item label="Upper limits"/>
							</combo>
							<branch label="Upper Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT4_5_UPPER[4:3]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT4_5_UPPER[2:0]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
							<branch label="Lower Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT4_5_LOWER[4:3]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT4_5_LOWER[2:0]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
						</branch>
						<button label="Filter" define="ADC2_CTRL4[4]">
							<button label="Upper Threshold Filter"  define="ADC2_FILT_UP_CTRL[4]"/>
							<button label="Lower Threshold Filter"  define="ADC2_FILT_LO_CTRL[4]"/>
							<combo label="Coefficient" define="ADC2_FILTCOEFF0_5[9:8]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
						</button>
						<branch label="Calibration">
							<button label="Calibration enable"  define="ADC2_CTRL1[4]"/>
						</branch>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_MON_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[4]" header="int_defines.h"/>
								<edit label="Call Back"  define="ADC2_MON_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_MON_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[0]" header="int_defines.h"/>
								<edit label="Call Back"  define="ADC2_MON_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(ADC2_CTRL1[4]*13+ADC2_CTRL4[4]*(2^(ADC2_FILTCOEFF0_5[9:8]+1)))"/>
					</branch>
					<branch label="Channel 5 - VDDP">
						<edit label="Upper Threshold [V]" define="ADC2_CH5_UPTH_VOLT" range="3.0;6.0" default="5.5"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH5_LOTH_VOLT" range="3.0;6.0" default="4.5"/>
						<math label="Upper Threshold value" define="ADC2_TH4_5_UPPER[15:8]" formula="trunc(ADC2_CH5_UPTH_VOLT*0.164*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH4_5_LOWER[15:8]" formula="trunc(ADC2_CH5_LOTH_VOLT*0.164*255/1.227)"/>
						<branch label="Mode">
							<combo label="Measurement Mode" define="ADC2_MMODE0_5[11:10]" default="Upper and Lower limits">
								<item label="Upper and Lower limits"/>
								<item label="Lower limits"/>
								<item label="Upper limits"/>
							</combo>
							<branch label="Upper Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT4_5_UPPER[12:11]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT4_5_UPPER[10:8]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
							<branch label="Lower Hysteresis">
								<combo label="Hysteresis" define="ADC2_CNT4_5_LOWER[12:11]" default="Hysteresis off">
									<item label="Hysteresis off"/>
									<item label="Hysteresis = 4"/>
									<item label="Hysteresis = 8"/>
									<item label="Hysteresis = 16"/>
								</combo>
								<combo label="Event Count" define="ADC2_CNT4_5_LOWER[10:8]" default="1">
									<item label="1"/>
									<item label="2"/>
									<item label="4"/>
									<item label="8"/>
									<item label="16"/>
									<item label="32"/>
									<item label="64"/>
									<item label="128"/>
								</combo>
							</branch>
						</branch>
						<button label="Filter" define="ADC2_CTRL4[5]">
							<button label="Upper Threshold Filter"  define="ADC2_FILT_UP_CTRL[5]"/>
							<button label="Lower Threshold Filter"  define="ADC2_FILT_LO_CTRL[5]"/>
							<combo label="Coefficient" define="ADC2_FILTCOEFF0_5[11:10]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
						</button>
						<branch label="Calibration">
							<button label="Calibration enable"  define="ADC2_CTRL1[5]"/>
						</branch>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VDDP_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[6]" header="int_defines.h"/>
								<edit label="Call Back"        define="ADC2_VDDP_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VDDP_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[2]" header="int_defines.h"/>
								<edit label="Call Back"        define="ADC2_VDDP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(ADC2_CTRL1[5]*13+ADC2_CTRL4[5]*(2^(ADC2_FILTCOEFF0_5[11:10]+1)))"/>
					</branch>
					<branch label="Channel 6 - VAREF">
						<edit label="Upper Threshold [V]" define="ADC2_CH6_UPTH_VOLT" range="3.0;6.0" default="5.5"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH6_LOTH_VOLT" range="3.0;6.0" default="4.5"/>
						<math label="Upper Threshold value" define="ADC2_TH6_9_UPPER[7:0]" formula="trunc(ADC2_CH6_UPTH_VOLT*0.219*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH6_9_LOWER[7:0]" formula="trunc(ADC2_CH6_LOTH_VOLT*0.219*255/1.227)"/>
						<branch label="Mode - protected, cannot be changed"/>
						<button label="Filter" define="ADC2_CTRL4[8]"/>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VAREF_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[13]" header="int_defines.h"/>
								<edit label="Call Back"       define="ADC2_VAREF_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VAREF_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[12]" header="int_defines.h"/>
								<edit label="Call Back"       define="ADC2_VAREF_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Over Load" define="ADC2_VAREF_OL_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[3]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[14]" header="int_defines.h"/>
								<edit label="Call Back"       define="ADC2_VAREF_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(0*13+ADC2_CTRL4[8]*8)"/>
					</branch>
					<branch label="Channel 7 - VBG !do not change!">
						<edit label="Upper Threshold [V]" define="ADC2_CH7_UPTH_VOLT" range="1.0;2.0" default="1.3"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH7_LOTH_VOLT" range="1.0;2.0" default="1.1"/>
						<math label="Upper Threshold value" define="ADC2_TH6_9_UPPER[15:8]" formula="trunc(ADC2_CH7_UPTH_VOLT*0.751*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH6_9_LOWER[15:8]" formula="trunc(ADC2_CH7_LOTH_VOLT*0.751*255/1.227)"/>
						<branch label="Mode - protected, cannot be changed"/>
						<button label="Filter" define="ADC2_CTRL4[9]"/>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VBG_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[11]" header="int_defines.h"/>
								<edit label="Call Back"         define="ADC2_VBG_UP_CALLBACK" header="isr_defines.h"  role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VBG_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[10]" header="int_defines.h"/>
								<edit label="Call Back"         define="ADC2_VBG_LO_CALLBACK" header="isr_defines.h"  role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(0*13+ADC2_CTRL4[9]*8)"/>
					</branch>
					<branch label="Channel 8 - VDDC">
						<edit label="Upper Threshold [V]" define="ADC2_CH8_UPTH_VOLT" range="1.0;2.0" default="1.6"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH8_LOTH_VOLT" range="1.0;2.0" default="1.35"/>
						<math label="Upper Threshold value" define="ADC2_TH6_9_UPPER[23:16]" formula="trunc(ADC2_CH8_UPTH_VOLT*0.75*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH6_9_LOWER[23:16]" formula="trunc(ADC2_CH8_LOTH_VOLT*0.75*255/1.227)"/>
						<branch label="Mode - protected, cannot be changed"/>
						<button label="Filter" define="ADC2_CTRL4[10]"/>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VDDC_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[7]" header="int_defines.h"/>
								<edit label="Call Back"        define="ADC2_VDDC_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VDDC_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">			
								<button label="Enable Interrupt" define="SCU_SYS_SUPPLY_IRQ_CTRL[3]" header="int_defines.h"/>
								<edit label="Call Back"        define="ADC2_VDDC_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(0*13+ADC2_CTRL4[10]*8)"/>
					</branch>
					<branch label="Channel 9 - Temperature Sensor">
						<edit label="Upper Threshold [C]" define="ADC2_CH9_UPTH_DEG" range="-40;250" default="200"/>
						<edit label="Prewarning Threshold [C]" define="ADC2_CH9_LOTH_DEG" range="-40;250" default="150"/>
						<math label="Upper Threshold value" define="ADC2_TH6_9_UPPER[31:24]" formula="trunc((ADC2_CH9_UPTH_DEG*0.0012+0.77)*255/1.227)"/>
						<math label="Prewarning Threshold value" define="ADC2_TH6_9_LOWER[31:24]" formula="trunc((ADC2_CH9_LOTH_DEG*0.0012+0.77)*255/1.227)"/>
						<branch label="Mode - protected, cannot be changed"/>
						<button label="Filter" define="ADC2_CTRL4[11]"/>
						<branch label="Interrupt">
							<radio define="ADC2_CTRL2[2]">
								<button label="System Temperature">
									<button label="Over Temperature" define="ADC2_SYS_TEMP_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[3]=1">			
										<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[9]" header="int_defines.h"/>
										<edit label="Call Back" define="ADC2_SYS_TEMP_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
									</button>
									<button label="Prewarning Temperature" define="ADC2_SYS_TEMP_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[3]=1">			
										<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[8]" header="int_defines.h"/>
										<edit label="Call Back" define="ADC2_SYS_TEMP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
									</button>
								</button>
								<button label="PMU Temperature">
									<button label="Over Temperature" define="ADC2_PMU_TEMP_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[3]=1">			
										<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[7]" header="int_defines.h"/>
										<edit label="Call Back" define="ADC2_PMU_TEMP_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
									</button>
									<button label="Prewarning Temperature" define="ADC2_PMU_TEMP_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[3]=1">			
										<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[6]" header="int_defines.h"/>
										<edit label="Call Back" define="ADC2_PMU_TEMP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
									</button>
								</button>
							</radio>
						</branch>
						<math label="Conversion Time" unit="us" formula="ADC2_CONV_TIME+1/SCU_APCLK_MI_CLK*(0*13+ADC2_CTRL4[11]*16)"/>
					</branch>
				</branch>
			</button>
		</header>
	</module>
	<module label="BDRV" desc="Bridge Driver (incl. Charge Pump)">
		<header define="bdrv_defines.h">
			<button define="BDRV_CP_CTRL_STS[0]" label="Charge Pump Settings">
				<button label="Charge Pump Clock" define="BDRV_CP_CLK_CTRL[15]" default="1">
					<branch label="Clock Source">
						<radio define="SCU_APCLK_CTRL1[6]" default="0" header="scu_defines.h">
							<button label="LP_CLK (~18MHz)">
							</button>
							<button label="fSYS">
								<combo label="Clock Divider" define="SCU_APCLK_CTRL1[7]" header="scu_defines.h" default="fSYS / 2">
									<item label="fSYS" value="1"/>
									<item label="fSYS / 2" value="0"/>
								</combo>
							</button>
						</radio>
					</branch>
					<math define="BDRV_CP_CLK_SRC" formula="SCU_APCLK_CTRL1[6]&lt;1?18000000:SCU_APCLK_CTRL1[7]&lt;1?SCU_FSYS/2:SCU_FSYS"/>
					<math label="Charge Pump Clock" unit="kHz" define="BDRV_CP_CLK" formula="BDRV_CP_CLK_SRC/80000"/>
					<edit label="Upper Dither Freq. [kHz]" define="BDRV_UP_DITH_FREQ" default="243"/>
					<edit label="Lower Dither Freq. [kHz]" define="BDRV_LO_DITH_FREQ" default="209"/>
					<math label="Upper Dither Freq. (eff.)" unit="kHz" define="BDRV_UP_DITH" formula="(BDRV_CP_CLK_SRC/((BDRV_CP_CLK_CTRL[14:13]*32)+BDRV_CP_CLK_CTRL[12:8]))/1000"/>
					<math label="Lower Dither Freq. (eff.)" unit="kHz" define="BDRV_LO_DITH" formula="(BDRV_CP_CLK_SRC/((BDRV_CP_CLK_CTRL[14:13]*32)+BDRV_CP_CLK_CTRL[4:0]))/1000"/>
					<branch label="Register Values">
						<math label="F_CP (max. 0x3)" role="hex" define="BDRV_CP_CLK_CTRL[14:13]" formula="(BDRV_CP_CLK_SRC/(BDRV_UP_DITH_FREQ*1000))/32"/>
						<math label="DITH_UPPER (max. 0x1F)" role="hex" define="BDRV_CP_CLK_CTRL[12:8]" formula="(BDRV_CP_CLK_SRC/(BDRV_UP_DITH_FREQ*1000)).*31"/>
						<math label="DITH_LOWER (max. 0x1F)" role="hex" define="BDRV_CP_CLK_CTRL[4:0]" formula="(BDRV_CP_CLK_SRC/(BDRV_LO_DITH_FREQ*1000)).*31"/>
					</branch>
				</button>
				<branch label="Charge Pump Output">
					<radio define="BDRV_CP_CTRL_STS[25]">
						<button label="Charge Pump Output 14V"/>
						<button label="Charge Pump Output 9V" lockon="BDRV_CP_CTRL_STS[24]=1">
							<combo label="9V Trim" define="BDRV_CP_CTRL_STS[27:26]" default="9.0V">
								<item label="7.5V"/>
								<item label="8.0V"/>
								<item label="8.5V"/>
								<item label="9.0V"/>
							</combo>
							<button label="Low Power Enable" define="BDRV_CP_CTRL_STS[24]"/>
						</button>
					</radio>
				</branch>
			</button>
			<branch label="Diagnosis Settings">
				<branch label="Charge Pump Diagnosis">
					<combo label="Driver shutdown on VSD upper voltage" define="BDRV_CP_CTRL_STS[22]" default="enabled">
						<item label="enabled"/>
						<item label="disable"/>
					</combo>
					<combo label="Driver shutdown on VSD lower voltage" define="BDRV_CP_CTRL_STS[20]" default="enabled">
						<item label="enabled"/>
						<item label="disable"/>
					</combo>
					<combo label="Driver shutdown on VCP upper voltage" define="BDRV_CP_CTRL_STS[18]" default="enabled">
						<item label="enabled"/>
						<item label="disable"/>
					</combo>
					<combo label="Driver shutdown on VCP lower voltage" define="BDRV_CP_CTRL_STS[16]" default="enabled">
						<item label="enabled"/>
						<item label="disable"/>
					</combo>
					<combo label="VCP Low Voltage Threshold" define="BDRV_CP_CTRL_STS[10:8]" default="7.325V">
						<item label="7.325V"/>
						<item label="7.654V"/>
						<item label="7.982V"/>
						<item label="8.309V"/>
						<item label="8.638V"/>
						<item label="8.966V"/>
						<item label="9.293V"/>
						<item label="9.620V"/>
					</combo>
					<combo label="VCP Low Voltage Filter Time" define="BDRV_TRIM_DRVx[25:24]" default="4us">
						<item label="4us"/>
						<item label="8us"/>
						<item label="16us"/>
						<item label="32us"/>
					</combo>
					<button label="VCP Low Voltage Interrupt" define="BDRV_VCP_LO2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[16]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_VCP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Fast Discharge">
					<button label="LS1 Fast-Discharge" role="invert" define="BDRV_TRIM_DRVx[10]"/>
					<button label="LS2 Fast-Discharge" role="invert" define="BDRV_TRIM_DRVx[11]"/>
					<button label="LS3 Fast-Discharge" role="invert" define="BDRV_TRIM_DRVx[12]"/>
					<button label="HS1 Fast-Discharge" role="invert" define="BDRV_TRIM_DRVx[18]"/>
					<button label="HS2 Fast-Discharge" role="invert" define="BDRV_TRIM_DRVx[19]"/>
					<button label="HS3 Fast-Discharge" role="invert" define="BDRV_TRIM_DRVx[20]"/>
				</branch>
				<branch label="Over-Current Shutdown">
					<button label="LS1 Over-Current Shutdown" role="invert" define="BDRV_TRIM_DRVx[13]"/>
					<button label="LS2 Over-Current Shutdown" role="invert" define="BDRV_TRIM_DRVx[14]"/>
					<button label="LS3 Over-Current Shutdown" role="invert" define="BDRV_TRIM_DRVx[15]"/>
					<button label="HS1 Over-Current Shutdown" role="invert" define="BDRV_TRIM_DRVx[21]"/>
					<button label="HS2 Over-Current Shutdown" role="invert" define="BDRV_TRIM_DRVx[22]"/>
					<button label="HS3 Over-Current Shutdown" role="invert" define="BDRV_TRIM_DRVx[23]"/>
				</branch>
				<branch label="Drain-Source Monitoring">
					<combo label="HS DS-Monitoring Filter Time" define="BDRV_TRIM_DRVx[17:16]" default="1us">
						<item label="1us"/>
						<item label="2us"/>
						<item label="4us"/>
						<item label="8us"/>
					</combo>
					<combo label="LS DS-Monitoring Filter Time" define="BDRV_TRIM_DRVx[9:8]" default="1us">
						<item label="1us"/>
						<item label="2us"/>
						<item label="4us"/>
						<item label="8us"/>
					</combo>
					<combo label="DS-Monitoring Blanking Time" define="BDRV_TRIM_DRVx[1:0]" default="1us">
						<item label="1us"/>
						<item label="2us"/>
						<item label="4us"/>
						<item label="8us"/>
					</combo>
					<combo label="DS-Monitoring Threshold" define="BDRV_CTRL3[18:16]" default="0.50V">
						<item label="0.25V"/>
						<item label="0.50V"/>
						<item label="0.75V"/>
						<item label="1.00V"/>
						<item label="1.25V"/>
						<item label="1.50V"/>
						<item label="1.75V"/>
						<item label="2.00V"/>
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="HS1 Over Current" define="BDRV_HS1_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[12]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_HS1_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="LS1 Over Current" define="BDRV_LS1_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[10]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_LS1_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="HS2 Over Current" define="BDRV_HS2_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[13]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_HS2_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="LS2 Over Current" define="BDRV_LS2_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[11]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_LS2_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="HS3 Over Current" define="BDRV_HS3_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[15]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_HS3_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="LS3 Over Current" define="BDRV_LS3_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[14]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_LS3_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="HS1 Drain Source Monitoring" define="BDRV_HS1_DS_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[2]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_HS1_DS_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>                                   
					<button label="LS1 Drain Source Monitoring" define="BDRV_LS1_DS_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[0]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_LS1_DS_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>                                   
					<button label="HS2 Drain Source Monitoring" define="BDRV_HS2_DS_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[3]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_HS2_DS_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>                                   
					<button label="LS2 Drain Source Monitoring" define="BDRV_LS2_DS_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[1]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_LS2_DS_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>                                   
					<button label="HS3 Drain Source Monitoring" define="BDRV_HS3_DS_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[5]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_HS3_DS_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>                                   
					<button label="LS3 Drain Source Monitoring" define="BDRV_LS3_DS_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[14]=1">			
						<button label="Enable Interrupt" define="SCU_BDRV_IRQ_CTRL[4]" header="int_defines.h"/>
						<edit label="Call Back" define="BDRV_LS3_DS_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Cross-Current Protection">
					<radio  define="BDRV_CTRL3[26]">
						<button label="Enable CCP">
							<combo label="Time Multiplier (BF-Step)" define="BDRV_TRIM_DRVx[6:5]" default="1x">
								<item label="1x"/>
								<item label="2x"/>
								<item label="4x"/>
							</combo>
							<combo label="Time" define="BDRV_CTRL3[25:24]" default="0.2us">
								<item label="0.2us"/>
								<item label="0.4us"/>
								<item label="0.8us"/>
								<item label="1.6us"/>
							</combo>
						</button>
						<button label="Disable CCP"/>
					</radio>
				</branch>
			</branch>
			<branch label="Gate Charge/Discharge">
				<combo label="Charge Current Range" define="BDRV_CTRL3[6]" default="0..150mA">
					<item label="0..150mA"/>
					<item label="0..300mA"/>
				</combo>
				<edit label="Charge Current" define="BDRV_CTRL3[4:0]" default="17"/>
				<math label="effective Charge Current (approx.)" unit="mA" define="BDRV_EFF_CRG_CURR" formula="((BDRV_CTRL3[4:0]^2)*-0.0324+5.9638*BDRV_CTRL3[4:0]-2.0601)*(BDRV_CTRL3[6]+1)"/>
				<combo label="Discharge Current Range" define="BDRV_CTRL3[14]" default="0..150mA">
					<item label="0..150mA"/>
					<item label="0..300mA"/>
				</combo>
				<edit label="Discharge Current" define="BDRV_CTRL3[12:8]" default="17"/>
				<math label="effective Discharge Current (approx.)" unit="mA" define="BDRV_EFF_DISCRG_CURR" formula="((BDRV_CTRL3[12:8]^2)*-0.0324+5.9638*BDRV_CTRL3[12:8]-2.0601)*(BDRV_CTRL3[14]+1)"/>
				<button define="BDRV_CTRL3[7]" label="Charge Sequencer">
					<edit label="Step 1 - Current" define="BDRV_ON_SEQ[31:27]" default="0"/>
					<combo label="Step 1 - Duration Time" define="BDRV_ON_SEQ[26:24]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
					<edit label="Step 2 - Current" define="BDRV_ON_SEQ[23:19]" default="0"/>
					<combo label="Step 2 - Duration Time" define="BDRV_ON_SEQ[18:16]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
					<edit label="Step 3 - Current" define="BDRV_ON_SEQ[15:11]" default="0"/>
					<combo label="Step 3 - Duration Time" define="BDRV_ON_SEQ[10:8]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
					<edit label="Step 4 - Current" define="BDRV_ON_SEQ[7:3]" default="0"/>
					<combo label="Step 4 - Duration Time" define="BDRV_ON_SEQ[2:0]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
				</button>
				<button define="BDRV_CTRL3[15]" label="Discharge Sequencer">
					<edit label="Step 1 - Current" define="BDRV_OFF_SEQ[31:27]" default="0"/>
					<combo label="Step 1 - Duration Time" define="BDRV_OFF_SEQ[26:24]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
					<edit label="Step 2 - Current" define="BDRV_OFF_SEQ[23:19]" default="0"/>
					<combo label="Step 2 - Duration Time" define="BDRV_OFF_SEQ[18:16]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
					<edit label="Step 3 - Current" define="BDRV_OFF_SEQ[15:11]" default="0"/>
					<combo label="Step 3 - Duration Time" define="BDRV_OFF_SEQ[10:8]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
					<edit label="Step 4 - Current" define="BDRV_OFF_SEQ[7:3]" default="0"/>
					<combo label="Step 4 - Duration Time" define="BDRV_OFF_SEQ[2:0]" default="50ns">
						<item label="50ns"/>
						<item label="100ns"/>
						<item label="150ns"/>
						<item label="200ns"/>
						<item label="250ns"/>
						<item label="300ns"/>
						<item label="350ns"/>
						<item label="400ns"/>
					</combo>			
				</button>
			</branch>
		</header>
	</module>
	<module label="BEMF" desc="Back EMF">
		<header define="bdrv_defines.h">
			<button label="BEMF Settings" define="MF_BEMFC_CTRL_STS[2:0]" default="0">
				<button label="Comparators enable" define="MF_BEMFC_CTRL_STS[10:8]"/>
				<button label="connect to CCU6" define="MF_BEMFC_CTRL_STS[12]" lockon="CCU6_PISEL0[9:8]=BEMF Comparator;CCU6_PISEL0[11:10]=BEMF Comparator;CCU6_PISEL0[13:12]=BEMF Comparator"/>
				<button label="connect to GPT2.CAPIN" define="SCU_MODPISEL1[0]" lockon="GPT12E_PISEL[15:14]=BEMF Comparator">
					<combo label="Capture Input Select" define="MF_TRIM_BEMFx[5:4]" default="SWTRIG">
						<item label="SWTRIG"/>
						<item label="Phase U"/>
						<item label="Phase V"/>
						<item label="Phase W"/>
					</combo>			
				</button>
				<combo label="Spike Filter Time" define="MF_TRIM_BEMFx[9:8]" default="1us">
					<item label="1us"/>
					<item label="2us"/>
					<item label="4us"/>
					<item label="8us"/>
				</combo>
				<button label="Blank Filter enable"  role="invert" define="MF_BEMFC_CTRL_STS[4]">
					<combo label="Blank Filter Time" define="MF_TRIM_BEMFx[2:0]" default="3us">
						<item label="3us" value="4"/>
						<item label="6us" value="0"/>
						<item label="8us" value="1"/>
						<item label="12us" value="2"/>
						<item label="16us" value="3"/>
					</combo>
					<button label="Demag. Pulse Filter enable"  role="invert" define="MF_BEMFC_CTRL_STS[3]"/>
				</button>
				<branch label="Interrupt">
					<button label="Phase U, X-ing, High" define="BEMF_U_HI_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[17]" header="int_defines.h"/>
						<edit label="Call Back" define="BEMF_U_HI_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Phase U, X-ing, Low" define="BEMF_U_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[16]" header="int_defines.h"/>
						<edit label="Call Back" define="BEMF_U_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Phase V, X-ing, High" define="BEMF_V_HI_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[19]" header="int_defines.h"/>
						<edit label="Call Back" define="BEMF_V_HI_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Phase V, X-ing, Low" define="BEMF_V_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[18]" header="int_defines.h"/>
						<edit label="Call Back" define="BEMF_V_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Phase W, X-ing, High" define="BEMF_W_HI_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[21]" header="int_defines.h"/>
						<edit label="Call Back" define="BEMF_W_HI_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Phase W, X-ing, Low" define="BEMF_W_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[20]" header="int_defines.h"/>
						<edit label="Call Back" define="BEMF_W_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
		</header>
	</module>
	<module label="CCU6" desc="Capture Compare Unit 6">
		<header define="ccu6_defines.h">
			<branch label="Timer12/13 Configuration">
				<branch label="Timer12">
					<math label="Timer12 Clock" unit="MHz" define="CCU6_T12_CLK" formula="SCU_PLL_fPLL/((2^CCU6_TCTR0[2:0])*(CCU6_TCTR0[3]?256:1))"/>
					<math label="Max. Period" unit="us" define="CCU6_T12_MAX_PERIOD" formula="65535/CCU6_T12_CLK"/>
					<branch label="Clock Prescaler">
						<combo label="Clock Divider" define="CCU6_TCTR0[2:0]" default="div 1">
							<item label="div 1"/>
							<item label="div 2"/>
							<item label="div 4"/>
							<item label="div 8"/>
							<item label="div 16"/>
							<item label="div 32"/>
							<item label="div 64"/>
							<item label="div 128"/>
						</combo>
						<button label="additional /256 Clock Prescaler enable" define="CCU6_TCTR0[3]"/>
					</branch>
					<branch label="Period Value">
						<radio define="CCU6_T12_PERIOD_SEL" default="1">
							<button label="...as clock ticks">
								<edit label="Period Value [ticks]" define="CCU6_T12_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]">
								<edit label="Time [us]" define="CCU6_T12_TIME" default="1"/>
							</button>
							<button label="...as frequency [Hz]">
								<edit label="Frequency [Hz]" define="CCU6_T12_FREQ" default="20000"/>
							</button>
						</radio>
						<math define="CCU6_T12PERIOD[15:0]" formula="CCU6_T12_PERIOD_SEL&lt;1?CCU6_T12_TICK[15:0]:CCU6_T12_PERIOD_SEL&lt;2?CCU6_T12_CLK*CCU6_T12_TIME/(1+1*CCU6_TCTR0[7]):((CCU6_T12_CLK*1e6)/CCU6_T12_FREQ)/(1+1*CCU6_TCTR0[7])"/>
						<math label="Period (ticks)" define="CCU6_T12PR[15:0]" formula="CCU6_T12_PERIOD_SEL&lt;1?CCU6_T12_TICK[15:0]-1:CCU6_T12_PERIOD_SEL&lt;2?CCU6_T12_CLK*CCU6_T12_TIME/(1+1*CCU6_TCTR0[7])-1:((CCU6_T12_CLK*1e6)/CCU6_T12_FREQ)/(1+1*CCU6_TCTR0[7])-1"/>
					</branch>
					<combo label="Operation Mode" define="CCU6_TCTR0[7]">
						<item label="Edge-aligned"/>
						<item label="Center-aligned"/>
					</combo>
					<combo label="Single Shot" define="CCU6_TCTR2[0]">
						<item label="disabled"/>
						<item label="enabled"/>
					</combo>
					<combo label="Trigger External Run Select" define="CCU6_TCTR2[9:8]">
						<item label="disabled"/>
						<item label="on rising edge on T12HR"/>
						<item label="on falling edge on T12HR"/>
						<item label="on any edge on T12HR"/>
					</combo>
					<branch label="Dead Time Control">
						<edit label="Dead Time [us]" define="CCU6_DEADTIME" default="0"/>
						<math label="Dead Time" unit="ticks" define="CCU6_T12DTC[7:0]" formula="CCU6_T12_CLK*(CCU6_DEADTIME)/(1+1*CCU6_TCTR0[7])"/>
						<button label="Channel 0 enabled" define="CCU6_T12DTC[8]"/>
						<button label="Channel 1 enabled" define="CCU6_T12DTC[9]"/>
						<button label="Channel 2 enabled" define="CCU6_T12DTC[10]"/>
					</branch>
				</branch>
				<branch label="Timer13">
					<math label="Timer13 Clock" unit="MHz" define="CCU6_T13_CLK" formula="SCU_PLL_fPLL/((2^CCU6_TCTR0[10:8])*(CCU6_TCTR0[11]?256:1))"/>
					<math label="Max. Period" unit="us" define="CCU6_T13_MAX_PERIOD" formula="65535/CCU6_T13_CLK"/>
					<branch label="Clock Prescaler">
						<combo label="Clock Divider" define="CCU6_TCTR0[10:8]" default="div 1">
							<item label="div 1"/>
							<item label="div 2"/>
							<item label="div 4"/>
							<item label="div 8"/>
							<item label="div 16"/>
							<item label="div 32"/>
							<item label="div 64"/>
							<item label="div 128"/>
						</combo>
						<button label="additional /256 Clock Prescaler enable" define="CCU6_TCTR0[11]"/>
					</branch>
					<branch label="Period Value">
						<radio define="CCU6_T13_PERIOD_SEL" default="1">
							<button label="...as clock ticks">
								<edit label="Period Value [ticks]" define="CCU6_T13_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]">
								<edit label="Time [us]" define="CCU6_T13_TIME" default="1"/>
							</button>
							<button label="...as frequency [Hz]">
								<edit label="Frequency [Hz]" define="CCU6_T13_FREQ" default="20000"/>
							</button>
						</radio>
						<math define="CCU6_T13PERIOD[15:0]" formula="CCU6_T13_PERIOD_SEL&lt;1?CCU6_T13_TICK[15:0]:CCU6_T13_PERIOD_SEL&lt;2?CCU6_T13_CLK*CCU6_T13_TIME:(CCU6_T13_CLK*1e6)/CCU6_T13_FREQ"/>
						<math label="Period (ticks)" define="CCU6_T13PR[15:0]" formula="CCU6_T13_PERIOD_SEL&lt;1?CCU6_T13_TICK[15:0]-1:CCU6_T13_PERIOD_SEL&lt;2?CCU6_T13_CLK*CCU6_T13_TIME-1:(CCU6_T13_CLK*1e6)/CCU6_T13_FREQ-1"/>
					</branch>
					<combo label="Single Shot" define="CCU6_TCTR2[1]">
						<item label="disabled"/>
						<item label="enabled"/>
					</combo>
					<combo label="Trigger Select" define="CCU6_TCTR2[4:2]">
						<item label="no trigger"/>
						<item label="T12 Compare Match on Ch0 "/>
						<item label="T12 Compare Match on Ch1 "/>
						<item label="T12 Compare Match on Ch2 "/>
						<item label="T12 Compare Match on any channel"/>
						<item label="T12 Period Match"/>
						<item label="T12 Zero Match"/>
						<item label="any edge on CCPOSx inputs"/>
					</combo>
					<combo label="Trigger Event Direction" define="CCU6_TCTR2[6:5]">
						<item label="no action"/>
						<item label="T12 counting up"/>
						<item label="T12 counting down"/>
						<item label="T12 any counting direction"/>
					</combo>
					<combo label="Trigger External Run Select" define="CCU6_TCTR2[11:10]">
						<item label="disabled"/>
						<item label="on rising edge on T13HR"/>
						<item label="on falling edge on T13HR"/>
						<item label="on any edge on T13HR"/>
					</combo>
				</branch>
			</branch>
			<branch label="Channel Configuration">
				<branch label="Channel 0">
					<branch label="Compare Value">
						<radio define="CCU6_CH0_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH0_CMP_TIME=0;CCU6_CH0_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH0_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH0_CMP_TICK=0;CCU6_CH0_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH0_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH0_CMP_TICK=0;CCU6_CH0_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH0_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC60SR" formula="CCU6_CH0_CMP_TICK+(CCU6_T12_CLK*CCU6_CH0_CMP_TIME)+(CCU6_T12PR[15:0]*CCU6_CH0_CMP_DC/100)"/>
					</branch>
					<combo label="Capture/Compare Mode" define="CCU6_T12MSEL[3:0]">
						<item label="(0b0000) Compare outputs disabled"/>
						<item label="(0b0001) Compare output on CC60 "/>
						<item label="(0b0010) Compare output on COUT60"/>
						<item label="(0b0011) Compare output on CC60/COUT60"/>
						<item label="(0b0100) Capture T12 into CC60R/COUT60R on input CC60"/>
						<item label="(0b0101) CC60SR -> CC60R on rising edge CC60 input, T12 capture"/>
						<item label="(0b0110) CC60SR -> CC60R on falling edge CC60 input, T12 capture"/>
						<item label="(0b0111) CC60SR -> CC60R on any edge CC60 input, T12 capture"/>
						<item label="(0b1000) Hall-Sensor Mode"/>
						<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
						<item label="(0b1010) T12 -> CC60R on rising edge CC60 input, T12 -> CC60SR on falling edge CCPOS60"/>
						<item label="(0b1011) T12 -> CC60R on falling edge CC60 input, T12 -> CC60SR on rising edge CCPOS60"/>
						<item label="(0b1100) T12 -> CC60R on rising edge CC60 input, T12 -> CC60SR on rising edge CCPOS60"/>
						<item label="(0b1101) T12 -> CC60R on falling edge CC60 input, T12 -> CC60SR on falling edge CCPOS60"/>
						<item label="(0b1110) T12 -> CC60R on any edge CC60 input, T12 -> CC60SR on any edge CCPOS60"/>
					</combo>
					<branch label="Passive State">
						<branch label="CC60">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[8]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[0]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
						<branch label="COUT60">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[9]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[1]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
					</branch>
					<branch label="Modulation">
						<button label="Timer12 modulates CC60" define="CCU6_MODCTR[0]"/>
						<button label="Timer12 modulates COUT60" define="CCU6_MODCTR[1]"/>
						<button label="Timer13 modulates CC60" define="CCU6_MODCTR[8]"/>
						<button label="Timer13 modulates COUT60" define="CCU6_MODCTR[9]"/>
					</branch>
				</branch>
				<branch label="Channel 1">
					<branch label="Compare Value">
						<radio define="CCU6_CH1_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH1_CMP_TIME=0;CCU6_CH1_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH1_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH1_CMP_TICK=0;CCU6_CH1_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH1_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH1_CMP_TICK=0;CCU6_CH1_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH1_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC61SR" formula="CCU6_CH1_CMP_TICK+(CCU6_T12_CLK*CCU6_CH1_CMP_TIME)+(CCU6_T12PR[15:0]*CCU6_CH1_CMP_DC/100)"/>
					</branch>
					<combo label="Capture/Compare Mode" define="CCU6_T12MSEL[7:4]">
						<item label="(0b0000) Compare outputs disabled"/>
						<item label="(0b0001) Compare output on CC61 "/>
						<item label="(0b0010) Compare output on COUT61"/>
						<item label="(0b0011) Compare output on CC61/COUT61"/>
						<item label="(0b0100) Capture T12 into CC61R/COUT61R on input CC61"/>
						<item label="(0b0101) CC61SR -> CC61R on rising edge CC61 input, T12 capture"/>
						<item label="(0b0110) CC61SR -> CC61R on falling edge CC61 input, T12 capture"/>
						<item label="(0b0111) CC61SR -> CC61R on any edge CC61 input, T12 capture"/>
						<item label="(0b1000) Hall-Sensor Mode"/>
						<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
						<item label="(0b1010) T12 -> CC61R on rising edge CC61 input, T12 -> CC61SR on falling edge CCPOS61"/>
						<item label="(0b1011) T12 -> CC61R on falling edge CC61 input, T12 -> CC61SR on rising edge CCPOS61"/>
						<item label="(0b1100) T12 -> CC61R on rising edge CC61 input, T12 -> CC61SR on rising edge CCPOS61"/>
						<item label="(0b1101) T12 -> CC61R on falling edge CC61 input, T12 -> CC61SR on falling edge CCPOS61"/>
						<item label="(0b1110) T12 -> CC61R on any edge CC61 input, T12 -> CC61SR on any edge CCPOS61"/>
					</combo>
					<branch label="Passive State">
						<branch label="CC61">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[10]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[2]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
						<branch label="COUT61">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[11]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[3]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
					</branch>
					<branch label="Modulation">
						<button label="Timer12 modulates CC61" define="CCU6_MODCTR[2]"/>
						<button label="Timer12 modulates COUT61" define="CCU6_MODCTR[3]"/>
						<button label="Timer13 modulates CC61" define="CCU6_MODCTR[10]"/>
						<button label="Timer13 modulates COUT61" define="CCU6_MODCTR[11]"/>
					</branch>
				</branch>
				<branch label="Channel 2">
					<branch label="Compare Value">
						<radio define="CCU6_CH2_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH2_CMP_TIME=0;CCU6_CH2_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH2_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH2_CMP_TICK=0;CCU6_CH2_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH2_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH2_CMP_TICK=0;CCU6_CH2_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH2_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC62SR" formula="CCU6_CH2_CMP_TICK+(CCU6_T12_CLK*CCU6_CH2_CMP_TIME)+(CCU6_T12PR[15:0]*CCU6_CH2_CMP_DC/100)"/>
					</branch>
					<combo label="Capture/Compare Mode" define="CCU6_T12MSEL[11:8]">
						<item label="(0b0000) Compare outputs disabled"/>
						<item label="(0b0001) Compare output on CC62 "/>
						<item label="(0b0010) Compare output on COUT62"/>
						<item label="(0b0011) Compare output on CC62/COUT62"/>
						<item label="(0b0100) Capture T12 into CC62R/COUT62R on input CC62"/>
						<item label="(0b0101) CC62SR -> CC62R on rising edge CC62 input, T12 capture"/>
						<item label="(0b0110) CC62SR -> CC62R on falling edge CC62 input, T12 capture"/>
						<item label="(0b0111) CC62SR -> CC62R on any edge CC62 input, T12 capture"/>
						<item label="(0b1000) Hall-Sensor Mode"/>
						<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
						<item label="(0b1010) T12 -> CC62R on rising edge CC62 input, T12 -> CC62SR on falling edge CCPOS62"/>
						<item label="(0b1011) T12 -> CC62R on falling edge CC62 input, T12 -> CC62SR on rising edge CCPOS62"/>
						<item label="(0b1100) T12 -> CC62R on rising edge CC62 input, T12 -> CC62SR on rising edge CCPOS62"/>
						<item label="(0b1101) T12 -> CC62R on falling edge CC62 input, T12 -> CC62SR on falling edge CCPOS62"/>
						<item label="(0b1110) T12 -> CC62R on any edge CC62 input, T12 -> CC62SR on any edge CCPOS62"/>
					</combo>
					<branch label="Passive State">
						<branch label="CC62">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[12]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[4]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
						<branch label="COUT62">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[13]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[5]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
					</branch>
					<branch label="Modulation">
						<button label="Timer12 modulates CC62" define="CCU6_MODCTR[4]"/>
						<button label="Timer12 modulates COUT62" define="CCU6_MODCTR[5]"/>
						<button label="Timer13 modulates CC62" define="CCU6_MODCTR[12]"/>
						<button label="Timer13 modulates COUT62" define="CCU6_MODCTR[13]"/>
					</branch>
				</branch>
				<branch label="Channel 3">
					<branch label="Compare Value">
						<radio define="CCU6_CH3_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH3_CMP_TIME=0;CCU6_CH3_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH3_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH3_CMP_TICK=0;CCU6_CH3_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH3_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH3_CMP_TICK=0;CCU6_CH3_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH3_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC63SR" formula="CCU6_CH3_CMP_TICK+(CCU6_T13_CLK*CCU6_CH3_CMP_TIME)+(CCU6_T13PR[15:0]*CCU6_CH3_CMP_DC/100)"/>
					</branch>
					<branch label="Passive State - COUT63">
						<combo label="Passive State Select" define="CCU6_CMPSTAT[14]">
							<item label="Passive State before Compare"/>
							<item label="Passive State after Compare"/>
						</combo>
						<combo label="Passive State Level" define="CCU6_PSLR[7]">
							<item label="Low"/>
							<item label="High"/>
						</combo>
					</branch>
					<button label="Invert COUT63" define="CCU6_CMPSTAT[15]"/>
					<branch label="Modulation">
						<button label="Timer13 modulates COUT63" define="CCU6_MODCTR[15]"/>
					</branch>
				</branch>
			</branch>
			<branch label="HALL Configuration">
				<combo label="HALL Synchronization" define="CCU6_T12MSEL[14:12]">
					<item label="(0b000) any edge on CCPOS0(1,2)"/>
					<item label="(0b001) T13 compare match "/>
					<item label="(0b010) T13 period match"/>
					<item label="(0b011) HALL sampling switched off"/>
					<item label="(0b100) Capture T12 into CC62R/COUT62R on input CC62"/>
					<item label="(0b101) T12 period match (counting up)"/>
					<item label="(0b110) T12 one-match (counting down)"/>
					<item label="(0b111) T12 compare match on Channel 0"/>
				</combo>
				<button label="Delay Bypass" define="CCU6_T12MSEL[15]"/>
				<button label="Enable Idle Mode in case of Wrong HALL Event" define="CCU6_IEN[14]"/>
			</branch>
			<branch label="Interrupt">
				<branch label="Interrupt Enable">
					<button label="Capture, Compare-Match Rising Edge for Channel 0" define="CCU6_CH0_CM_R_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[0]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CH0_CM_R_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Falling Edge for Channel 0" define="CCU6_CH0_CM_F_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[1]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CH0_CM_F_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Rising Edge for Channel 1" define="CCU6_CH1_CM_R_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[2]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CH1_CM_R_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Falling Edge for Channel 1" define="CCU6_CH1_CM_F_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[3]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CH1_CM_F_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Rising Edge for Channel 2" define="CCU6_CH2_CM_R_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[4]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CH2_CM_R_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Falling Edge for Channel 2" define="CCU6_CH2_CM_F_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[5]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CH2_CM_F_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer12 One-Match" define="CCU6_T12_OM_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[6]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_T12_OM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer12 Period-Match" define="CCU6_T12_PM_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[7]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_T12_PM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer13 Compare-Match" define="CCU6_T13_CM_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[8]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_T13_CM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer13 Period-Match" define="CCU6_T13_PM_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[9]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_T13_PM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trap Flag" define="CCU6_TRAP_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[10]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_TRAP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Correct Hall Event" define="CCU6_CHE_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[12]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_CORRECT_HALL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Wrong Hall Event" define="CCU6_WHE_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[13]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_WRONG_HALL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Multi-Channel Mode Shadow Transfer" define="CCU6_MCM_STR_INT_EN" header="isr_defines.h">			
						<button label="Enable Interrupt" define="CCU6_IEN[15]" header="ccu6_defines.h"/>
						<edit label="Call Back" define="CCU6_MCM_STR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Interrupt Node Selection">
					<combo label="Channel 0" define="CCU6_INP[1:0]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Channel 1" define="CCU6_INP[3:2]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Channel 2" define="CCU6_INP[5:4]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Correct Hall Event" define="CCU6_INP[7:6]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Error" define="CCU6_INP[9:8]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Timer 12" define="CCU6_INP[11:10]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Timer 13" define="CCU6_INP[13:12]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
				</branch>
				<branch label="Interrupt Node Enable">
					<button label="SR0 enable" define="CCU6_NVIC[0]" default="1" lockon="CPU_NVIC_ISER0[4]=1"/>
					<button label="SR1 enable" define="CCU6_NVIC[1]" lockon="CPU_NVIC_ISER0[5]=1"/>
					<button label="SR2 enable" define="CCU6_NVIC[2]" lockon="CPU_NVIC_ISER0[6]=1"/>
					<button label="SR3 enable" define="CCU6_NVIC[3]" lockon="CPU_NVIC_ISER0[7]=1"/>
				</branch>
			</branch>
			<button label="Multi-Channel Configuration" define="CCU6_MODCTR[7]">
				<combo label="Switching Selection" define="CCU6_MCMCTR[2:0]">
					<item label="no action"/>
					<item label="correct HALL pattern detected"/>
					<item label="Timer13 period match"/>
					<item label="Timer12 one match"/>
					<item label="Timer12 Channel 1 compare match"/>
					<item label="Timer12 period match"/>
				</combo>
				<combo label="Switching Synchronization" define="CCU6_MCMCTR[5:4]">
					<item label="direct trigger of shadow transfer"/>
					<item label="Timer13 zero match triggers shadow transfer"/>
					<item label="Timer12 zero match triggers shadow transfer"/>
				</combo>
				<button label="Shadow transfer for Timer12 up counting" define="CCU6_MCMCTR[8]"/>
				<button label="Shadow transfer for Timer12 down counting" define="CCU6_MCMCTR[9]"/>
				<button label="Shadow transfer for Timer13 up counting" define="CCU6_MCMCTR[10]"/>
			</button>
			<branch label="Trap Control">
				<combo label="Trap Mode" define="CCU6_TRPCTR[1:0]">
					<item label="trap state left on Timer12 zero match" value="0"/>
					<item label="trap state left on Timer13 zero match" value="1"/>
					<item label="trap state left immediately" value="3"/>
				</combo>
				<combo label="Trap Mode 2" define="CCU6_TRPCTR[2]">
					<item label="trap state left on /CTRAP input inactive"/>
					<item label="trap state left on TRPF reset by SW and /CTRAP input inactive"/>
				</combo>
				<button label="Trap on CC60" define="CCU6_TRPCTR[8]"/>
				<button label="Trap on COUT60" define="CCU6_TRPCTR[9]"/>
				<button label="Trap on CC61" define="CCU6_TRPCTR[10]"/>
				<button label="Trap on COUT61" define="CCU6_TRPCTR[11]"/>
				<button label="Trap on CC62" define="CCU6_TRPCTR[12]"/>
				<button label="Trap on COUT62" define="CCU6_TRPCTR[13]"/>
				<button label="Trap for Timer13" define="CCU6_TRPCTR[14]"/>
				<button label="Trap Pin (CTRAP)" define="CCU6_TRPCTR[15]"/>
			</branch>
			<branch label="Pin Select">
				<branch label="Inputs">
					<branch label="Channels">
						<combo label="CC60" define="CCU6_PISEL0[1:0]" default="CC60_1 (P2.3)">
							<item label="CC60_0 (P0.4)" value="0" lockon="PORT_P0_DIR[4]=Input"/>
							<item label="CC60_1 (P2.3)" value="1"/>
						</combo>
						<combo label="CC61" define="CCU6_PISEL0[3:2]" default="none">
							<item label="none" value="1"/>
							<item label="CC61_0 (P1.0)" value="0" lockon="PORT_P1_DIR[0]=Input"/>
						</combo>
						<combo label="CC62" define="CCU6_PISEL0[5:4]" default="CC62_2 (P2.2)">
							<item label="CC62_0 (P1.3)" value="0" lockon="PORT_P1_DIR[3]=Input"/>
							<item label="CC62_2 (P2.2)" value="2"/>
						</combo>
						<combo label="CTRAP" define="CCU6_PISEL0[7:6]">
							<item label="CTRAP_0 (P2.4)" value="0"/>
							<item label="CTRAP_1 (P2.3)" value="1"/>
						</combo>
						<combo label="CCPOS0" define="CCU6_PISEL0[9:8]" default="CCPOS0_3 (P2.0)">
							<item label="BEMF Comparator" value="3"/>
							<item label="CCPOS0_1 (P0.3)" value="1" lockon="PORT_P0_DIR[3]=Input"/>
							<item label="CCPOS0_2 (P1.3)" value="2" lockon="PORT_P1_DIR[3]=Input"/>
							<item label="CCPOS0_3 (P2.0)" value="3"/>
						</combo>
						<combo label="CCPOS1" define="CCU6_PISEL0[11:10]">
							<item label="CCPOS1_0 (P2.3)" value="0"/>
							<item label="CCPOS1_1 (P0.4)" value="1" lockon="PORT_P0_DIR[4]=Input"/>
							<item label="CCPOS1_2 (P1.4)" value="2" lockon="PORT_P1_DIR[4]=Input"/>
							<item label="BEMF Comparator" value="3"/>
						</combo>
						<combo label="CCPOS2" define="CCU6_PISEL0[13:12]" default="CCPOS2_3 (P2.2)">
							<item label="BEMF Comparator" value="3"/>
							<item label="CCPOS2_1 (P0.2)" value="1" lockon="PORT_P0_DIR[2]=Input"/>
							<item label="CCPOS2_2 (P1.2)" value="2" lockon="PORT_P1_DIR[2]=Input"/>
							<item label="CCPOS2_3 (P2.2)" value="3"/>
						</combo>
					</branch>
					<branch label="Timers">
						<combo label="T12HR" define="CCU6_PISEL0[15:14]" default="T12HR_2 (P2.0)">
							<item label="T12HR_0 (P0.0)" value="0" lockon="PORT_P0_DIR[0]=Input"/>
							<item label="T12HR_2 (P2.0)" value="2"/>
						</combo>
						<combo label="T13HR" define="CCU6_PISEL2[1:0]" default="T13HR_2 (P2.2)">
							<item label="T13HR_0 (P0.1)" value="0" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="T13HR_2 (P2.2)" value="2"/>
						</combo>
						<combo label="Timer12 Counting Input" define="CCU6_PISEL2[3:2]">
							<item label="T12 prescaler"/>
							<item label="TCTR4.T12CNT"/>
							<item label="rising edge on T12HR"/>
							<item label="falling edge on T12HR"/>
						</combo>
						<combo label="Timer13 Counting Inputs" define="CCU6_PISEL2[5:4]">
							<item label="T13 prescaler"/>
							<item label="TCTR4.T13CNT"/>
							<item label="rising edge on T13HR"/>
							<item label="falling edge on T13HR"/>
						</combo>
					</branch>
				</branch>
				<branch label="Outputs">
					<branch label="Channels">
						<combo label="CC60" define="CCU6_TEMP_CC60_OUT" default="none">
							<item label="none"/>
							<item label="CC60_0 (P0.4)" lockon="PORT_P0_DIR[4]=Output;PORT_P0_4_ALT[1:0]=CC60_0"/>
						</combo>
						<combo label="COUT60" define="CCU6_TEMP_COUT60_OUT" default="none">
							<item label="none"/>
							<item label="COUT60_0 (P0.2)" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=COUT60_0"/>
						</combo>
						<combo label="CC61" define="CCU6_TEMP_CC61_OUT" default="none">
							<item label="none"/>
							<item label="CC61_0 (P1.0)" lockon="PORT_P1_DIR[0]=Output;PORT_P1_0_ALT[1:0]=CC61_0"/>
						</combo>
						<combo label="COUT61" define="CCU6_TEMP_COUT61_OUT" default="none">
							<item label="none"/>
							<item label="COUT61_0 (P1.1)" lockon="PORT_P1_DIR[1]=Output;PORT_P1_1_ALT[1:0]=COUT61_0"/>
						</combo>
						<combo label="CC62" define="CCU6_TEMP_CC62_OUT" default="none">
							<item label="none"/>
							<item label="CC62_0 (P1.3)" lockon="PORT_P1_DIR[3]=Output;PORT_P1_3_ALT[1:0]=CC62_0"/>
						</combo>
						<combo label="COUT62" define="CCU6_TEMP_COUT62_OUT" default="none">
							<item label="none"/>
							<item label="COUT62_0 (P1.4)" lockon="PORT_P1_DIR[4]=Output;PORT_P1_4_ALT[1:0]=COUT62_0"/>
						</combo>
						<combo label="COUT63" define="CCU6_TEMP_COUT63_OUT" default="none">
							<item label="none"/>
							<item label="COUT63_0 (P1.2)" lockon="PORT_P1_DIR[2]=Output;PORT_P1_2_ALT[1:0]=COUT63_0"/>
						</combo>
					</branch>
				</branch>
			</branch>
		</header>
	</module>
	<module label="GPT12E" desc="General Purpose Timer 12E">
		<header define="gpt12e_defines.h">
			<branch label="GPT1">
				<branch label="Clock">
					<combo label="Block Prescaler" define="GPT12E_T3CON[12:11]" default="fGPT / 4">
						<item label="fGPT / 4" value="1"/>
						<item label="fGPT / 8" value="0"/>
						<item label="fGPT / 16" value="3"/>
						<item label="fGPT / 32" value="2"/>
					</combo>
					<math label="GPT1 Clock" unit="MHz" define="GPT1_BASE_CLK" formula="SCU_PLL_fPLL/(4*2^(GPT12E_T3CON[12:11].^1))"/>
				</branch>
				<branch label="Aux. Timer2">
					<math label="GPT1 Timer2 Clock" unit="MHz" define="GPT1_T2_CLK" formula="GPT12E_T2CON[5:3]&lt;1?(GPT1_BASE_CLK/2^(GPT12E_T2CON_T2I_TIMER)):(GPT12E_T2CON[5:3]&lt;2?GPT1_BASE_CLK:(GPT12E_T2CON[5:3]&lt;3?(GPT1_BASE_CLK/2^(GPT12E_T2CON_T2I_GATED_TIMER_LOW)):(GPT12E_T2CON[5:3]&lt;4?(GPT1_BASE_CLK/2^(GPT12E_T2CON_T2I_GATED_TIMER_HIGH)):GPT1_BASE_CLK)))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T2CON[5:3]">
							<button label="Timer Mode" value="0">
								<combo label="Individual Prescaler" define="GPT12E_T2CON_T2I_TIMER">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_COUNTER">
									<item label="None. Counter T2 is disabled" value="0"/>
									<item label="Rising edge on T2IN" value="1"/>
									<item label="Falling edge on T2IN" value="2"/>
									<item label="Rising or Falling edge on T2IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2">
								<combo label="Individual Prescaler" define="GPT12E_T2CON_T2I_GATED_TIMER_LOW">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3">
								<combo label="Individual Prescaler" define="GPT12E_T2CON_T2I_GATED_TIMER_HIGH">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Reload Mode" value="4">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_RELOAD">
									<item label="None. Counter T2 is disabled" value="0"/>
									<item label="Rising edge on T2IN" value="1"/>
									<item label="Falling edge on T2IN" value="2"/>
									<item label="Rising or Falling edge on T2IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Capture Mode" value="5">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_CAPTURE">
									<item label="None. Counter T2 is disabled" value="0"/>
									<item label="Rising edge on T2IN" value="1"/>
									<item label="Falling edge on T2IN" value="2"/>
									<item label="Rising or Falling edge on T2IN" value="3"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, rotation detection" value="6">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_INC_ROT">
									<item label="None. Counter T2 stopped"/>
									<item label="Rising or Falling edge on T2IN"/>
									<item label="Rising or Falling edge on T2EUD"/>
									<item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, edge detection" value="7">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_INC_EDGE">
									<item label="None. Counter T2 stopped"/>
									<item label="Rising or Falling edge on T2IN"/>
									<item label="Rising or Falling edge on T2EUD"/>
									<item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
								</combo>
							</button>
						</radio>
						<math label="T2I" define="GPT12E_T2CON[2:0]" formula="GPT12E_T2CON[5:3]&lt;1?GPT12E_T2CON_T2I_TIMER:GPT12E_T2CON[5:3]&lt;2?GPT12E_T2CON_T2I_COUNTER:GPT12E_T2CON[5:3]&lt;3?GPT12E_T2CON_T2I_GATED_TIMER_LOW:GPT12E_T2CON[5:3]&lt;4?GPT12E_T2CON_T2I_GATED_TIMER_HIGH:GPT12E_T2CON[5:3]&lt;5?GPT12E_T2CON_T2I_RELOAD:GPT12E_T2CON[5:3]&lt;6?GPT12E_T2CON_T2I_CAPTURE:GPT12E_T2CON[5:3]&lt;7?GPT12E_T2CON_T2I_INC_ROT:GPT12E_T2CON_T2I_INC_EDGE"/>
					</branch>
					<button label="Remote Run Control by T3" define="GPT12E_T2CON[9]"/>
					<branch label="Direction Control">
						<radio define="GPT12E_T2CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T2CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T2EUD input">
								<combo label="T2EUD Input Pin Select" define="GPT12E_PISEL[1]" default="T2EUDB (P2.4)">
									<item label="T2EUDA (P0.2)" lockon="PORT_P0_DIR[2]=Input"/>
									<item label="T2EUDB (P2.4)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<branch label="Timer Value">
						<radio define="GPT12E_TEMP_T2_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T2_TIME=0">
								<edit label="T2 Value [ticks]" define="GPT12E_T2_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T2_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T2_TIME" default="1"/>
							</button>
						</radio>
						<math label="Timer Value" unit="ticks" define="GPT12E_T2[15:0]" formula="GPT12E_T2CON[7]>0?(GPT12E_T2_TICK[15:0]+GPT1_T2_CLK*GPT12E_T2_TIME):(0x10000-(GPT12E_T2_TICK[15:0]+GPT1_T2_CLK*GPT12E_T2_TIME))"/>
					</branch>
					<button label="Pin Select" define="GPT12E_TEMP_T2_PISEL">
						<combo label="T2IN Pin Select" define="GPT12E_PISEL[0]" default="T2INA (P1.2)">
							<item label="T2INA (P1.2)" lockon="PORT_P1_DIR[2]=Input"/>
							<item label="T2INB (P1.4)" lockon="PORT_P1_DIR[4]=Input"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[0]=1">			
						<button label="Enable Interrupt" define="SCU_GPT12IEN[0]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT1_T2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Core Timer3">
					<math label="GPT1 Timer3 Clock" unit="MHz" define="GPT1_T3_CLK" formula="GPT12E_T3CON[5:3]&lt;1?(GPT1_BASE_CLK/2^(GPT12E_T3CON_T3I_TIMER)):(GPT12E_T3CON[5:3]&lt;2?GPT1_BASE_CLK:(GPT12E_T3CON[5:3]&lt;3?(GPT1_BASE_CLK/2^(GPT12E_T3CON_T3I_GATED_TIMER_LOW)):(GPT12E_T3CON[5:3]&lt;6?(GPT1_BASE_CLK/2^(GPT12E_T3CON_T3I_GATED_TIMER_HIGH)):GPT1_BASE_CLK)))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T3CON[5:3]">
							<button label="Timer Mode" value="0">
								<combo label="Individual Prescaler" define="GPT12E_T3CON_T3I_TIMER">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T3CON_T3I_COUNTER">
									<item label="None. Counter T3 is disabled"/>
									<item label="Rising edge on T3IN"/>
									<item label="Falling edge on T3IN"/>
									<item label="Rising or Falling edge on T3IN"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2">
								<combo label="Individual Prescaler" define="GPT12E_T3CON_T3I_GATED_TIMER_LOW">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3">
								<combo label="Individual Prescaler" define="GPT12E_T3CON_T3I_GATED_TIMER_HIGH">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, rotation detection" value="6">
								<combo label="Input Edge Select" define="GPT12E_T3CON_T3I_INC_ROT">
									<item label="None. Counter T3 stopped"/>
									<item label="Rising or Falling edge on T3IN"/>
									<item label="Rising or Falling edge on T3EUD"/>
									<item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, edge detection" value="7">
								<combo label="Input Edge Select" define="GPT12E_T3CON_T3I_INC_EDGE">
									<item label="None. Counter T3 stopped"/>
									<item label="Rising or Falling edge on T3IN"/>
									<item label="Rising or Falling edge on T3EUD"/>
									<item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
								</combo>
							</button>
						</radio>
						<math label="T3I" define="GPT12E_T3CON[2:0]" formula="GPT12E_T3CON[5:3]&lt;1?GPT12E_T3CON_T3I_TIMER:GPT12E_T3CON[5:3]&lt;2?GPT12E_T3CON_T3I_COUNTER:GPT12E_T3CON[5:3]&lt;3?GPT12E_T3CON_T3I_GATED_TIMER_LOW:GPT12E_T3CON[5:3]&lt;4?GPT12E_T3CON_T3I_GATED_TIMER_HIGH:GPT12E_T3CON[5:3]&lt;7?GPT12E_T3CON_T3I_INC_ROT:GPT12E_T3CON_T3I_INC_EDGE"/>
					</branch>
					<branch label="Direction Control">
						<radio define="GPT12E_T3CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T3CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T3EUD input">
								<combo label="T3EUD Input Pin Select" define="GPT12E_PISEL[5:4]" default="T3EUDB (P2.5)">
									<item label="T3EUDA (P0.4)" lockon="PORT_P0_DIR[4]=Input"/>
									<item label="T3EUDB (P2.5)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<button label="Output Toggle Latch (T3OTL) preset" define="GPT12E_T3CON[10]"/>
					<button label="Overflow/Underflow Output Enable - T3OUT" define="GPT12E_T3CON[9]">
						<combo label="T3OUT Pin Select" define="GPT12E_TEMP_T3OUT" default="T3OUT (P0.0)">
							<item label="T3OUT (P0.0)" lockon="PORT_P0_DIR[0]=Output;PORT_P0_0_ALT[1:0]=T3OUT"/>
							<item label="T3OUT (P1.2)" lockon="PORT_P1_DIR[2]=Output;PORT_P1_2_ALT[1:0]=T3OUT"/>
						</combo>
					</button>
					<branch label="Timer Value">
						<radio define="GPT12E_TEMP_T3_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T3_TIME=0">
								<edit label="T3 Value [ticks]" define="GPT12E_T3_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T3_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T3_TIME" default="1"/>
							</button>
						</radio>
						<math label="Timer Value" unit="ticks" define="GPT12E_T3[15:0]" formula="GPT12E_T3CON[7]>0?(GPT12E_T3_TICK[15:0]+GPT1_T3_CLK*GPT12E_T3_TIME):(0x10000-(GPT12E_T3_TICK[15:0]+GPT1_T3_CLK*GPT12E_T3_TIME))"/>
					</branch>
					<button label="Pin Select" define="GPT12E_TEMP_T3_PISEL">
						<combo label="T3IN Pin Select" define="GPT12E_PISEL[3:2]" default="T3IND (MON)">
							<item label="T3INA (CCU6 - CC60)"/>
							<item label="T3INB (T3INB/T4IND Input Selector from CCU6)"/>
							<item label="T3INC (P1.0)" lockon="PORT_P1_DIR[0]=Input"/>
							<item label="T3IND (MON)"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T3_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[0]=1">			
						<button label="Enable Interrupt" define="SCU_GPT12IEN[1]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT1_T3_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Aux. Timer4">
					<math label="GPT1 Timer4 Clock" unit="MHz" define="GPT1_T4_CLK" formula="GPT12E_T4CON[5:3]&lt;1?(GPT1_BASE_CLK/2^(GPT12E_T4CON_T4I_TIMER)):(GPT12E_T4CON[5:3]&lt;2?GPT1_BASE_CLK:(GPT12E_T4CON[5:3]&lt;3?(GPT1_BASE_CLK/2^(GPT12E_T4CON_T4I_GATED_TIMER_LOW)):(GPT12E_T4CON[5:3]&lt;4?(GPT1_BASE_CLK/2^(GPT12E_T4CON_T4I_GATED_TIMER_HIGH)):GPT1_BASE_CLK)))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T4CON[5:3]">
							<button label="Timer Mode" value="0">
								<combo label="Individual Prescaler" define="GPT12E_T4CON_T4I_TIMER">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_COUNTER">
									<item label="None. Counter T4 is disabled" value="0"/>
									<item label="Rising edge on T4IN" value="1"/>
									<item label="Falling edge on T4IN" value="2"/>
									<item label="Rising or Falling edge on T4IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2">
								<combo label="Individual Prescaler" define="GPT12E_T4CON_T4I_GATED_TIMER_LOW">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3">
								<combo label="Individual Prescaler" define="GPT12E_T4CON_T4I_GATED_TIMER_HIGH">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Reload Mode" value="4">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_RELOAD">
									<item label="None. Counter T4 is disabled" value="0"/>
									<item label="Rising edge on T4IN" value="1"/>
									<item label="Falling edge on T4IN" value="2"/>
									<item label="Rising or Falling edge on T4IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Capture Mode" value="5">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_CAPTURE">
									<item label="None. Counter T4 is disabled" value="0"/>
									<item label="Rising edge on T4IN" value="1"/>
									<item label="Falling edge on T4IN" value="2"/>
									<item label="Rising or Falling edge on T4IN" value="3"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, rotation detection" value="6">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_INC_ROT">
									<item label="None. Counter T4 stopped"/>
									<item label="Rising or Falling edge on T4IN"/>
									<item label="Rising or Falling edge on T4EUD"/>
									<item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, edge detection" value="7">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_INC_EDGE">
									<item label="None. Counter T4 stopped"/>
									<item label="Rising or Falling edge on T4IN"/>
									<item label="Rising or Falling edge on T4EUD"/>
									<item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
								</combo>
							</button>
						</radio>
						<math label="T4I" define="GPT12E_T4CON[2:0]" formula="GPT12E_T4CON[5:3]&lt;1?GPT12E_T4CON_T4I_TIMER:GPT12E_T4CON[5:3]&lt;2?GPT12E_T4CON_T4I_COUNTER:GPT12E_T4CON[5:3]&lt;3?GPT12E_T4CON_T4I_GATED_TIMER_LOW:GPT12E_T4CON[5:3]&lt;4?GPT12E_T4CON_T4I_GATED_TIMER_HIGH:GPT12E_T4CON[5:3]&lt;5?GPT12E_T4CON_T4I_RELOAD:GPT12E_T4CON[5:3]&lt;6?GPT12E_T4CON_T4I_CAPTURE:GPT12E_T4CON[5:3]&lt;7?GPT12E_T4CON_T4I_INC_ROT:GPT12E_T4CON_T4I_INC_EDGE"/>
					</branch>
					<button label="Remote Run Control by T3" define="GPT12E_T4CON[9]"/>
					<combo label="Clear Timer T2 Enable" define="GPT12E_T4CON[10]">
						<item label="No effect on Timer T2"/>
						<item label="A falling edge on T4EUD clears Timer T2"/>
					</combo>
					<combo label="Clear Timer T3 Enable" define="GPT12E_T4CON[11]">
						<item label="No effect on Timer T3"/>
						<item label="A falling edge on T4EUD clears Timer T3"/>
					</combo>
					<branch label="Direction Control">
						<radio define="GPT12E_T4CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T4CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T4EUD input">
								<combo label="T4EUD Input Pin Select" define="GPT12E_PISEL[9:8]" default="T4EUDA (P0.3)">
									<item label="T4EUDA (P0.3)" lockon="PORT_P0_DIR[3]=Input"/>
									<item label="T4EUDB (P1.0)" lockon="PORT_P1_DIR[0]=Input"/>
								</combo>
							</button>
						</radio>
					</branch>
					<branch label="Timer Value">
						<radio define="GPT12E_TEMP_T4_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T4_TIME=0">
								<edit label="T4 Value [ticks]" define="GPT12E_T4_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T4_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T4_TIME" default="1"/>
							</button>
						</radio>
						<math label="Timer Value" unit="ticks" define="GPT12E_T4[15:0]" formula="GPT12E_T4CON[7]>0?(GPT12E_T4_TICK[15:0]+GPT1_T4_CLK*GPT12E_T4_TIME):(0x10000-(GPT12E_T4_TICK[15:0]+GPT1_T4_CLK*GPT12E_T4_TIME))"/>
					</branch>
					<button label="Pin Select" define="GPT12E_TEMP_T4_PISEL">
						<combo label="T4IN Pin Select" define="GPT12E_PISEL[7:6]" default="T4INB (CCU6 - CC60)">
							<item label="T4INA (P0.0)" lockon="PORT_P0_DIR[0]=Input"/>
							<item label="T4INB (CCU6 - CC60)"/>
							<item label="T4INC (P0.1)" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="T4IND (T3INB/T4IND Input Selector from CCU6)"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T4_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[0]=1">			
						<button label="Enable Interrupt" define="SCU_GPT12IEN[2]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT1_T4_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="T3INB/T4IND Input Selector from CCU6">
					<combo label="Input Selector" define="SCU_GPT12PISEL[3:0]" header="scu_defines.h">
						<item label="CC60"/>
						<item label="CC61"/>
						<item label="CC62"/>
						<item label="T12 Zero Match"/>
						<item label="T12 Period Match"/>
						<item label="T12 Compare Match Ch0"/>
						<item label="T12 Compare Match Ch1"/>
						<item label="T12 Compare Match Ch2"/>
						<item label="T13 Period Match"/>
						<item label="T13 Zero Match"/>
						<item label="T13 Compare Match"/>
						<item label="any rising/falling edge on CC60/61/62"/>
					</combo>
				</branch>
			</branch>
			<branch label="GPT2">
				<branch label="Clock">
						<combo label="Block Prescaler" define="GPT12E_T6CON[12:11]" default="fGPT / 2">
						<item label="fGPT / 2" value="1"/>
						<item label="fGPT / 4" value="0"/>
						<item label="fGPT / 8" value="3"/>
						<item label="fGPT / 16" value="2"/>
					</combo>
					<math label="GPT2 Clock" unit="MHz" define="GPT2_BASE_CLK" formula="SCU_PLL_fPLL/(2*2^(GPT12E_T6CON[12:11].^1))"/>
				</branch>
				<branch label="Aux. Timer5">
					<math label="GPT2 Timer5 Clock" unit="MHz" define="GPT2_T5_CLK" formula="GPT12E_T5CON[5:3]&lt;1?(GPT2_BASE_CLK/2^(GPT12E_T5CON_T5I_TIMER)):(GPT12E_T5CON[5:3]&lt;2?GPT2_BASE_CLK:(GPT12E_T5CON[5:3]&lt;3?(GPT2_BASE_CLK/2^(GPT12E_T5CON_T5I_GATED_TIMER_LOW)):(GPT2_BASE_CLK/2^(GPT12E_T5CON_T5I_GATED_TIMER_HIGH))))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T5CON[5:3]">
							<button label="Timer Mode" value="0">
								<combo label="Individual Prescaler" define="GPT12E_T5CON_T5I_TIMER">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T5CON_T5I_COUNTER">
									<item label="None. Counter T5 is disabled" value="0"/>
									<item label="Rising edge on T5IN" value="1"/>
									<item label="Falling edge on T5IN" value="2"/>
									<item label="Rising or Falling edge on T5IN" value="3"/>
									<item label="Rising edge on T6OTL" value="5"/>
									<item label="Falling edge on T6OTL" value="6"/>
									<item label="Rising or Falling edge on T6OTL" value="7"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2">
								<combo label="Individual Prescaler" define="GPT12E_T5CON_T5I_GATED_TIMER_LOW">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3">
								<combo label="Individual Prescaler" define="GPT12E_T5CON_T5I_GATED_TIMER_HIGH">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
						</radio>
						<math label="T5I" define="GPT12E_T5CON[2:0]" formula="GPT12E_T5CON[5:3]&lt;1?GPT12E_T5CON_T5I_TIMER:GPT12E_T5CON[5:3]&lt;2?GPT12E_T5CON_T5I_COUNTER:GPT12E_T5CON[5:3]&lt;3?GPT12E_T5CON_T5I_GATED_TIMER_LOW:GPT12E_T5CON_T5I_GATED_TIMER_HIGH"/>
					</branch>
					<button label="Capture into CAPREL enabled" define="GPT12E_T5CON[15]">
						<combo label="CAPREL Capture Trigger Selection" define="GPT12E_T5CON[13:10]" default="0">
							<item label="Capture disabled" value="0"/>
							<item label="rising edge on CAPIN" value="4"/>
							<item label="falling edge on CAPIN" value="8"/>
							<item label="rising or falling edge on CAPIN" value="12"/>
							<item label="any edge on T3IN" value="5"/>
							<item label="any edge on T3EUD" value="9"/>
							<item label="any edge on T3IN or T3EUD" value="13"/>
						</combo>
						<button label="T5 cleared on capture event" define="GPT12E_T5CON[14]"/>
					</button>
					<button label="Remote Run Control by T6" define="GPT12E_T5CON[9]"/>
					<branch label="Direction Control">
						<radio define="GPT12E_T5CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T5CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T5EUD input">
								<combo label="T5EUD Input Pin Select" define="GPT12E_PISEL[11]" default="T5EUDB (P2.0)">
									<item label="T5EUDA (P1.4)" lockon="PORT_P1_DIR[4]=Input"/>
									<item label="T5EUDB (P2.0)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<branch label="Timer Value">
						<radio define="GPT12E_TEMP_T5_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T5_TIME=0">
								<edit label="T5 Value [ticks]" define="GPT12E_T5_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T5_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T5_TIME" default="1"/>
							</button>
						</radio>
						<math label="Timer Value" unit="ticks" define="GPT12E_T5[15:0]" formula="GPT12E_T5CON[7]>0?(GPT12E_T5_TICK[15:0]+GPT2_T5_CLK*GPT12E_T5_TIME):(0x10000-(GPT12E_T5_TICK[15:0]+GPT2_T5_CLK*GPT12E_T5_TIME))"/>
					</branch>
					<branch label="T5/CAPIN Pin Select">
						<combo label="T5IN Pin Select" define="GPT12E_PISEL[10]" default="T5INB (P2.0)">
							<item label="T5INA (P0.3)" lockon="PORT_P0_DIR[3]=Input"/>
							<item label="T5INB (P2.0)"/>
						</combo>
						<combo label="CAPIN Input Pin Select" define="GPT12E_PISEL[15:14]" default="CAPINC (read of T3)">
							<item label="CAPINA (P0.1)" value="0" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="CAPINB (P0.3)" value="1"  lockon="PORT_P0_DIR[3]=Input"/>
							<item label="CAPINC (read of T3)" value="2" />
							<item label="CAPIND (read of T2, T3, T4)" value="3" />
							<item label="BEMF Comparator" value="1"/>
						</combo>
					</branch>
					<button label="Interrupt" define="GPT12E_T5_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[1]=1">			
						<button label="Enable Interrupt" define="SCU_GPT12IEN[3]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT2_T5_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="CAPREL">
					<radio define="GPT12E_TEMP_CAPREL_SEL">
						<button label="...as clock ticks" lockon="GPT12E_CAPREL_TIME=0">
							<edit label="CAPREL Value [ticks]" define="GPT12E_CAPREL_TICK[15:0]" default="1"/>
						</button>
						<button label="...as time [us]" lockon="GPT12E_CAPREL_TICK[15:0]=0">
							<edit label="Time [us]" define="GPT12E_CAPREL_TIME" default="1"/>
						</button>
					</radio>
					<math label="CAPREL Timer Value" unit="ticks" define="GPT12E_CAPREL[15:0]" formula="GPT12E_T6CON[7]>0?(GPT12E_CAPREL_TICK[15:0]+GPT2_T6_CLK*GPT12E_CAPREL_TIME):(0x10000-(GPT12E_CAPREL_TICK[15:0]+GPT2_T6_CLK*GPT12E_CAPREL_TIME))"/>
					<button label="Capture Interrupt" define="GPT12E_CAP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[1]=1">			
						<button label="Enable Interrupt" define="SCU_GPT12IEN[5]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT2_CAPREL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Core Timer6">
					<math label="GPT2 Timer6 Clock" unit="MHz" define="GPT2_T6_CLK" formula="GPT12E_T6CON[5:3]&lt;1?(GPT2_BASE_CLK/2^(GPT12E_T6CON_T6I_TIMER)):(GPT12E_T6CON[5:3]&lt;2?GPT2_BASE_CLK:(GPT12E_T6CON[5:3]&lt;3?(GPT2_BASE_CLK/2^(GPT12E_T6CON_T6I_GATED_TIMER_LOW)):(GPT2_BASE_CLK/2^(GPT12E_T6CON_T6I_GATED_TIMER_HIGH))))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T6CON[5:3]">
							<button label="Timer Mode" value="0">
								<combo label="Individual Prescaler" define="GPT12E_T6CON_T6I_TIMER">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T6CON_T6I_COUNTER">
									<item label="None. Counter T6 is disabled"/>
									<item label="Rising edge on T6IN"/>
									<item label="Falling edge on T6IN"/>
									<item label="Rising or Falling edge on T6IN"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2">
								<combo label="Individual Prescaler" define="GPT12E_T6CON_T6I_GATED_TIMER_LOW">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3">
								<combo label="Individual Prescaler" define="GPT12E_T6CON_T6I_GATED_TIMER_HIGH">
									<item label="Block Prescaler / 1"/>
									<item label="Block Prescaler / 2"/>
									<item label="Block Prescaler / 4"/>
									<item label="Block Prescaler / 8"/>
									<item label="Block Prescaler / 16"/>
									<item label="Block Prescaler / 32"/>
									<item label="Block Prescaler / 64"/>
									<item label="Block Prescaler / 128"/>
								</combo>
							</button>
						</radio>
						<math label="T6I" define="GPT12E_T6CON[2:0]" formula="GPT12E_T6CON[5:3]&lt;1?GPT12E_T6CON_T6I_TIMER:GPT12E_T6CON[5:3]&lt;2?GPT12E_T6CON_T6I_COUNTER:GPT12E_T6CON[5:3]&lt;3?GPT12E_T6CON_T6I_GATED_TIMER_LOW:GPT12E_T6CON_T6I_GATED_TIMER_HIGH"/>
					</branch>
					<button label="T6 cleared on capture event" define="GPT12E_T6CON[14]"/>
					<button label="T6 reload by CAPREL" define="GPT12E_T6CON[15]"/>
					<branch label="Direction Control">
						<radio define="GPT12E_T6CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T6CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T6EUD input">
								<combo label="T6EUD Input Pin Select" define="GPT12E_PISEL[13]" default="T6EUDA (P1.1)">
									<item label="T6EUDA (P1.1)" lockon="PORT_P1_DIR[1]=Input"/>
									<item label="T6EUDB (P1.3)" lockon="PORT_P1_DIR[3]=Input"/>
								</combo>
							</button>
						</radio>
					</branch>
					<button label="Output Toggle Latch (T6OTL) preset" define="GPT12E_T6CON[10]"/>
					<button label="Overflow/Underflow Output Enable - T6OUT" define="GPT12E_T6CON[9]">
						<combo label="T6OUT Pin Select" define="GPT12E_TEMP_T6OUT" default="T6OUT (P0.3)">
							<item label="T6OUT (P0.3)" lockon="PORT_P0_DIR[3]=Output;PORT_P0_3_ALT[1:0]=T6OUT"/>
							<item label="T6OUT (P0.1)" lockon="PORT_P0_DIR[1]=Output;PORT_P0_1_ALT[1:0]=T6OUT"/>
						</combo>
					</button>
					<branch label="Timer Value">
						<radio define="GPT12E_TEMP_T6_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T6_TIME=0">
								<edit label="T6 Value [ticks]" define="GPT12E_T6_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T6_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T6_TIME" default="1"/>
							</button>
						</radio>
						<math label="Timer Value" unit="ticks" define="GPT12E_T6[15:0]" formula="GPT12E_T6CON[7]>0?(GPT12E_T6_TICK[15:0]+GPT2_T6_CLK*GPT12E_T6_TIME):(0x10000-(GPT12E_T6_TICK[15:0]+GPT2_T6_CLK*GPT12E_T6_TIME))"/>
					</branch>
					<button label="Pin Select" define="GPT12E_TEMP_T6_PISEL">
						<combo label="T6IN Pin Select" define="GPT12E_PISEL[12]" default="T6INA (P0.2)">
							<item label="T6INA (P0.2)"/>
							<item label="T6INB (P1.3)"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T6_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[1]=1">			
						<button label="Enable Interrupt" define="SCU_GPT12IEN[4]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT2_T6_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</branch>
		</header>
	</module>
	<module label="Timer2x" desc="Timer2x">
		<header define="timer2x_defines.h">
			<button label="Configure Timer2" define="TIMER2_Configuration_En">
				<math label="Timer2 Clock" unit="MHz" define="TIMER2_CLK" formula="TIMER2_T2MOD[4]?SCU_PLL_fPLL/(2^(TIMER2_T2MOD[3:1])):SCU_PLL_fPLL/12"/>
				<math label="Max. Period" unit="us" define="TIMER2_MAX_PERIOD" formula="65535/TIMER2_CLK"/>
				<branch label="Clock Setting">				
					<radio label="Timer / Counter Select" define="TIMER2_T2CON[1]">
						<button label="Timer">
							<button label="Prescaler Enable" define="TIMER2_T2MOD[4]">
								<combo label="Prescaler" define="TIMER2_T2MOD[3:1]">
									<item label="divide by 1" />
									<item label="divide by 2" />
									<item label="divide by 4" />
									<item label="divide by 8" />
									<item label="divide by 16" />
									<item label="divide by 32" />
									<item label="divide by 64" />
									<item label="divide by 128" />
								</combo>
							</button>
						</button>
						<button label="Counter" />
					</radio>
				</branch>
				<branch label="Mode Select">
					<radio define="TIMER2_T2CON[0]">
						<button label="Auto-Reload Mode">
							<combo label="Up/Down Counter Enable" define="TIMER2_T2MOD[0]">
								<item label="Disabled" />
								<item label="Enabled" />
							</combo>
						</button>
						<button label="Capture Mode" />
					</radio>
				</branch>
				<button label="External Capture/Reload Event Enable" define="TIMER2_T2CON[3]">
					<combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER2_T2MOD[5]">
						<item label="Falling edge at pin T2EX" />
						<item label="Rising edge at pin T2EX" />
					</combo>
				</button>
				<button label="External Start Enable" define="TIMER2_T2MOD[6]">
					<combo label="Edge Select for External Start" define="TIMER2_T2MOD[7]">
						<item label="Falling edge at pin T2EX" />
						<item label="Rising edge at pin T2EX" />
					</combo>
				</button>
				<branch label="Timer Register">
					<radio define="TIMER2_TEMP_TIMER2_TIME_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER2_TEMP_TIME_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER2_TEMP_TIME_TIME" default="1"/>
						</button>
					</radio>
					<math label="Timer Value" role="hex" unit="ticks" define="TIMER2_T2" formula="TIMER2_TEMP_TIMER2_TIME_SEL?floor(0x10000-TIMER2_TEMP_TIME_TIME*TIMER2_CLK):(0x10000-TIMER2_TEMP_TIME_TICK[15:0])"/>
					<math label="" role="hex" define="TIMER2_T2L" formula="TIMER2_T2.*0xFF"/>
					<math label="" role="hex" define="TIMER2_T2H" formula="(TIMER2_T2/0x100).*0xFF"/>
				</branch>
				<branch label="Reload / Capture Register">
					<radio define="TIMER2_TEMP_TIMER2_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER2_TEMP_TIMER2_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER2_TEMP_TIMER2_TIME" default="1"/>
						</button>
					</radio>
					<math label="Reload Value" role="hex" unit="ticks" define="TIMER2_RC2" formula="TIMER2_TEMP_TIMER2_SEL?floor(0x10000-TIMER2_TEMP_TIMER2_TIME*TIMER2_CLK):(0x10000-TIMER2_TEMP_TIMER2_TICK[15:0])"/>
					<math label="" role="hex" define="TIMER2_RC2L" formula="TIMER2_RC2.*0xFF"/>
					<math label="" role="hex" define="TIMER2_RC2H" formula="(TIMER2_RC2/0x100).*0xFF"/>
				</branch>
				<branch label="Interrupt">
					<button label="External" define="TIMER2_EXF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="TIMER2_T2CON1[0]"/>
						<edit label="Call Back" define="TIMER2_EXF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overflow / Underflow" define="TIMER2_TF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="TIMER2_T2CON1[1]"/>
						<edit label="Call Back" define="TIMER2_TF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<combo label="External Counter Input (T2IN)" define="SCU_MODPISEL2[1:0]" header="scu_defines.h" default="P2.5 (T2_1)">
						<item label="P0.0 (T2_0)" lockon="PORT_P0_DIR[0]=Input"/>
						<item label="P2.5 (T2_1)"/>
					</combo>
					<branch label="External Control Input (T2EX)">
						<radio define="SCU_MODPISEL1[6]" header="scu_defines.h">
							<button label="Pin Select">
								<combo label="External Control Input (T2EX)" define="SCU_MODPISEL2[5:4]" header="scu_defines.h" default="internal LIN Trx">
									<item label="internal LIN Trx" value="0"/>
									<item label="P1.2 (T2EX_1)" value="1" lockon="PORT_P1_DIR[2]=Input"/>
								</combo>
							</button>
							<button label="CCU6-CC60 (Ch0)"/>
						</radio>
					</branch>
					<combo label="External Flag Output (EXF2)" define="TIMER2_EXF2_PINSEL" default="none">
						<item label="none"/>
						<item label="P0.2 (EXF2_0)" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=EXF2_0"/>
					</combo>
				</branch>
			</button>
			<button label="Configure Timer21" define="TIMER21_Configuration_En">
				<math label="Timer21 Clock" unit="MHz" define="TIMER21_CLK" formula="TIMER21_T2MOD[4]?SCU_PLL_fPLL/(2^(TIMER21_T2MOD[3:1])):SCU_PLL_fPLL/12"/>
				<math label="Max. Period" unit="us" define="TIMER21_MAX_PERIOD" formula="65535/TIMER21_CLK"/>
				<branch label="Clock Setting">				
					<radio label="Timer / Counter Select" define="TIMER21_T2CON[1]">
						<button label="Timer">
							<button label="Prescaler Enable" define="TIMER21_T2MOD[4]">
								<combo label="Prescaler" define="TIMER21_T2MOD[3:1]">
									<item label="divide by 1" />
									<item label="divide by 2" />
									<item label="divide by 4" />
									<item label="divide by 8" />
									<item label="divide by 16" />
									<item label="divide by 32" />
									<item label="divide by 64" />
									<item label="divide by 128" />
								</combo>
							</button>
						</button>
						<button label="Counter" />
					</radio>
				</branch>
				<branch label="Mode Select">
					<radio define="TIMER21_T2CON[0]">
						<button label="Auto-Reload Mode">
							<combo label="Up/Down Counter Enable" define="TIMER21_T2MOD[0]">
								<item label="Disabled" />
								<item label="Enabled" />
							</combo>
						</button>
						<button label="Capture Mode" />
					</radio>
				</branch>
				<button label="External Capture/Reload Event Enable" define="TIMER21_T2CON[3]">
					<combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER21_T2MOD[5]">
						<item label="Falling edge at pin T21EX" />
						<item label="Rising edge at pin T21EX" />
					</combo>
				</button>
				<button label="External Start Enable" define="TIMER21_T2MOD[6]">
					<combo label="Edge Select for External Start" define="TIMER21_T2MOD[7]">
						<item label="Falling edge at pin T21EX" />
						<item label="Rising edge at pin T21EX" />
					</combo>
				</button>
				<branch label="Timer Register">
					<radio define="TIMER21_TEMP_TIMER2_TIME_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER21_TEMP_TIME_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER21_TEMP_TIME_TIME" default="1"/>
						</button>
					</radio>
					<math label="Timer Value" role="hex" unit="ticks" define="TIMER21_T2" formula="TIMER21_TEMP_TIMER2_TIME_SEL?floor(0x10000-TIMER21_TEMP_TIME_TIME*TIMER21_CLK):(0x10000-TIMER21_TEMP_TIME_TICK[15:0])"/>
					<math label="" role="hex" define="TIMER21_T2L" formula="TIMER21_T2.*0xFF"/>
					<math label="" role="hex" define="TIMER21_T2H" formula="(TIMER21_T2/0x100).*0xFF"/>
				</branch>
				<branch label="Reload / Capture Register">
					<radio define="TIMER21_TEMP_TIMER2_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER21_TEMP_TIMER2_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER21_TEMP_TIMER2_TIME" default="1"/>
						</button>
					</radio>
					<math label="Reload Value" role="hex" unit="ticks" define="TIMER21_RC2" formula="TIMER21_TEMP_TIMER2_SEL?floor(0x10000-TIMER21_TEMP_TIMER2_TIME*TIMER21_CLK):(0x10000-TIMER21_TEMP_TIMER2_TICK[15:0])"/>
					<math label="" role="hex" define="TIMER21_RC2L" formula="TIMER21_RC2.*0xFF"/>
					<math label="" role="hex" define="TIMER21_RC2H" formula="(TIMER21_RC2/0x100).*0xFF"/>
				</branch>
				<branch label="Interrupt">
					<button label="External" define="TIMER21_EXF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[11]=1">			
						<button label="Enable Interrupt" define="TIMER21_T2CON1[0]"/>
						<edit label="Call Back" define="TIMER21_EXF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overflow / Underflow" define="TIMER21_TF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[11]=1">			
						<button label="Enable Interrupt" define="TIMER21_T2CON1[1]"/>
						<edit label="Call Back" define="TIMER21_TF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<button label="External Counter Input (T21)" define="TIMER21_T21IN_EN">
						<combo label="External Counter Input (T21)" define="SCU_MODPISEL2[3:2]" default="P0.1 (T21_0)">
							<item label="P0.1 (T21_0)" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="P1.1 (T21_1)" lockon="PORT_P1_DIR[1]=Input"/>
							<item label="P0.4 (T21_2)" lockon="PORT_P0_DIR[4]=Input"/>
						</combo>
					</button>
					<branch label="External Control Input (T21EX)">
						<radio define="SCU_MODPISEL1[7]" header="scu_defines.h">
							<button label="Pin Select">
								<combo label="External Control Input (T21EX)" define="SCU_MODPISEL2[7:6]" header="scu_defines.h" default="P2.3 (T21EX_2)">
									<item label="P0.2 (T21EX_0)" lockon="PORT_P0_DIR[2]=Input"/>
									<item label="P1.4 (T21EX_1)" lockon="PORT_P1_DIR[4]=Input"/>
									<item label="P2.3 (T21EX_2)"/>
									<item label="P1.2 (T21EX_3)" lockon="PORT_P1_DIR[2]=Input"/>
								</combo>
							</button>
							<button label="CCU6-COUT60 (Ch0)"/>
						</radio>
					</branch>
					<combo label="External Flag Output (EXF21)" define="TIMER21_EXF21_PINSEL" default="none">
						<item label="none"/>
						<item label="P0.0 (EXF21_0)" lockon="PORT_P0_DIR[0]=Output;PORT_P0_0_ALT[1:0]=EXF21_0"/>
						<item label="P1.3 (EXF21_1)" lockon="PORT_P1_DIR[3]=Output;PORT_P1_3_ALT[1:0]=EXF21_1"/>
						<item label="P0.3 (EXF21_2)" lockon="PORT_P0_DIR[3]=Output;PORT_P0_3_ALT[1:0]=EXF21_2"/>
						<item label="P1.0 (EXF21_3)" lockon="PORT_P1_DIR[0]=Output;PORT_P1_0_ALT[1:0]=EXF21_3"/>
					</combo>
				</branch>
			</button>
		</header>
	</module>
	<module label="Timer3" desc="Timer3">
		<header define="timer3_defines.h">
			<button label="Configure Timer3" define="TIMER3_CTRL[0]">
				<math label="Timer3 Clock" unit="MHz" define="TIMER3_CLK" formula="(SCU_APCLK_CTRL1[2]&lt;1?18:SCU_APCLK_MI_CLK)/(2^SCU_APCLK_CTRL2[3:2])"/>
				<math label="Max. Period" unit="us" define="TIMER3_MAX_PERIOD" formula="65535/TIMER3_CLK"/>
				<branch label="Clock Setting">
					<combo label="Clock Selection" define="SCU_APCLK_CTRL1[2]" header="scu_defines.h" default="MI_CLK">
						<item label="LP_CLK" />
						<item label="MI_CLK" />
					</combo>
					<combo label="Clock Divider" define="SCU_APCLK_CTRL2[3:2]" header="scu_defines.h">
						<item label="divide by 1"/>
						<item label="divide by 2"/>
						<item label="divide by 4"/>
						<item label="divide by 8"/>
					</combo>
				</branch>
				<branch label="Mode Select">
					<radio define="TIMER3_MODE_CONF[1:0]">
						<button label="Mode 0: 13-bit timer" lockon="TIMER3_MODE_CONF[7]=0;TIMER3_MODE_CONF[6]=0">
							<branch label="Timer Value">
								<radio define="TIMER3_MODE0_VALUE_SEL">
									<button label="...as timer ticks">
										<edit label="Value [ticks]" define="TIMER3_MODE0_VALUE_TICK" default="1"/>
									</button>
									<button label="...as time [us]">
										<edit label="Time [us]" define="TIMER3_MODE0_VALUE_TIME" default="1"/>
									</button>
								</radio>
								<math label="Timer3 Value" unit="ticks" define="TIMER3_MODE0_VALUE[12:0]" formula="(TIMER3_MODE0_VALUE_SEL>0?(TIMER3_CLK*TIMER3_MODE0_VALUE_TIME):TIMER3_MODE0_VALUE_TICK).^0x1FFF+1"/>
							</branch>
						</button>
						<button label="Mode 1: 16-bit timer" lockon="TIMER3_MODE_CONF[7]=0">
							<button label="Mode 1b: 16-bit timer triggered by an event" define="TIMER3_MODE_CONF[6]">
								<combo label="Trigger Input Event Selection" define="TIMER3_TRIGG_CTRL[2:0]">
									<item label="CCU6-CC60" />
									<item label="CCU6-CC61" />
									<item label="CCU6-CC62" />
									<item label="CCU6-T12 Zero Match" />
									<item label="CCU6-T12 Period Match" />
									<item label="CCU6-COUT60" />
									<item label="CCU6-COUT61" />
									<item label="CCU6-COUT62" />
								</combo>
								<button label="Retrigger by CCU6 interrupt output" define="TIMER3_TRIGG_CTRL[6]" />
								<combo label="Reset Selection" define="TIMER3_TRIGG_CTRL[5:4]">
									<item label="No reset on PWM edge" />
									<item label="Reset on rising edge" />
									<item label="Reset on falling edge" />
									<item label="Reset on both edges" />
								</combo>
								<branch label="Compare Value">
									<radio define="TIMER3_MODE1_CMP_SEL">
										<button label="...as timer ticks" lockon="TIMER3_MODE1_CMP_TIME=0">
											<edit label="Compare Value [ticks]" define="TIMER3_MODE1_CMP_TICK" default="0"/>
										</button>
										<button label="...as time [us]" lockon="TIMER3_MODE1_CMP_TICK=0">
											<edit label="Time [us]" define="TIMER3_MODE1_CMP_TIME" default="0"/>
										</button>
									</radio>
									<math label="Compare Value" unit="ticks" define="TIMER3_MODE1_CMP[15:0]" formula="TIMER3_MODE1_VALUE[15:0]+TIMER3_MODE1_CMP_TICK+(TIMER3_CLK*TIMER3_MODE1_CMP_TIME)"/>
								</branch>
							</button>
							<branch label="Timer Value">
								<radio define="TIMER3_MODE1_VALUE_SEL">
									<button label="...as timer ticks">
										<edit label="Value [ticks]" define="TIMER3_MODE1_VALUE_TICK" default="1"/>
									</button>
									<button label="...as time [us]">
										<edit label="Time [us]" define="TIMER3_MODE1_VALUE_TIME" default="1"/>
									</button>
								</radio>
								<math label="Timer3 Value" unit="ticks" define="TIMER3_MODE1_VALUE[15:0]" formula="TIMER3_MODE_CONF[6]>0?(TIMER3_MODE1_VALUE_SEL>0?(TIMER3_CLK*TIMER3_MODE1_VALUE_TIME):TIMER3_MODE1_VALUE_TICK):(0x10000-(TIMER3_MODE1_VALUE_SEL>0?(TIMER3_CLK*TIMER3_MODE1_VALUE_TIME):TIMER3_MODE1_VALUE_TICK))"/>
							</branch>
						</button>
						<button label="Mode 2: 8-bit timer auto reload"  lockon="TIMER3_MODE_CONF[7]=0;TIMER3_MODE_CONF[6]=0">
							<branch label="Timer Value 8-bit">
								<radio define="TIMER3_MODE2_VALUE_SEL">
									<button label="...as timer ticks" lockon="TIMER3_MODE2_VALUE_TIME=0">
										<edit label="Value [ticks]" define="TIMER3_MODE2_VALUE_TICK[7:0]" default="1"/>
									</button>
									<button label="...as time [us]" lockon="TIMER3_MODE2_VALUE_TICK[7:0]=0">
										<edit label="Time [us]" define="TIMER3_MODE2_VALUE_TIME" default="1"/>
									</button>
								</radio>
								<math label="Timer3 Value" unit="ticks" define="TIMER3_MODE2_VALUE[7:0]" formula="(TIMER3_MODE2_VALUE_TICK[7:0]+(TIMER3_CLK*TIMER3_MODE2_VALUE_TIME)).^0xFF+1"/>
							</branch>
							<branch label="Compare Value">
								<radio define="TIMER3_MODE2_CMP_SEL">
									<button label="...as timer ticks" lockon="TIMER3_MODE2_CMP_TIME=0">
										<edit label="Compare Value [ticks]" define="TIMER3_MODE2_CMP_TICK[7:0]" default="0"/>
									</button>
									<button label="...as time [us]" lockon="TIMER3_MODE2_CMP_TICK[7:0]=0">
										<edit label="Time [us]" define="TIMER3_MODE2_CMP_TIME" default="0"/>
									</button>
								</radio>
								<math label="Compare Value" unit="ticks" define="TIMER3_MODE2_CMP[7:0]" formula="TIMER3_MODE2_VALUE[7:0]+TIMER3_MODE2_CMP_TICK[7:0]+(TIMER3_CLK*TIMER3_MODE2_CMP_TIME)"/>
							</branch>
							<branch label="Reload Value 8-bit">
								<radio define="TIMER3_MODE2_RL_VALUE_SEL">
									<button label="...as timer ticks" lockon="TIMER3_MODE2_RL_VALUE_TIME=0">
										<edit label="Value [ticks]" define="TIMER3_MODE2_RL_VALUE_TICK[7:0]" default="1"/>
									</button>
									<button label="...as time [us]" lockon="TIMER3_MODE2_RL_VALUE_TICK[7:0]=0">
										<edit label="Time [us]" define="TIMER3_MODE2_RL_VALUE_TIME" default="1"/>
									</button>
								</radio>
								<math label="Timer3 Value" unit="ticks" define="TIMER3_MODE2_RL_VALUE[7:0]" formula="(TIMER3_MODE2_RL_VALUE_TICK[7:0]+(TIMER3_CLK*TIMER3_MODE2_RL_VALUE_TIME)).^0xFF+1"/>
							</branch>
						</button>
						<button label="Mode 3: 2x 8-bit timer" lockon="TIMER3_MODE_CONF[6]=0">
							<button label="Mode 3b: 8-bit timers used for clock measurement" define="TIMER3_MODE_CONF[7]">
								<edit label="Number of Clock Edges to be count" define="TIMER3_MODE3_CMP[7:0]" default="1"/>
							</button>
						</button>
					</radio>
				</branch>
				<branch label="Read Mode">
					<combo label="Read Mode Select" define="TIMER3_CTRL[2]">
						<item label="Read request can be triggered by software" />
						<item label="Read request can be triggered by hardware" />
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="High-byte timer overflow" define="TIMER3_HB_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="TIMER3_CTRL[9]"/>
						<edit label="Call Back" define="TIMER3_HBOF_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Low-byte timer overflow" define="TIMER3_LB_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[2]=1">			
						<button label="Enable Interrupt" define="TIMER3_CTRL[8]"/>
						<edit label="Call Back" define="TIMER3_LBOF_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Register View">
					<math label="Timer3 Value" unit="ticks" define="TIMER3_T3[15:0]" formula="TIMER3_MODE_CONF[1:0]&lt;1?TIMER3_MODE0_VALUE[12:0]:TIMER3_MODE_CONF[1:0]&lt;2?TIMER3_MODE1_VALUE[15:0]:(TIMER3_MODE2_VALUE[7:0]+(TIMER3_MODE2_RL_VALUE[7:0]*256))"/>
					<math label="Timer3 Cmp" unit="ticks" define="TIMER3_CMP[15:0]" formula="TIMER3_MODE_CONF[1:0]&lt;1?0:TIMER3_MODE_CONF[1:0]&lt;2?TIMER3_MODE1_CMP[15:0]:TIMER3_MODE_CONF[1:0]&lt;3?TIMER3_MODE2_CMP[7:0]:(TIMER3_MODE3_CMP[7:0]*256)"/>
				</branch>
			</button>
		</header>
	</module>
	<module label="UART" desc="Asynchronous Serial Communication">
		<header define="uart_defines.h">
			<button label="Configure UART1" define="UART1_Configuration_En">
				<math label="UART1 Clock" unit="MHz" define="UART1_CLK" formula="SCU_PLL_fPLL/(2^(SCU_BCON1[3:1]))"/>
				<branch label="Clock">
					<combo label="Prescaler" define="SCU_BCON1[3:1]" header="scu_defines.h" default="PCLK / 1">
						<item label="PCLK / 1"/>
						<item label="PCLK / 2"/>
						<item label="PCLK / 4"/>
						<item label="PCLK / 8"/>
						<item label="PCLK / 16"/>
						<item label="PCLK / 32"/>
					</combo>
				</branch>
				<branch label="BaudRate">
					<button label="Baudrate Generator running" define="SCU_BCON1[0]" default="1" header="scu_defines.h"/>
					<radio define="UART1_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="UART1_AUTO_BAUDRATE" default="19200">
								<item label="9600" lockon="UART1_MAN_BAUDRATE=9600"/>
								<item label="19200" lockon="UART1_MAN_BAUDRATE=19200"/>
								<item label="38400" lockon="UART1_MAN_BAUDRATE=38400"/>
								<item label="57600" lockon="UART1_MAN_BAUDRATE=57600"/>
								<item label="115200" lockon="UART1_MAN_BAUDRATE=115200"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="UART1_AUTO_BAUDRATE=1">
							<edit label="Baudrate [baud]" define="UART1_MAN_BAUDRATE" default="19200"/>
						</button>
					</radio>
					<math label="BaudRate Value" define="UART1_BRVAL[11:0]" formula="trunc((UART1_CLK*1000000)/(16*UART1_MAN_BAUDRATE))"/>
					<math label="Fractional Divider" define="UART1_FD[4:0]" formula="trunc((((UART1_CLK*1000000)/(16*UART1_MAN_BAUDRATE))-UART1_BRVAL[11:0])*32)"/>
					<math label="Effective Baudrate" define="UART1_BAUDRATE" formula="(UART1_CLK*1000000)/(16*(UART1_BRVAL[11:0]+(UART1_FD[4:0]/32)))"/>
				</branch>
				<branch label="Mode">
					<combo label="Mode Select" define="UART1_SCON[7:6]" default="Mode 1: 8-bit UART, variable baudrate">
						<item label="Mode 0: 8-bit shift register, fix baudrate fPCLK/2"/>
						<item label="Mode 1: 8-bit UART, variable baudrate"/>
						<item label="Mode 2: 9-bit UART, fixed baud rate (fPCLK/64 or fPCLK/32)"/>
						<item label="Mode 3: 9-bit UART, variable baud rate"/>
					</combo>
					<button label="don't set Receive Interrupt if no StopBit was received (SM2)" define="UART1_SCON[5]" default="0"/>
					<button label="Receiver enabled" define="UART1_SCON[4]" default="0"/>
					<button label="STDIN/STDOUT enabled" define="UART1_STD_EN" default="0"/>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="UART1_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN1[6]" header="int_defines.h"/>
						<edit label="Call Back" define="UART1_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="UART1_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN1[7]" header="int_defines.h"/>
						<edit label="Call Back" define="UART1_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<button label="TxD disconnected from integrated LIN-Trx" define="SCU_MODPISEL[7]" header="scu_defines.h" default="0"/>
					<button label="TXD1 (P0.1) UART sending" define="UART1_TXD_PINSEL" lockon="PORT_P0_DIR[1]=Output;PORT_P0_1_ALT[1:0]=TxD1"/>
					<button label="RxD disconnected from integrated LIN-Trx" define="SCU_MODPISEL[6]" header="scu_defines.h" default="0"/>
					<button label="RXD1 (P1.4) UART receiving" define="UART1_RXD_PINSEL" lockon="PORT_P1_DIR[4]=Input;PORT_P1_4_ALT[1:0]=RxD1"/>
				</branch>
			</button>
			<button label="Configure UART2" define="UART2_Configuration_En">
				<math label="UART2 Clock" unit="MHz" define="UART2_CLK" formula="SCU_PLL_fPLL/(2^(SCU_BCON2[3:1]))"/>
				<branch label="Clock">
					<combo label="Prescaler" define="SCU_BCON2[3:1]" header="scu_defines.h" default="PCLK / 1">
						<item label="PCLK / 1"/>
						<item label="PCLK / 2"/>
						<item label="PCLK / 4"/>
						<item label="PCLK / 8"/>
						<item label="PCLK / 16"/>
						<item label="PCLK / 32"/>
					</combo>
				</branch>
				<branch label="BaudRate">
					<button label="Baudrate Generator running" define="SCU_BCON2[0]" default="1" header="scu_defines.h"/>
					<radio define="UART2_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="UART2_AUTO_BAUDRATE" default="19200">
								<item label="9600" lockon="UART2_MAN_BAUDRATE=9600"/>
								<item label="19200" lockon="UART2_MAN_BAUDRATE=19200"/>
								<item label="38400" lockon="UART2_MAN_BAUDRATE=38400"/>
								<item label="57600" lockon="UART2_MAN_BAUDRATE=57600"/>
								<item label="115200" lockon="UART2_MAN_BAUDRATE=115200"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="UART2_AUTO_BAUDRATE=1">
							<edit label="Baudrate [baud]" define="UART2_MAN_BAUDRATE" default="19200"/>
						</button>
					</radio>
					<math label="BaudRate Value" define="UART2_BRVAL[11:0]" formula="trunc((UART2_CLK*1000000)/(16*UART2_MAN_BAUDRATE))"/>
					<math label="Fractional Divider" define="UART2_FD[4:0]" formula="trunc((((UART2_CLK*1000000)/(16*UART2_MAN_BAUDRATE))-UART2_BRVAL[11:0])*32)"/>
					<math label="Effective Baudrate" define="UART2_BAUDRATE" formula="(UART2_CLK*1000000)/(16*(UART2_BRVAL[11:0]+(UART2_FD[4:0]/32)))"/>
				</branch>
				<branch label="Mode">
					<combo label="Mode Select" define="UART2_SCON[7:6]" default="Mode 1: 8-bit UART, variable baudrate">
						<item label="Mode 0: 8-bit shift register, fix baudrate fPCLK/2"/>
						<item label="Mode 1: 8-bit UART, variable baudrate"/>
						<item label="Mode 2: 9-bit UART, fixed baud rate (fPCLK/64 or fPCLK/32)"/>
						<item label="Mode 3: 9-bit UART, variable baud rate"/>
					</combo>
					<button label="don't set Receive Interrupt if no StopBit was received (SM2)" define="UART2_SCON[5]" default="0"/>
					<button label="Receiver enabled" define="UART2_SCON[4]" default="0"/>
					<button label="STDIN/STDOUT enabled" define="UART2_STD_EN" default="0"/>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="UART2_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[11]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN2[6]" header="int_defines.h"/>
						<edit label="Call Back" define="UART2_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="UART2_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[11]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN2[7]" header="int_defines.h"/>
						<edit label="Call Back" define="UART2_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<button label="Pin Select" define="UART2_PINSEL_EN">
					<combo label="TxD/RxD Pin Select" define="UART2_PINSEL" default="TxD2 (P1.1), RxD2 (P1.2)">
						<item label="TxD2 (P1.1), RxD2 (P1.2)" lockon="PORT_P1_DIR[1]=Output;PORT_P1_1_ALT[1:0]=TXD2_0;PORT_P1_DIR[2]=Input"/>
						<item label="TxD2 (P1.3), RxD2 (P2.5)" lockon="PORT_P1_DIR[3]=Output;PORT_P1_3_ALT[1:0]=TXD2_1;PORT_P2_DIR[5]=Input"/>
					</combo>
					<math label="" define="SCU_MODPISEL3[6]" header="scu_defines.h" formula="UART2_PINSEL"/>
				</button>
			</button>
		</header>
	</module>
	<module label="SSC" desc="High-Speed Synchronous Serial Interface">
		<header define="ssc_defines.h">
			<button label="Configure SSC1" define="SSC1_CON[15]">
				<math label="SSC1 Clock" unit="MHz" define="SSC1_TEMP_CLK" formula="SCU_PLL_fPLL"/>
				<math label="Max. Baud Rate" unit="kBaud" formula="1000*SCU_PLL_fPLL/2" />
				<branch label="Mode Select">
					<combo label="Master Select" define="SSC1_CON[14]">
						<item label="Slave Mode" lockon="SSC1_TEMP_BRG=0;SSC1_TEMP_MS=0" />
						<item label="Master Mode" lockon="SSC1_TEMP_BRG=1;SSC1_TEMP_MS=1" />
					</combo>
					<combo label="Data Width Selection" define="SSC1_CON[3:0]" default="2 bits">
						<item label="2 bits" value="1" />
						<item label="3 bits" value="2" />
						<item label="4 bits" value="3" />
						<item label="5 bits" value="4" />
						<item label="6 bits" value="5" />
						<item label="7 bits" value="6" />
						<item label="8 bits" value="7" />
						<item label="9 bits" value="8" />
						<item label="10 bits" value="9" />
						<item label="11 bits" value="10" />
						<item label="12 bits" value="11" />
						<item label="13 bits" value="12" />
						<item label="14 bits" value="13" />
						<item label="15 bits" value="14" />
						<item label="16 bits" value="15" />
					</combo>
					<combo label="Heading Control" define="SSC1_CON[4]">
						<item label="Transmit/Receive LSB First" />
						<item label="Transmit/Receive MSB First" />
					</combo>
					<combo label="Clock Phase Control" define="SSC1_CON[5]">
						<item label="Shift transmit data on the leading clock edge, latch on trailing edge" />
						<item label="Latch receive data on leading clock edge, shift on trailing edge" />
					</combo>
					<combo label="Clock Polarity Control" define="SSC1_CON[6]">
						<item label="Idle clock line is low, leading clock edge is low-to-high transition" />
						<item label="Idle clock line is high, leading clock edge is high-to-low transition" />
					</combo>
					<combo label="Loop Back Control" define="SSC1_CON[7]">
						<item label="Normal output" />
						<item label="Receive input is connected with transmit output (half-duplex mode)" />
					</combo>
				</branch>
				<button label="Baud Rate Generation" define="SSC1_TEMP_BRG">
					<radio define="SSC1_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="SSC1_AUTO_BAUDRATE" default="1 MBaud">
								<item label="10 kBaud" lockon="SSC1_MAN_BAUDRATE=10"/>
								<item label="100 kBaud" lockon="SSC1_MAN_BAUDRATE=100"/>
								<item label="500 kBaud" lockon="SSC1_MAN_BAUDRATE=500"/>
								<item label="1 MBaud" lockon="SSC1_MAN_BAUDRATE=1000"/>
								<item label="5 MBaud" lockon="SSC1_MAN_BAUDRATE=5000"/>
								<item label="10 MBaud" lockon="SSC1_MAN_BAUDRATE=10000"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="SSC1_AUTO_BAUDRATE=1 MBaud">
							<edit label="Baudrate [kBaud]" define="SSC1_MAN_BAUDRATE" default="1000"/>
						</button>
					</radio>
					<math label="Reload Value" define="SSC1_BR[15:0]" formula="trunc((SSC1_TEMP_CLK/(2000*SSC1_MAN_BAUDRATE)*1000000)-0.5)" />
					<math label="Effective Baud Rate" unit="kBaud" define="SSC1_TEMP_BR" formula="1000*SCU_PLL_fPLL/(2*(SSC1_BR[15:0]+1))" />
				</button>
				<branch label="Error Enable">
					<button label="Transmit Error Enable" define="SSC1_CON[8]" />
					<button label="Receive Error Enable" define="SSC1_CON[9]" />
					<button label="Phase Error Enable" define="SSC1_CON[10]" />
					<button label="Baud Rate Error Enable" define="SSC1_CON[11]">
						<combo label="Automatic Reset Enable" define="SSC1_CON[12]">
							<item label="No additional action upon a baud rate error" />
							<item label="The SSC is automatically reset upon a baud rate error" />
						</combo>
					</button>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="SSC1_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[8]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN1[2]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC1_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="SSC1_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[8]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN1[1]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC1_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Error" define="SSC1_ERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[8]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN1[0]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC1_ERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<radio define="SSC1_TEMP_MS">
						<button label="Slave Mode">
							<combo label="Transmitter Output Select" define="SSC1_TEMP_SOS" default="none">
								<item label="none" />
								<item label="P0.4 (MRST_1_0)" lockon="PORT_P0_DIR[4]=Output;PORT_P0_4_ALT[1:0]=MRST_1_0" />
							</combo>
							<combo label="Receiver Input Select" define="SSC1_TEMP_SIS" default="none">
								<item label="none" value="2" />
								<item label="P0.2 (MTSR_1)" lockon="PORT_P0_DIR[2]=Input" value="0" />
							</combo>
							<combo label="Clock Input Select" define="SSC1_TEMP_CIS" default="none">
								<item label="none" value="2" />
								<item label="P0.3 (SCLK_1)" lockon="PORT_P0_DIR[3]=Input" value="0" />
							</combo>
						</button>
						<button label="Master Mode">
							<combo label="Transmitter Output Select" define="SSC1_TEMP_MOS" default="none">
								<item label="none" />
								<item label="P0.2 (MTSR_1)" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=MTSR_1" />
							</combo>
							<combo label="Receiver Input Select" define="SSC1_TEMP_MIS" default="none">
								<item label="none" value="4" />
								<item label="P0.4 (MRST_1_0)" lockon="PORT_P0_DIR[4]=Input" value="0" />
								<item label="P2.4 (MRST_1_1)" lockon="PORT_P2_DIR[4]=Input" value="1" />
								<item label="P0.1 (MRST_1_2)" lockon="PORT_P0_DIR[1]=Input" value="2" />
								<item label="P1.4 (MRST_1_3)" lockon="PORT_P1_DIR[4]=Input" value="3" />
							</combo>
							<combo label="Clock Output Select" define="SSC1_TEMP_COS" default="none">
								<item label="none" />
								<item label="P0.3 (SCK_1)" lockon="PORT_P0_DIR[3]=Output;PORT_P0_3_ALT[1:0]=SCK_1" />
							</combo>
						</button>
					</radio>
					<math label="" define="SSC1_PISEL" formula="(SSC1_TEMP_MIS.*0x2)*4+(SSC1_TEMP_CIS.*0x1)*4+(SSC1_TEMP_SIS.*0x1)*2+(SSC1_TEMP_MIS.*0x1)" />
				</branch>
			</button>
			<button label="Configure SSC2" define="SSC2_CON[15]">
				<math label="SSC2 Clock" unit="MHz" define="SSC2_TEMP_CLK" formula="SCU_PLL_fPLL"/>
				<math label="Max. Baud Rate" unit="kBaud" formula="1000*SCU_PLL_fPLL/2" />
				<branch label="Mode Select">
					<combo label="Master Select" define="SSC2_CON[14]">
						<item label="Slave Mode" lockon="SSC2_TEMP_BRG=0;SSC2_TEMP_MS=0" />
						<item label="Master Mode" lockon="SSC2_TEMP_BRG=1;SSC2_TEMP_MS=1" />
					</combo>
					<combo label="Data Width Selection" define="SSC2_CON[3:0]" default="2 bits">
						<item label="2 bits" value="1" />
						<item label="3 bits" value="2" />
						<item label="4 bits" value="3" />
						<item label="5 bits" value="4" />
						<item label="6 bits" value="5" />
						<item label="7 bits" value="6" />
						<item label="8 bits" value="7" />
						<item label="9 bits" value="8" />
						<item label="10 bits" value="9" />
						<item label="11 bits" value="10" />
						<item label="12 bits" value="11" />
						<item label="13 bits" value="12" />
						<item label="14 bits" value="13" />
						<item label="15 bits" value="14" />
						<item label="16 bits" value="15" />
					</combo>
					<combo label="Heading Control" define="SSC2_CON[4]">
						<item label="Transmit/Receive LSB First" />
						<item label="Transmit/Receive MSB First" />
					</combo>
					<combo label="Clock Phase Control" define="SSC2_CON[5]">
						<item label="Shift transmit data on the leading clock edge, latch on trailing edge" />
						<item label="Latch receive data on leading clock edge, shift on trailing edge" />
					</combo>
					<combo label="Clock Polarity Control" define="SSC2_CON[6]">
						<item label="Idle clock line is low, leading clock edge is low-to-high transition" />
						<item label="Idle clock line is high, leading clock edge is high-to-low transition" />
					</combo>
					<combo label="Loop Back Control" define="SSC2_CON[7]">
						<item label="Normal output" />
						<item label="Receive input is connected with transmit output (half-duplex mode)" />
					</combo>
				</branch>
				<button label="Baud Rate Generation" define="SSC2_TEMP_BRG">
					<radio define="SSC2_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="SSC2_AUTO_BAUDRATE" default="1 MBaud">
								<item label="10 kBaud" lockon="SSC2_MAN_BAUDRATE=10"/>
								<item label="100 kBaud" lockon="SSC2_MAN_BAUDRATE=100"/>
								<item label="500 kBaud" lockon="SSC2_MAN_BAUDRATE=500"/>
								<item label="1 MBaud" lockon="SSC2_MAN_BAUDRATE=1000"/>
								<item label="5 MBaud" lockon="SSC2_MAN_BAUDRATE=5000"/>
								<item label="10 MBaud" lockon="SSC2_MAN_BAUDRATE=10000"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="SSC2_AUTO_BAUDRATE=1 MBaud">
							<edit label="Baudrate [kBaud]" define="SSC2_MAN_BAUDRATE" default="1000"/>
						</button>
					</radio>
					<math label="Reload Value" define="SSC2_BR[15:0]" formula="trunc((SSC2_TEMP_CLK/(2000*SSC2_MAN_BAUDRATE)*1000000)-0.5)" />
					<math label="Effective Baud Rate" unit="kBaud" define="SSC2_TEMP_BR" formula="1000*SCU_PLL_fPLL/(2*(SSC2_BR[15:0]+1))" />
				</button>
				<branch label="Error Enable">
					<button label="Transmit Error Enable" define="SSC2_CON[8]" />
					<button label="Receive Error Enable" define="SSC2_CON[9]" />
					<button label="Phase Error Enable" define="SSC2_CON[10]" />
					<button label="Baud Rate Error Enable" define="SSC2_CON[11]">
						<combo label="Automatic Reset Enable" define="SSC2_CON[12]">
							<item label="No additional action upon a baud rate error" />
							<item label="The SSC is automatically reset upon a baud rate error" />
						</combo>
					</button>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="SSC2_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[9]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN2[2]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC2_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="SSC2_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[9]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN2[1]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC2_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Error" define="SSC2_ERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[9]=1">			
						<button label="Enable Interrupt" define="SCU_MODIEN2[0]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC2_ERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<radio define="SSC2_TEMP_MS">
						<button label="Slave Mode">
							<combo label="Transmitter Output Select" define="SSC2_TEMP_SOS" default="none">
								<item label="none" />
								<item label="P1.2 (MRST_2_0)" lockon="PORT_P1_DIR[2]=Output;PORT_P1_2_ALT[1:0]=MRST_2_0" />
							</combo>
							<combo label="Receiver Input Select" define="SSC2_TEMP_SIS" default="none">
								<item label="none" value="2" />
								<item label="P1.1 (MTSR_2)" lockon="PORT_P1_DIR[1]=Input" value="0" />
							</combo>
							<combo label="Clock Input Select" define="SSC2_TEMP_CIS" default="none">
								<item label="none" value="2" />
								<item label="P1.0 (SCLK_2)" lockon="PORT_P1_DIR[0]=Input" value="0" />
							</combo>
						</button>
						<button label="Master Mode">
							<combo label="Transmitter Output Select" define="SSC2_TEMP_MOS" default="none">
								<item label="none" />
								<item label="P1.1 (MTSR_2)" lockon="PORT_P1_DIR[1]=Output;PORT_P1_1_ALT[1:0]=MTSR_2" />
							</combo>
							<combo label="Receiver Input Select" define="SSC2_TEMP_MIS" default="none">
								<item label="none" value="4" />
								<item label="P1.2 (MRST_2_0)" lockon="PORT_P1_DIR[2]=Input" value="0" />
								<item label="P2.5 (MRST_2_1)" value="1" />
							</combo>
							<combo label="Clock Output Select" define="SSC2_TEMP_COS" default="none">
								<item label="none" />
								<item label="P1.0 (SCK_2)" lockon="PORT_P1_DIR[0]=Output;PORT_P1_0_ALT[1:0]=SCK_2" />
							</combo>
						</button>
					</radio>
					<math label="" define="SSC2_PISEL" formula="(SSC2_TEMP_MIS.*0x2)*4+(SSC2_TEMP_CIS.*0x1)*4+(SSC2_TEMP_SIS.*0x1)*2+(SSC2_TEMP_MIS.*0x1)" />
				</branch>
			</button>
		</header>
	</module>
	<module label="LIN" desc="LIN Transceiver">
		<header define="lin_defines.h">
			<button label="Configure LIN" define="LIN_Configuration_En">
				<combo label="Tranceiver Mode" define="LIN_CTRL_STS[2:1]" default="Normal">
					<item label="Sleep Mode" value="0"/>
					<item label="Receive-Only" value="1"/>
					<item label="Normal" value="3"/>
				</combo>
				<combo label="Slope Mode" define="LIN_CTRL_STS[12:11]" default="Normal - 20kBaud">
					<item label="Low    - 10.4kBaud" value="2"/>
					<item label="Normal - 20kBaud" value="0"/>
					<item label="Fast   - 40kBaud" value="1"/>
					<item label="Flash  - 150kBaud" value="3"/>
				</combo>
				<button label="High Voltage I/O Mode enable" define="LIN_CTRL_STS[21]"/>
				<branch label="Diagnostic Interrupt">
					<button label="Over Current" define="LIN_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[0]" header="int_defines.h"/>
						<edit label="Call Back" define="LIN_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Over Temperature" define="LIN_OT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[1]" header="int_defines.h"/>
						<edit label="Call Back" define="LIN_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="TxD Timeout" define="LIN_TMOUT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
						<button label="Enable Interrupt" define="SCU_SYS_IRQ_CTRL[2]" header="int_defines.h"/>
						<edit label="Call Back" define="LIN_TMOUT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="LIN Synch Detection">
					<edit label="Master Baudrate [baud]" define="LIN_MASTER_BAUDRATE" default="19200"/>
					<math label="" define="SCU_LINST[2:1]" formula="SCU_FSYS/LIN_MASTER_BAUDRATE>576?3:SCU_FSYS/LIN_MASTER_BAUDRATE>288?2:SCU_FSYS/LIN_MASTER_BAUDRATE>144?1:0"/>
					<button label="Baudrate detection (Timer2)" define="LIN_AUTOBAUD_EN" lockon="TIMER2_Configuration_En=1;TIMER2_T2CON[1]=0;TIMER2_T2CON[0]=1;TIMER2_T2CON[3]=1;TIMER2_T2MOD[5]=0;TIMER2_T2MOD[6]=1;TIMER2_T2MOD[7]=0;TIMER2_T2MOD[4]=1;TIMER2_T2MOD[3:1]=divide by 1;SCU_MODPISEL1[6]=0;SCU_MODPISEL2[5:4]=0">
					</button>
					<branch label="Interrupt">
						<button label="End-of-Synch" define="LIN_EOF_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
							<button label="Enable Interrupt" define="LIN_SYNC[0]" header="lin_defines.h"/>
							<edit label="Call Back" define="LIN_EOF_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
						</button>
						<button label="Error-in-Synch" define="LIN_ERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[10]=1">			
							<button label="Enable Interrupt" define="LIN_SYNC[1]" header="lin_defines.h"/>
							<edit label="Call Back" define="LIN_ERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
						</button>
						<math label="" define="SCU_LINST[6]" formula="LIN_SYNC[0] .+ LIN_SYNC[1]"/>
					</branch>
				</branch>
			</button>
		</header>
	</module>
	<module label="CSA" desc="Current Sense Amplifier">
		<header define="csa_defines.h">
			<button label="CSA enable" define="CSA_CTRL[0]">
				<combo label="Gain" define="CSA_CTRL[4:1]" default="40">
					<item label="10" value="0"/>
					<item label="20" value="1"/>
					<item label="40" value="2"/>
					<item label="60" value="3"/>
				</combo>
			</button>
		</header>
	</module>
	<module label="DMA" desc="Direct Memory Access">
		<header define="dma_defines.h">
			<button label="DMA enable" define="DMA_CFG[0]">
				<combo label="Base Address for DMA Struct" define="DMA_BASE_ADDR[31:0]" default="0x18000400" header="dma_defines.h">
					<item label="0x18000000" value="0x18000000"/>
					<item label="0x18000200" value="0x18000200"/>
					<item label="0x18000400" value="0x18000400"/>
					<item label="0x18000600" value="0x18000600"/>
					<item label="0x18000800" value="0x18000800"/>
					<item label="0x18000A00" value="0x18000A00"/>
					<item label="0x18000C00 (only 6KB derivates)" value="0x18000C00"/>
					<item label="0x18000E00 (only 6KB derivates)" value="0x18000E00"/>
					<item label="0x18001000 (only 6KB derivates)" value="0x18001000"/>
					<item label="0x18001200 (only 6KB derivates)" value="0x18001200"/>
					<item label="0x18001400 (only 6KB derivates)" value="0x18001400"/>
					<item label="0x18001600 (only 6KB derivates)" value="0x18001600"/>
				</combo>
				<button label="Ch0 - ADC1 Sequence" define="DMA_EN[0]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH0_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH0_SRC_SEL">
									<button label="ADC1 Result Registers" lockon="DMA_CH0_INC[0]=0">
										<combo label="ADC1 Result Register Select" define="DMA_CH0_SRC_ADC1">
											<item label="ADC1 Channel 0 (P2.0)" lockon="DMA_CH0_SRC=ADC1->RES_OUT0.reg"/>
											<item label="ADC1 Channel 1 (P2.1/OpAmp)" lockon="DMA_CH0_SRC=ADC1->RES_OUT1.reg"/>
											<item label="ADC1 Channel 2 (P2.2)" lockon="DMA_CH0_SRC=ADC1->RES_OUT2.reg"/>
											<item label="ADC1 Channel 3 (P2.3)" lockon="DMA_CH0_SRC=ADC1->RES_OUT3.reg"/>
											<item label="ADC1 Channel 4 (P2.4)" lockon="DMA_CH0_SRC=ADC1->RES_OUT4.reg"/>
											<item label="ADC1 Channel 5 (P2.5)" lockon="DMA_CH0_SRC=ADC1->RES_OUT5.reg"/>
											<item label="ADC1 Channel 6 (VDH)" lockon="DMA_CH0_SRC=ADC1->RES_OUT6.reg"/>
											<item label="ADC1 Channel 7 (P2.7)" lockon="DMA_CH0_SRC=ADC1->RES_OUT7.reg"/>
										</combo>
									</button>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH0_SRC" default="ADC1->RES_OUT_EIM.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH0_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH0_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH0_DST" default="enter destination location" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH0_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH0_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH0_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH0_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH0_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH0_INC[0]&lt;1?0:(2^DMA_CH0_SIZE)*(DMA_CH0_NoOfTrans-1)"/>
							<math label="" define="DMA_CH0_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH0_INC[1]&lt;1?0:(2^DMA_CH0_SIZE)*(DMA_CH0_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH0_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH0_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_SQ1_RDY_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN2[1]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_SQ1_RDY_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch1 - ADC1 ESM Sequence" define="DMA_EN[1]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH1_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH1_SRC_SEL">
									<button label="ADC1 Result Registers" lockon="DMA_CH1_INC[0]=0">
										<combo label="ADC1 Result Register Select" define="DMA_CH1_SRC_ADC1">
											<item label="ADC1 Channel 0 (P2.0)" lockon="DMA_CH1_SRC=ADC1->RES_OUT0.reg"/>
											<item label="ADC1 Channel 1 (P2.1/OpAmp)" lockon="DMA_CH1_SRC=ADC1->RES_OUT1.reg"/>
											<item label="ADC1 Channel 2 (P2.2)" lockon="DMA_CH1_SRC=ADC1->RES_OUT2.reg"/>
											<item label="ADC1 Channel 3 (P2.3)" lockon="DMA_CH1_SRC=ADC1->RES_OUT3.reg"/>
											<item label="ADC1 Channel 4 (P2.4)" lockon="DMA_CH1_SRC=ADC1->RES_OUT4.reg"/>
											<item label="ADC1 Channel 5 (P2.5)" lockon="DMA_CH1_SRC=ADC1->RES_OUT5.reg"/>
											<item label="ADC1 Channel 6 (VDH)" lockon="DMA_CH1_SRC=ADC1->RES_OUT6.reg"/>
											<item label="ADC1 Channel 7 (P2.7)" lockon="DMA_CH1_SRC=ADC1->RES_OUT7.reg"/>
										</combo>
									</button>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH1_SRC" default="ADC1->RES_OUT0.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH1_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH1_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH1_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH1_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH1_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH1_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH1_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH1_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH1_INC[0]&lt;1?0:(2^DMA_CH1_SIZE)*(DMA_CH1_NoOfTrans-1)"/>
							<math label="" define="DMA_CH1_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH1_INC[1]&lt;1?0:(2^DMA_CH1_SIZE)*(DMA_CH1_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH1_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH1_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_SQ2_RDY_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN2[2]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_SQ2_RDY_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch2 - SSC1 Transmit" define="DMA_EN[2]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH2_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<edit label="enter source reference" role="string" define="DMA_CH2_SRC" default="enter source reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH2_SRC_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH2_INC[0]"/>
							</branch>
							<branch label="Destination">
								<radio define="DMA_CH2_DST_SEL">
									<button label="SSC1 Transmit Buffer" lockon="DMA_CH2_DST=SSC1->TB.reg;DMA_CH2_INC[1]=0"/>
									<button label="user defined source">
										<edit label="enter destination reference" role="string" define="DMA_CH2_DST" default="SSC1->TB.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH2_DST_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH2_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH2_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH2_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH2_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH2_INC[0]&lt;1?0:(2^DMA_CH2_SIZE)*(DMA_CH2_NoOfTrans-1)"/>
							<math label="" define="DMA_CH2_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH2_INC[1]&lt;1?0:(2^DMA_CH2_SIZE)*(DMA_CH2_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH2_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH2_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_SSC_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN2[3]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_SSC_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch3 - SSC1 Receive" define="DMA_EN[3]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH3_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH3_SRC_SEL">
									<button label="SSC1 Receive Buffer" lockon="DMA_CH3_SRC=SSC1->RB.reg;DMA_CH3_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH3_SRC" default="SSC1->RB.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH3_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH3_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH3_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH3_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH3_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH3_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH3_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH3_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH3_INC[0]&lt;1?0:(2^DMA_CH3_SIZE)*(DMA_CH3_NoOfTrans-1)"/>
							<math label="" define="DMA_CH3_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH3_INC[1]&lt;1?0:(2^DMA_CH3_SIZE)*(DMA_CH3_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH3_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH3_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_SSC_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN2[4]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_SSC_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch4 - ADC1 Channel 0 (P2.0)" define="DMA_EN[4]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH4_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH4_SRC_SEL">
									<button label="ADC1 Channel 0 (P2.0) Result Register" lockon="DMA_CH4_SRC=ADC1->RES_OUT0.reg;DMA_CH4_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH4_SRC" default="ADC1->RES_OUT0.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH4_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH4_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH4_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH4_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH4_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH4_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH4_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH4_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH4_INC[0]&lt;1?0:(2^DMA_CH4_SIZE)*(DMA_CH4_NoOfTrans-1)"/>
							<math label="" define="DMA_CH4_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH4_INC[1]&lt;1?0:(2^DMA_CH4_SIZE)*(DMA_CH4_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH4_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH4_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH1_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[0]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH1_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch5 - ADC1 Channel 1 (P2.1/OpAmp)" define="DMA_EN[5]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH5_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH5_SRC_SEL">
									<button label="ADC1 Channel 1 (P2.1/OpAmp) Result Register" lockon="DMA_CH5_SRC=ADC1->RES_OUT1.reg;DMA_CH5_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH5_SRC" default="ADC1->RES_OUT1.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH5_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH5_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH5_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH5_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH5_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH5_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH5_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH5_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH5_INC[0]&lt;1?0:(2^DMA_CH5_SIZE)*(DMA_CH5_NoOfTrans-1)"/>
							<math label="" define="DMA_CH5_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH5_INC[1]&lt;1?0:(2^DMA_CH5_SIZE)*(DMA_CH5_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH5_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH5_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[1]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch6 - ADC1 Channel 2 (P2.2)" define="DMA_EN[6]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH6_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH6_SRC_SEL">
									<button label="ADC1 Channel 2 (P2.2) Result Register" lockon="DMA_CH6_SRC=ADC1->RES_OUT2.reg;DMA_CH6_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH6_SRC" default="ADC1->RES_OUT2.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH6_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH6_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH6_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH6_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH6_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH6_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH6_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH6_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH6_INC[0]&lt;1?0:(2^DMA_CH6_SIZE)*(DMA_CH6_NoOfTrans-1)"/>
							<math label="" define="DMA_CH6_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH6_INC[1]&lt;1?0:(2^DMA_CH6_SIZE)*(DMA_CH6_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH6_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH6_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH3_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[2]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH3_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch7 - ADC1 Channel 3 (P2.3)" define="DMA_EN[7]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH7_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH7_SRC_SEL">
									<button label="ADC1 Channel 3 (P2.3) Result Register" lockon="DMA_CH7_SRC=ADC1->RES_OUT3.reg;DMA_CH7_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH7_SRC" default="ADC1->RES_OUT3.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH7_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH7_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH7_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH7_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH7_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH7_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH7_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH7_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH7_INC[0]&lt;1?0:(2^DMA_CH7_SIZE)*(DMA_CH7_NoOfTrans-1)"/>
							<math label="" define="DMA_CH7_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH7_INC[1]&lt;1?0:(2^DMA_CH7_SIZE)*(DMA_CH7_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH7_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH7_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH4_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[3]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH4_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch8 - ADC1 Channel 4 (P2.4)" define="DMA_EN[8]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH8_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH8_SRC_SEL">
									<button label="ADC1 Channel 4 (P2.4) Result Register" lockon="DMA_CH8_SRC=ADC1->RES_OUT4.reg;DMA_CH8_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH8_SRC" default="ADC1->RES_OUT4.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH8_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH8_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH8_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH8_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH8_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH8_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH8_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH8_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH8_INC[0]&lt;1?0:(2^DMA_CH8_SIZE)*(DMA_CH8_NoOfTrans-1)"/>
							<math label="" define="DMA_CH8_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH8_INC[1]&lt;1?0:(2^DMA_CH8_SIZE)*(DMA_CH8_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH8_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH8_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH5_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[4]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH5_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch9 - ADC1 Channel 5 / CCU6" define="DMA_EN[9]" header="dma_defines.h">
					<combo label="Trigger Select" define="SCU_DMASRCSEL[2]" default="0" header="scu_defines.h">
						<item label="ADC1 Channel 5 (P2.5)"/>
						<item label="CCU6-Timer12 Zero Match" lockon="DMA_CH9_SRC_SEL=1"/>
					</combo>
					<radio label="DMA Transfer Mode" define="DMA_CH9_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH9_SRC_SEL">
									<button label="ADC1 Channel 5 (P2.5) Result Register" lockon="DMA_CH9_SRC=ADC1->RES_OUT5.reg;DMA_CH9_INC[0]=0;DMA_CH9_SRC_EXT=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH9_SRC" default="ADC1->RES_OUT5.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH9_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH9_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH9_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH9_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH9_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH9_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH9_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH9_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH9_INC[0]&lt;1?0:(2^DMA_CH9_SIZE)*(DMA_CH9_NoOfTrans-1)"/>
							<math label="" define="DMA_CH9_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH9_INC[1]&lt;1?0:(2^DMA_CH9_SIZE)*(DMA_CH9_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH9_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH9_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH6_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[5]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH6_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch10 - ADC1 Channel 6 (VDH)" define="DMA_EN[10]" header="dma_defines.h">
					<radio label="DMA Transfer Mode" define="DMA_CH10_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<radio define="DMA_CH10_SRC_SEL">
									<button label="ADC1 Channel 6 (VDH) Result Register" lockon="DMA_CH10_SRC=ADC1->RES_OUT6.reg;DMA_CH10_INC[0]=0"/>
									<button label="user defined source">
										<edit label="enter source reference" role="string" define="DMA_CH10_SRC" default="ADC1->RES_OUT6.reg" header="dma_defines.h"/>
										<button label="declare as 'extern' in C-code" define="DMA_CH10_SRC_EXT" dafault="0" header="dma_defines.h"/>
									</button>
								</radio>
								<button label="Increment" define="DMA_CH10_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH10_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH10_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH10_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH10_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH10_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH10_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH10_INC[0]&lt;1?0:(2^DMA_CH10_SIZE)*(DMA_CH10_NoOfTrans-1)"/>
							<math label="" define="DMA_CH10_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH10_INC[1]&lt;1?0:(2^DMA_CH10_SIZE)*(DMA_CH10_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH10_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH10_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH7_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[6]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH7_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch11 - ADC1 Channel 7 / CCU6" define="DMA_EN[11]" header="dma_defines.h">
					<combo label="Trigger Select" define="SCU_DMASRCSEL[3]" default="0" header="scu_defines.h">
						<item label="ADC1 Channel 7 (P2.7)" lockon="DMA_CH11_SRC=ADC1->RES_OUT7.reg;DMA_CH11_INC[0]=0;DMA_CH11_SRC_EXT=0"/>
						<item label="CCU6-Timer12 Period Match"/>
					</combo>
					<radio label="DMA Transfer Mode" define="DMA_CH11_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<edit label="enter source reference" role="string" define="DMA_CH11_SRC" default="enter source reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH11_SRC_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH11_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH11_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH11_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH11_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH11_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH11_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH11_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH11_INC[0]&lt;1?0:(2^DMA_CH11_SIZE)*(DMA_CH11_NoOfTrans-1)"/>
							<math label="" define="DMA_CH11_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH11_INC[1]&lt;1?0:(2^DMA_CH11_SIZE)*(DMA_CH11_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH11_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH11_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_CH8_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN1[7]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_CH8_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
				<button label="Ch12 - GPT12E / TIMER3" define="DMA_EN[12]" header="dma_defines.h">
					<combo label="Trigger Select" define="SCU_DMASRCSEL2[1:0]" default="0" header="scu_defines.h">
						<item label="TIMER3 Mode 1b"/>
						<item label="GPT1-T3OUT"/>
						<item label="TIMER3 Mode 1b, CCU6-Timer12 Zero Match"/>
						<item label="GPT1-T3OUT, CCU6-Timer12 Zero Match"/>
					</combo>
					<radio label="DMA Transfer Mode" define="DMA_CH12_TRANS_MODE" default="0" header="dma_defines.h">
						<button label="Basic Mode">
							<branch label="Source">
								<edit label="enter source reference" role="string" define="DMA_CH12_SRC" default="enter source reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH12_SRC_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH12_INC[0]"/>
							</branch>
							<branch label="Destination">
								<edit label="enter destination reference" role="string" define="DMA_CH12_DST" default="enter destination reference" header="dma_defines.h"/>
								<button label="declare as 'extern' in C-code" define="DMA_CH12_DST_EXT" dafault="0" header="dma_defines.h"/>
								<button label="Increment" define="DMA_CH12_INC[1]"/>
							</branch>
							<edit label="Number of Transfers" define="DMA_CH12_NoOfTrans" default="1" header="dma_defines.h"/>
							<combo label="Transfere Size" define="DMA_CH12_SIZE" default="Word (16-bit)">
								<item label="Byte (8-bit)"/>
								<item label="Word (16-bit)"/>
								<item label="DWord (32-bit)"/>
							</combo>
							<math label="" define="DMA_CH12_SRC_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH12_INC[0]&lt;1?0:(2^DMA_CH12_SIZE)*(DMA_CH12_NoOfTrans-1)"/>
							<math label="" define="DMA_CH12_DST_PTR_OFFS"  header="dma_defines.h" formula="DMA_CH12_INC[1]&lt;1?0:(2^DMA_CH12_SIZE)*(DMA_CH12_NoOfTrans-1)"/>
						</button>
						<button label="Scatter-Gather Mode">
							<edit label="Enter Task List reference" role="string" define="DMA_CH12_TASK_SRC" default="enter source reference" header="dma_defines.h"/>
							<edit label="Enter Number of Tasks" define="DMA_CH12_TASK_NoOfTasks" default="0" header="dma_defines.h"/>
						</button>
					</radio>
					<button label="Interrupt on DMA complete" define="DMA_GPT12E_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER0[15]=1">			
						<button label="Enable Interrupt" define="SCU_DMAIEN2[5]" header="int_defines.h"/>
						<edit label="Call Back" define="DMA_GPT12E_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
		</header>
	</module>
</ifxmlcfg>
